<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>MySQL</title>
    <url>/posts/helloMySQL.html</url>
    <content><![CDATA[<h1 id="MySQL入门教程"><a href="#MySQL入门教程" class="headerlink" title="MySQL入门教程"></a>MySQL入门教程</h1><h1 id="1、初识MySQL"><a href="#1、初识MySQL" class="headerlink" title="1、初识MySQL"></a>1、初识MySQL</h1><blockquote>
<p>去年刚开始学java的时候，看的狂神老师的视频，现在整合一下之前做的笔记，发布出来供大家参考</p>
</blockquote>
<p>javaEE：企业级java开发 Web</p>
<p>前端（页面：展示，数据）</p>
<p>后台（连接点：连接数据库JDBC，连接前端（控制试图跳转，和给前端传递数据）</p>
<p>数据库（存数据，Txt，Excel，word）</p>
<blockquote>
<p>只会敲代码，学好数据库，基本混饭吃</p>
<p>操作系统，<a href="https://so.csdn.net/so/search?q=%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84&spm=1001.2101.3001.7020">数据结构</a>算法，一个不错的程序员</p>
<p><a href="https://so.csdn.net/so/search?q=%E7%A6%BB%E6%95%A3&spm=1001.2101.3001.7020">离散</a>数学，数字电路，体系结构，编译原理+实战经验</p>
</blockquote>
<span id="more"></span>

<h2 id="1-1、为什么要学数据库"><a href="#1-1、为什么要学数据库" class="headerlink" title="1.1、为什么要学数据库"></a>1.1、为什么要学数据库</h2><p>1.岗位需求</p>
<p>2.现在是大数据时代~，得数据中获得天下</p>
<p>3.被迫需求:存数据</p>
<p>4.数据库是所有软件体系最核心的存在 DBA</p>
<h2 id="1-2、什么是数据库"><a href="#1-2、什么是数据库" class="headerlink" title="1.2、什么是数据库"></a>1.2、什么是数据库</h2><p>数据库（DB , DataBase）</p>
<p>概念：数据仓库，软件，安装在操作系统（window，linux，mac）之上，可以存大量的数据</p>
<h2 id="1-3、数据库分类"><a href="#1-3、数据库分类" class="headerlink" title="1.3、数据库分类"></a>1.3、数据库分类</h2><p>关系型数据库：SQL</p>
<ul>
<li>MySql ，Qracle，Sqlrver, DB2, SQLlite</li>
<li>通过表和表之间，行和列之间的关系</li>
</ul>
<p>非关系型数据库 NOSQL Not Only</p>
<ul>
<li>Redis，MongDB</li>
<li>非关系型数据库，对象存储，通过对象自身的属性来决定</li>
</ul>
<p>DBMS（数据库管理系统）</p>
<ul>
<li>数据库的管理软件，科学有效的管理数据，维护和获取数据</li>
<li>MySQL，数据库管理系统</li>
</ul>
<p>1.4、MySQL介绍</p>
<p>关系型数据库管理系统</p>
<p>开源的数据库软件</p>
<p>体积小，速度快，成本低，招人成本低</p>
<h2 id="1-4、连接数据库"><a href="#1-4、连接数据库" class="headerlink" title="1.4、连接数据库"></a>1.4、连接数据库</h2><h3 id="MySQL服务的启动和停止"><a href="#MySQL服务的启动和停止" class="headerlink" title="MySQL服务的启动和停止"></a><strong>MySQL服务的启动和停止</strong></h3><ul>
<li>第一种方式，右键计算机-&gt;管理-&gt;服务和应用程序-&gt;服务-&gt;找到MySQL</li>
<li>第二种方式，cmd打开命令行窗口<br>启动：<code>net start mysql</code><br>停止：<code>net stop mysql</code></li>
</ul>
<h4 id="MySQL的登录-x2F-退出"><a href="#MySQL的登录-x2F-退出" class="headerlink" title="MySQL的登录&#x2F;退出"></a><strong>MySQL的登录&#x2F;退出</strong></h4><ul>
<li>方式一：通过MySQL自带客户端 只限于root用户<br>（现在系统变量Path配置MySQL）</li>
<li>方式二：命令行窗口<br><strong>登陆</strong>：<code>mysql [-h localhost] [-P 3306] -u root -p（[...]代表可选，连接本机可省略）</code><br><strong>退出</strong>：<code>exit</code></li>
</ul>
<h3 id="命令连接"><a href="#命令连接" class="headerlink" title="命令连接"></a>命令连接</h3><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">mysql <span class="operator">-</span>uroot <span class="operator">-</span>p密码  <span class="comment">--连接数据库</span></span><br><span class="line">updete mysql.user <span class="keyword">set</span> authentication_string<span class="operator">=</span>password(<span class="string">&#x27;密码&#x27;</span>)<span class="keyword">where</span> <span class="keyword">user</span><span class="operator">=</span><span class="string">&#x27;root&#x27;</span><span class="keyword">and</span> Host<span class="operator">=</span><span class="string">&#x27;localost&#x27;</span>;<span class="comment">--修改用户名密码</span></span><br><span class="line">flush privileges<span class="comment">--刷新权限</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">-----------------------</span></span><br><span class="line">所有语句&quot;;&quot;结尾</span><br><span class="line"><span class="keyword">show</span> databases <span class="comment">---查看全部的数据库</span></span><br><span class="line"><span class="keyword">user</span> 数据库名字  <span class="comment">---查看数据库</span></span><br><span class="line"><span class="keyword">show</span> tables <span class="comment">----查看数据库表里的名字</span></span><br><span class="line"><span class="keyword">describe</span> 表名字<span class="comment">----显示数据库里面表的信息</span></span><br><span class="line"> <span class="keyword">create</span> database 数据库名字<span class="comment">--创建一个数据库</span></span><br><span class="line"> exit<span class="comment">--退出连接</span></span><br><span class="line"> #</span><br><span class="line"> <span class="comment">--单行注释</span></span><br><span class="line"> <span class="comment">/*</span></span><br><span class="line"><span class="comment"> 多行注释</span></span><br><span class="line"><span class="comment"> </span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="number">12345678910111213141516171819</span></span><br></pre></td></tr></table></figure>

<p>DDL 数据库定义语言</p>
<p>DML 数据库操作语言</p>
<p>DQL 数据库查询语言</p>
<p>DCL 数据库控制语言</p>
<h1 id="2、操作数据库"><a href="#2、操作数据库" class="headerlink" title="2、操作数据库"></a>2、操作数据库</h1><h2 id="2-1、操作数据库"><a href="#2-1、操作数据库" class="headerlink" title="2.1、操作数据库"></a>2.1、操作数据库</h2><p>1、创建数据库</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> DATABASE [IF <span class="keyword">NOT</span> <span class="keyword">EXISTS</span>] znb;</span><br><span class="line"><span class="number">1</span></span><br></pre></td></tr></table></figure>

<p>2、删除数据库</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">DROP</span> DATABASE [IF <span class="keyword">EXISTS</span>] znb;</span><br><span class="line"><span class="number">1</span></span><br></pre></td></tr></table></figure>

<p>3.使用数据库</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">USE school</span><br><span class="line"><span class="number">1</span></span><br></pre></td></tr></table></figure>

<p>4.查看数据库</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">SHOW</span> DATABASES ;查看所有的数据库</span><br><span class="line"><span class="number">1</span></span><br></pre></td></tr></table></figure>

<p>2.2、数据库的列类型</p>
<blockquote>
<p>数值</p>
</blockquote>
<ul>
<li>tinyint 十分小的数据 一个字节</li>
<li>smallint 较小的数据 ， 两个字节</li>
<li>mediumint 中等大小的数据 三个字节</li>
<li>int 标准的整数 四个字节</li>
<li>big 较大的数据 八个字节</li>
<li>float 浮点数 四个字节</li>
<li>double 浮点数 八个字节（精度问题）</li>
<li>decimal 字符串形式的浮点数 金融计算的时候，一般用decimal</li>
</ul>
<blockquote>
<p>字符串</p>
</blockquote>
<ul>
<li>char 字符串固定大小 0~255</li>
<li><strong>varchar 可变字符串 0~65535</strong> 常用的String</li>
<li>tinytext 微形文本 2^8-1</li>
<li>text 文本穿 2^16-1</li>
</ul>
<blockquote>
<p>时间日期</p>
</blockquote>
<p>java,util.Date</p>
<ul>
<li>date yyyy-mm-dd,日期</li>
<li>time hh：mm：ss 时间格式</li>
<li><strong>datetime yyyy-mm-dd hh：mm：ss 最常用的时间格式</strong></li>
<li><strong>timestamp 时间戳 1970.1.1到现在的毫秒数 较为常用</strong></li>
<li>year 年份表示</li>
</ul>
<blockquote>
<p>null</p>
</blockquote>
<ul>
<li>没有数值，未知</li>
<li>不要用null运算，结果为null</li>
</ul>
<h2 id="2-3、数据库的字段属性（重点）"><a href="#2-3、数据库的字段属性（重点）" class="headerlink" title="2.3、数据库的字段属性（重点）"></a>2.3、数据库的字段属性（重点）</h2><p>unsign</p>
<ul>
<li>无符号的整数</li>
<li>声明了该列不能声明为负数</li>
</ul>
<p>zerofill</p>
<ul>
<li>0填充</li>
<li>不足的尾数用0来填充 int（3），5.········005</li>
</ul>
<p>自增</p>
<ul>
<li>在上一条的基础上加一</li>
<li>通常设置唯一的主键盘，必须是整数</li>
<li>可以自己设定数字</li>
</ul>
<p>非空 NULL not null</p>
<ul>
<li>假如设置为非空，不填数值就报错</li>
</ul>
<p>默认</p>
<ul>
<li>设置默认值</li>
<li>sex 默认值为男，如果不指定该列的数值，都为默认</li>
</ul>
<p>拓展</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">/*每一个表都要存在以下字段</span></span><br><span class="line"><span class="comment">id 主键</span></span><br><span class="line"><span class="comment">version 乐观锁</span></span><br><span class="line"><span class="comment">is_delete 伪删除</span></span><br><span class="line"><span class="comment">gmt_create 创建时间</span></span><br><span class="line"><span class="comment">gmt_uodate修改时间</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"><span class="number">12345678</span></span><br></pre></td></tr></table></figure>

<h2 id="2-4、创建数据库表（重点）"><a href="#2-4、创建数据库表（重点）" class="headerlink" title="2.4、创建数据库表（重点）"></a>2.4、创建数据库表（重点）</h2><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> IF <span class="keyword">NOT</span> <span class="keyword">EXISTS</span> `student`</span><br><span class="line">(</span><br><span class="line">`id`<span class="type">INT</span>(<span class="number">4</span>) <span class="keyword">NOT</span> <span class="keyword">NULL</span> AUTO_INCREMENT COMMENT <span class="string">&#x27;学号&#x27;</span>,</span><br><span class="line">`pwd` <span class="type">VARCHAR</span>(<span class="number">30</span>) <span class="keyword">NOT</span> <span class="keyword">NULL</span> <span class="keyword">DEFAULT</span> <span class="string">&#x27;***&#x27;</span> COMMENT<span class="string">&#x27;密码&#x27;</span>,</span><br><span class="line">`name` <span class="type">VARCHAR</span>(<span class="number">30</span>) <span class="keyword">NOT</span> <span class="keyword">NULL</span>  <span class="keyword">DEFAULT</span> <span class="string">&#x27;张三&#x27;</span> COMMENT <span class="string">&#x27;姓名&#x27;</span>,</span><br><span class="line">`sex` <span class="type">VARCHAR</span>(<span class="number">50</span>) <span class="keyword">NOT</span> <span class="keyword">NULL</span> <span class="keyword">DEFAULT</span> <span class="string">&#x27;男&#x27;</span> COMMENT <span class="string">&#x27;性别&#x27;</span>,</span><br><span class="line">`birthday` <span class="type">VARCHAR</span> (<span class="number">20</span>) <span class="keyword">NOT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;生日&#x27;</span>,</span><br><span class="line">`address` <span class="type">VARCHAR</span>(<span class="number">30</span>) <span class="keyword">NOT</span> <span class="keyword">NULL</span> COMMENT<span class="string">&#x27;住址&#x27;</span>,</span><br><span class="line">`emill` <span class="type">VARCHAR</span> (<span class="number">30</span>) <span class="keyword">NOT</span> <span class="keyword">NULL</span> COMMENT<span class="string">&#x27;邮箱&#x27;</span>,</span><br><span class="line"><span class="keyword">PRIMARY</span> KEY(`id`)</span><br><span class="line">)ENGINE<span class="operator">=</span>INNODB <span class="keyword">DEFAULT</span> CHARSET<span class="operator">=</span>utf8</span><br><span class="line"><span class="number">1234567891011</span></span><br></pre></td></tr></table></figure>

<p>格式</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> [IF <span class="keyword">NOT</span> <span class="keyword">EXISTS</span>]`表名`</span><br><span class="line">(</span><br><span class="line">    `字段名` 类型 [属性] [索引] [注释],</span><br><span class="line">     `字段名` 类型 [属性] [索引] [注释],</span><br><span class="line">     `字段名` 类型 [属性] [索引] [注释],</span><br><span class="line">    )</span><br><span class="line"><span class="number">123456</span></span><br><span class="line"> `字段名` 类型 [属性] [索引] [注释]</span><br><span class="line"><span class="number">1</span></span><br></pre></td></tr></table></figure>

<p>)[表类型][字符集设置][注释]</p>
<figure class="highlight pgsql"><table><tr><td class="code"><pre><span class="line">常用命令</span><br><span class="line"></span><br><span class="line">​```<span class="keyword">sql</span></span><br><span class="line"><span class="keyword">SHOW</span> <span class="keyword">CREATE</span> <span class="keyword">TABLE</span> student<span class="comment">--查看创建表的语句</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">SHOW</span> <span class="keyword">CREATE</span> <span class="keyword">DATABASE</span> school<span class="comment">--查看创建数据库的语句</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">DESC</span> student<span class="comment">--显示表的结构</span></span><br><span class="line"><span class="number">12345678</span></span><br></pre></td></tr></table></figure>

<h2 id="2-5、数据表的类型"><a href="#2-5、数据表的类型" class="headerlink" title="2.5、数据表的类型"></a>2.5、数据表的类型</h2><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="comment">---数据库引擎---</span></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">INNODB 默认使用</span></span><br><span class="line"><span class="comment">MYISAM 早些年使用</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="number">123456</span></span><br></pre></td></tr></table></figure>

<table>
<thead>
<tr>
<th></th>
<th>INNODB</th>
<th>MYISAM</th>
</tr>
</thead>
<tbody><tr>
<td>事务支持</td>
<td>支持</td>
<td>不支持</td>
</tr>
<tr>
<td>数据行锁定</td>
<td>支持</td>
<td>不支持</td>
</tr>
<tr>
<td>外键约束</td>
<td>支持</td>
<td>不支持</td>
</tr>
<tr>
<td>全文索引</td>
<td>不支持</td>
<td>支持</td>
</tr>
<tr>
<td>表空间的大小</td>
<td>较大，为myisam的两倍</td>
<td>较小</td>
</tr>
</tbody></table>
<p>常规使用操作</p>
<ul>
<li>MYISAM 节约空间，速度较快</li>
<li>INNODB 安全性高，事务的处理，多表多用户操作</li>
</ul>
<blockquote>
<p>在物理空间存在的位置</p>
</blockquote>
<p>所有的数据库文件都在data目录下</p>
<p>本质还是文件的存储！</p>
<p>Mysql引擎在物理引擎文件上面的区别</p>
<p>innoDB 在数据库表中只有一个*fm文件</p>
<h2 id="2-6、修改和删除"><a href="#2-6、修改和删除" class="headerlink" title="2.6、修改和删除"></a>2.6、修改和删除</h2><blockquote>
<p>修改</p>
</blockquote>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="comment">--修改表名</span></span><br><span class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> student RENAME <span class="keyword">AS</span> student1</span><br><span class="line"><span class="comment">--修改约束</span></span><br><span class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> student  MODIFY age1 <span class="type">FLOAT</span>(<span class="number">10</span>)</span><br><span class="line"><span class="comment">--修改表的属性名字</span></span><br><span class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> student CHANGE age1 age <span class="type">INT</span>(<span class="number">10</span>)</span><br><span class="line"><span class="comment">--删除表的字段</span></span><br><span class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> student <span class="keyword">DROP</span> age</span><br><span class="line"></span><br><span class="line"><span class="number">123456789</span></span><br></pre></td></tr></table></figure>

<blockquote>
<p>删除</p>
</blockquote>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"> <span class="keyword">DROP</span> <span class="keyword">TABLE</span> [IF <span class="keyword">EXISTS</span>] teacher</span><br><span class="line"><span class="number">1</span></span><br></pre></td></tr></table></figure>

<p>所有的创建删除最好加上判断，避免出错</p>
<h1 id="3、MySQL数据管理"><a href="#3、MySQL数据管理" class="headerlink" title="3、MySQL数据管理"></a>3、MySQL数据管理</h1><h2 id="3-1、外键"><a href="#3-1、外键" class="headerlink" title="3.1、外键"></a>3.1、外键</h2><blockquote>
<p>方法一：在创建表的时候增加约束</p>
</blockquote>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> IF <span class="keyword">NOT</span> <span class="keyword">EXISTS</span> `student`</span><br><span class="line">(</span><br><span class="line">`id`<span class="type">INT</span>(<span class="number">4</span>) <span class="keyword">NOT</span> <span class="keyword">NULL</span> AUTO_INCREMENT COMMENT <span class="string">&#x27;学号&#x27;</span>,</span><br><span class="line">`pwd` <span class="type">VARCHAR</span>(<span class="number">30</span>) <span class="keyword">NOT</span> <span class="keyword">NULL</span> <span class="keyword">DEFAULT</span> <span class="string">&#x27;***&#x27;</span> COMMENT<span class="string">&#x27;密码&#x27;</span>,</span><br><span class="line">`name` <span class="type">VARCHAR</span>(<span class="number">30</span>) <span class="keyword">NOT</span> <span class="keyword">NULL</span>  <span class="keyword">DEFAULT</span> <span class="string">&#x27;张三&#x27;</span> COMMENT <span class="string">&#x27;姓名&#x27;</span>,</span><br><span class="line">`sex` <span class="type">VARCHAR</span>(<span class="number">50</span>) <span class="keyword">NOT</span> <span class="keyword">NULL</span> <span class="keyword">DEFAULT</span> <span class="string">&#x27;男&#x27;</span> COMMENT <span class="string">&#x27;性别&#x27;</span>,</span><br><span class="line">`birthday` <span class="type">VARCHAR</span> (<span class="number">20</span>) <span class="keyword">NOT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;生日&#x27;</span>,</span><br><span class="line">`address` <span class="type">VARCHAR</span>(<span class="number">30</span>) <span class="keyword">NOT</span> <span class="keyword">NULL</span> COMMENT<span class="string">&#x27;住址&#x27;</span>,</span><br><span class="line">`emill` <span class="type">VARCHAR</span> (<span class="number">30</span>) <span class="keyword">NOT</span> <span class="keyword">NULL</span> COMMENT<span class="string">&#x27;邮箱&#x27;</span>,</span><br><span class="line">`gradeid` <span class="type">INT</span>(<span class="number">4</span>) <span class="keyword">NOT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;学生的年级&#x27;</span>,</span><br><span class="line"><span class="keyword">PRIMARY</span> KEY(`id`),</span><br><span class="line">KEY `FK_gradeid`(`gradeid`) ,</span><br><span class="line"><span class="keyword">CONSTRAINT</span> `FK_gradeid` <span class="keyword">FOREIGN</span> KEY(`gradeid`) <span class="keyword">REFERENCES</span> `grade`(`gradeid`)</span><br><span class="line">)ENGINE<span class="operator">=</span>INNODB <span class="keyword">DEFAULT</span> CHARSET<span class="operator">=</span>utf8</span><br><span class="line"><span class="number">1234567891011121314</span></span><br></pre></td></tr></table></figure>

<blockquote>
<p>方式二：创建表成功后再去添加</p>
</blockquote>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> student</span><br><span class="line"><span class="keyword">ADD</span> <span class="keyword">CONSTRAINT</span> `FK_gradeid` <span class="keyword">FOREIGN</span> KEY(`gradeid`) <span class="keyword">REFERENCES</span> `grade`(`gradeid`);</span><br><span class="line"></span><br><span class="line"><span class="number">123</span></span><br></pre></td></tr></table></figure>

<h2 id="3-2、DML语言"><a href="#3-2、DML语言" class="headerlink" title="3.2、DML语言"></a>3.2、DML语言</h2><ul>
<li>Insert</li>
<li>update</li>
<li>delete</li>
</ul>
<h2 id="3-3添加"><a href="#3-3添加" class="headerlink" title="3.3添加"></a>3.3添加</h2><blockquote>
<p>insert</p>
</blockquote>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="comment">--插入一个语句</span></span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> `student` (`name`) <span class="keyword">VALUES</span> (<span class="string">&#x27;刘水龙&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">--插入多个语句，用英文逗号隔开</span></span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> `student` (`name`,`sex`,`pwd`) <span class="keyword">VALUES</span></span><br><span class="line">(<span class="string">&#x27;李四&#x27;</span>,<span class="string">&#x27;女&#x27;</span>,<span class="string">&#x27;123154&#x27;</span>) ,(<span class="string">&#x27;王五&#x27;</span>,<span class="string">&#x27;女&#x27;</span>,<span class="string">&#x27;1232154&#x27;</span>) ,</span><br><span class="line"></span><br><span class="line">(<span class="string">&#x27;刘三&#x27;</span>,<span class="string">&#x27;女&#x27;</span>,<span class="string">&#x27;123154&#x27;</span>) ,(<span class="string">&#x27;赵四&#x27;</span>,<span class="string">&#x27;女&#x27;</span>,<span class="string">&#x27;12355154&#x27;</span>) </span><br><span class="line"><span class="number">12345678</span></span><br></pre></td></tr></table></figure>

<p>注意事项：</p>
<p>1.字段可以省略，但是后面的数值要一一对应</p>
<p>2.可以同时插入多个护具，VALUES后面的数值需要使用隔开即可</p>
<h2 id="3-4修改"><a href="#3-4修改" class="headerlink" title="3.4修改"></a>3.4修改</h2><blockquote>
<p>update 修改谁（条件） set 原来的数值&#x3D;新数值</p>
</blockquote>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="comment">---带了条件</span></span><br><span class="line"><span class="keyword">UPDATE</span> `student` <span class="keyword">SET</span> `name`<span class="operator">=</span><span class="string">&#x27;傻逼&#x27;</span> <span class="keyword">WHERE</span> id<span class="operator">=</span><span class="number">3</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">----不带条件会修改全部的数值</span></span><br><span class="line"><span class="keyword">UPDATE</span> `student` <span class="keyword">SET</span> `name`<span class="operator">=</span><span class="string">&#x27;傻逼&#x27;</span> ;</span><br><span class="line"></span><br><span class="line"><span class="comment">--多个属性用逗号隔开</span></span><br><span class="line"><span class="keyword">UPDATE</span> `student` <span class="keyword">SET</span> `name`<span class="operator">=</span><span class="string">&#x27;傻逼&#x27;</span>,`pwd`<span class="operator">=</span><span class="string">&#x27;5201314&#x27;</span> <span class="keyword">WHERE</span> id<span class="operator">=</span><span class="number">3</span>;</span><br><span class="line"></span><br><span class="line"><span class="number">123456789</span></span><br></pre></td></tr></table></figure>

<table>
<thead>
<tr>
<th>操作符</th>
<th>含义</th>
<th>范围</th>
<th>结果</th>
</tr>
</thead>
<tbody><tr>
<td>&#x3D;</td>
<td>等于</td>
<td>1&#x3D;2</td>
<td>false</td>
</tr>
<tr>
<td>&lt;&gt;或！&#x3D;</td>
<td>不等于</td>
<td>5&lt;&gt;6</td>
<td>true</td>
</tr>
<tr>
<td>&gt;</td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>&gt;&#x3D;</td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>&lt;</td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>&lt;&#x3D;</td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>BETWEEN …and…</td>
<td>闭合区间</td>
<td></td>
<td></td>
</tr>
<tr>
<td>AND</td>
<td>我和你</td>
<td></td>
<td></td>
</tr>
<tr>
<td>OR</td>
<td>我或你</td>
<td></td>
<td></td>
</tr>
</tbody></table>
<h2 id="3-5、删除"><a href="#3-5、删除" class="headerlink" title="3.5、删除"></a>3.5、删除</h2><blockquote>
<p>delete</p>
</blockquote>
<p>delete from 表名 where 条件</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">DELETE</span> <span class="keyword">FROM</span> `student` <span class="keyword">WHERE</span> id<span class="operator">=</span> <span class="string">&#x27;4&#x27;</span></span><br><span class="line"><span class="number">1</span></span><br></pre></td></tr></table></figure>

<blockquote>
<p>TRUNCATE命令</p>
</blockquote>
<p>删除一个数据库表，表的结构和索引不变</p>
<blockquote>
<p>delete 和 truncate的区别</p>
</blockquote>
<ul>
<li><p>相同：都可删数据库，不会删除表结构</p>
</li>
<li><p>不同：</p>
<p>truncate 重新设置自增列，计数器归零</p>
<p>truncate不会影事务</p>
</li>
</ul>
<p>delete 问题，重启数据库现象</p>
<ul>
<li>innoDB 自增列会重开始（存在内存当中的，断电即失）</li>
<li>MySAM 继续从上一个自增量开始（存在文件中的不会丢失）</li>
</ul>
<h1 id="4、DQL查询数据（重点）"><a href="#4、DQL查询数据（重点）" class="headerlink" title="4、DQL查询数据（重点）"></a>4、DQL查询数据（重点）</h1><h2 id="4-1-DQL"><a href="#4-1-DQL" class="headerlink" title="4.1 DQL"></a>4.1 DQL</h2><p>（Data Query LANGUAGE :数据查询语言）</p>
<ul>
<li>使用频率最高</li>
</ul>
<blockquote>
<p>select语法</p>
</blockquote>
<p><img data-src="https://img-blog.csdnimg.cn/20210518113925275.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MzE0NTUzOQ==,size_16,color_FFFFFF,t_70" alt="[外链图片转存失败,源站可能有防盗链机制,建议将图片保存下来直接上传(img-x3h9ycvv-1621309051577)(C:\Users\ASUS\AppData\Roaming\Typora\typora-user-images\image-20200429215851190.png)]"></p>
<h2 id="4-2指定查询字段"><a href="#4-2指定查询字段" class="headerlink" title="4.2指定查询字段"></a>4.2指定查询字段</h2><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="comment">--换一个别名打开，字段，表名都可以换</span></span><br><span class="line"><span class="keyword">SELECT</span></span><br><span class="line"> `id` <span class="keyword">AS</span> <span class="string">&#x27;学号&#x27;</span>,`name` <span class="keyword">AS</span> <span class="string">&#x27;姓名&#x27;</span>,`<span class="number">9</span>`<span class="keyword">AS</span> <span class="string">&#x27;第九周&#x27;</span>,`<span class="number">10</span>`<span class="keyword">AS</span> <span class="string">&#x27;第十周&#x27;</span>,`<span class="number">11</span>`<span class="keyword">AS</span> <span class="string">&#x27;第十一周&#x27;</span>,`<span class="number">12</span>`<span class="keyword">AS</span> <span class="string">&#x27;第十二周&#x27;</span>,`<span class="number">13</span>`<span class="keyword">AS</span> <span class="string">&#x27;第十三周&#x27;</span>,</span><br><span class="line"> `<span class="number">14</span>`<span class="keyword">AS</span> <span class="string">&#x27;第十四周&#x27;</span>,`<span class="number">15</span>`<span class="keyword">AS</span> <span class="string">&#x27;第十五周&#x27;</span>,`<span class="number">16</span>`<span class="keyword">AS</span> <span class="string">&#x27;第十六周&#x27;</span></span><br><span class="line"> <span class="keyword">FROM</span> `tykdk` </span><br><span class="line"><span class="comment">--查询全部的人</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span><span class="keyword">FROM</span> tykdk</span><br><span class="line"><span class="number">1234567</span></span><br></pre></td></tr></table></figure>

<blockquote>
<p>去重 distinct</p>
</blockquote>
<p>作用：去除select结果重复的数据</p>
<figure class="highlight n1ql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="keyword">distinct</span> <span class="symbol">`id`</span><span class="keyword">from</span> student</span><br><span class="line"><span class="number">1</span></span><br></pre></td></tr></table></figure>

<blockquote>
<p>数据库的列（表达式）</p>
</blockquote>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> VERSION()<span class="comment">--查看系统版本</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="number">100</span><span class="operator">*</span><span class="number">3</span><span class="number">-1</span> <span class="keyword">AS</span> 计算结果 <span class="comment">---用来计算</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">-----全员成绩加十分</span></span><br><span class="line"><span class="keyword">SELECT</span> `studentno<span class="operator">+</span><span class="number">1</span>`<span class="keyword">AS</span> 加分后 <span class="keyword">FROM</span> student</span><br><span class="line"><span class="number">123456</span></span><br></pre></td></tr></table></figure>

<h2 id="4-3、where条件语句"><a href="#4-3、where条件语句" class="headerlink" title="4.3、where条件语句"></a>4.3、where条件语句</h2><blockquote>
<p>逻辑运算符号</p>
</blockquote>
<table>
<thead>
<tr>
<th>运算符</th>
<th>语法</th>
<th>描述</th>
</tr>
</thead>
<tbody><tr>
<td>and &amp;&amp;</td>
<td>a and b a&amp;&amp;b</td>
<td></td>
</tr>
<tr>
<td>or ||</td>
<td>a or b a||b</td>
<td></td>
</tr>
<tr>
<td>Not !</td>
<td>not a !a</td>
<td></td>
</tr>
</tbody></table>
<blockquote>
<p>模糊查询</p>
</blockquote>
<table>
<thead>
<tr>
<th>运算符</th>
<th>语法</th>
<th>描述</th>
</tr>
</thead>
<tbody><tr>
<td>IS NULL</td>
<td>a is null</td>
<td></td>
</tr>
<tr>
<td>IS NOT NULL</td>
<td>a is not null</td>
<td></td>
</tr>
<tr>
<td>BETWEEN</td>
<td>a between b and c</td>
<td></td>
</tr>
<tr>
<td><strong>like</strong></td>
<td>a like b</td>
<td></td>
</tr>
<tr>
<td><strong>in</strong></td>
<td>a in (a1,a2…)</td>
<td></td>
</tr>
</tbody></table>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="comment">--在0和1之间</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span><span class="keyword">FROM</span> tykdk <span class="keyword">WHERE</span> daka <span class="keyword">BETWEEN</span> <span class="number">0</span> <span class="keyword">AND</span> <span class="number">1</span></span><br><span class="line"><span class="comment">--最后一个字带龙，有几个字用几个“_”，不知道用%</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span><span class="keyword">FROM</span> tykdk <span class="keyword">WHERE</span> `name` <span class="keyword">LIKE</span> (<span class="string">&#x27;%龙&#x27;</span>)</span><br><span class="line"><span class="comment">--2018220111和2018220132两个</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span><span class="keyword">FROM</span> tykdk <span class="keyword">WHERE</span> `id`<span class="keyword">IN</span>(<span class="string">&#x27;2018220111&#x27;</span>,<span class="string">&#x27;2018220132&#x27;</span>)</span><br><span class="line"><span class="number">123456</span></span><br></pre></td></tr></table></figure>

<h2 id="4-4、联表查询"><a href="#4-4、联表查询" class="headerlink" title="4.4、联表查询"></a>4.4、联表查询</h2><p><img data-src="https://img-blog.csdnimg.cn/20210518114524859.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MzE0NTUzOQ==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<blockquote>
<p>自连接</p>
</blockquote>
<p>自己的表和自己的表连接，核心：拆成两个一模一样的表</p>
<p><img data-src="https://img-blog.csdnimg.cn/20210518114549966.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MzE0NTUzOQ==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<p>父类</p>
<table>
<thead>
<tr>
<th>categoryid</th>
<th>categoryname</th>
</tr>
</thead>
<tbody><tr>
<td>2</td>
<td>信息技术</td>
</tr>
<tr>
<td>3</td>
<td>软件开发</td>
</tr>
<tr>
<td>5</td>
<td>美术设计</td>
</tr>
<tr>
<td></td>
<td></td>
</tr>
</tbody></table>
<p>子类</p>
<table>
<thead>
<tr>
<th>pid</th>
<th>categoryid</th>
<th>categoryname</th>
</tr>
</thead>
<tbody><tr>
<td>3</td>
<td>4</td>
<td>数据库</td>
</tr>
<tr>
<td>2</td>
<td>8</td>
<td>办公信息</td>
</tr>
<tr>
<td>3</td>
<td>6</td>
<td>web开发</td>
</tr>
<tr>
<td>5</td>
<td>7</td>
<td>美术设计</td>
</tr>
</tbody></table>
<p>查询父类对应的子类</p>
<table>
<thead>
<tr>
<th>父类</th>
<th>子类</th>
</tr>
</thead>
<tbody><tr>
<td>信息技术</td>
<td>办公信息</td>
</tr>
<tr>
<td>软件开发</td>
<td>数据库</td>
</tr>
<tr>
<td>软件开发</td>
<td>web开发</td>
</tr>
<tr>
<td>美术设计</td>
<td>ps技术</td>
</tr>
</tbody></table>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> a.`categoryname` <span class="keyword">AS</span> <span class="string">&#x27;father&#x27;</span>,b.`categoryname`<span class="keyword">AS</span><span class="string">&#x27;son&#x27;</span></span><br><span class="line"> <span class="keyword">FROM</span> `test1`<span class="keyword">AS</span> a,`test1`<span class="keyword">AS</span> b</span><br><span class="line"> <span class="keyword">WHERE</span> a.`categoryid`<span class="operator">=</span>b.`pid`</span><br><span class="line"><span class="number">123</span></span><br></pre></td></tr></table></figure>

<h2 id="4-5、分页和排序"><a href="#4-5、分页和排序" class="headerlink" title="4.5、分页和排序"></a>4.5、分页和排序</h2><blockquote>
<p>排序：</p>
</blockquote>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span><span class="keyword">FROM</span> `student`</span><br><span class="line"><span class="keyword">ORDER</span> <span class="keyword">BY</span> id <span class="keyword">DESC</span></span><br><span class="line"><span class="comment">----DESC降序，ASC排序----</span></span><br><span class="line"><span class="number">123</span></span><br></pre></td></tr></table></figure>

<blockquote>
<p>分页</p>
</blockquote>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">SELECT</span>  <span class="operator">*</span><span class="keyword">FROM</span> `tykdk`</span><br><span class="line"> <span class="keyword">ORDER</span> <span class="keyword">BY</span> `id` <span class="keyword">DESC</span></span><br><span class="line"> LIMIT <span class="number">0</span>,<span class="number">10</span></span><br><span class="line"><span class="number">123</span></span><br></pre></td></tr></table></figure>

<h2 id="4-6、子查询"><a href="#4-6、子查询" class="headerlink" title="4.6、子查询"></a>4.6、子查询</h2><p>where(这个值是计算出来的)</p>
<p>本质：在where语句嵌套一个查询语句）</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> `id`,`name`,`pwd`</span><br><span class="line"><span class="keyword">FROM</span> `student`</span><br><span class="line"><span class="keyword">WHERE</span> id<span class="operator">=</span>(</span><br><span class="line"><span class="keyword">SELECT</span> `id` <span class="keyword">FROM</span> `grade`</span><br><span class="line"><span class="keyword">WHERE</span> `pwd`<span class="operator">=</span><span class="string">&#x27;***&#x27;</span></span><br><span class="line">)</span><br><span class="line"><span class="number">123456</span></span><br></pre></td></tr></table></figure>

<h2 id="4-7、分组和过滤"><a href="#4-7、分组和过滤" class="headerlink" title="4.7、分组和过滤"></a>4.7、分组和过滤</h2><p>[外链图片转存失败,源站可能有防盗链机制,建议将图片保存下来直接上传(img-jMiW02m4-1621309051592)(C:\Users\ASUS\AppData\Roaming\Typora\typora-user-images\image-20200429180334341.png)]</p>
<h2 id="4-8、select小节"><a href="#4-8、select小节" class="headerlink" title="4.8、select小节"></a>4.8、select小节</h2><h1 id="5、MySQL函数"><a href="#5、MySQL函数" class="headerlink" title="5、MySQL函数"></a>5、MySQL函数</h1><h2 id="5-1、常用函数"><a href="#5-1、常用函数" class="headerlink" title="5.1、常用函数"></a>5.1、常用函数</h2><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="comment">--数学</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="built_in">ABS</span>(<span class="number">-55</span>)</span><br><span class="line"><span class="keyword">SELECT</span> <span class="built_in">CEILING</span>(<span class="number">22.995</span>)</span><br><span class="line"><span class="keyword">SELECT</span> <span class="built_in">FLOOR</span>(<span class="number">9.8</span>)</span><br><span class="line"><span class="keyword">SELECT</span> RAND ()</span><br><span class="line"><span class="keyword">SELECT</span> SIGN(<span class="number">99</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">--字串</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">SELECT</span> <span class="keyword">CHAR_LENGTH</span>(<span class="string">&#x27;沃日你麻痹&#x27;</span>)</span><br><span class="line"><span class="keyword">SELECT</span> CONCAT(<span class="string">&#x27;c&#x27;</span>,<span class="string">&#x27;n&#x27;</span>,<span class="string">&#x27;m&#x27;</span>)</span><br><span class="line"><span class="keyword">SELECT</span> <span class="keyword">INSERT</span> (<span class="string">&#x27;我是你爸爸&#x27;</span>,<span class="number">1</span>,<span class="number">2</span>,<span class="string">&#x27;操你妈的逼&#x27;</span>)</span><br><span class="line"><span class="keyword">SELECT</span> <span class="built_in">LOWER</span>(<span class="string">&#x27;DSDDSADASF&#x27;</span>)</span><br><span class="line"><span class="keyword">SELECT</span> <span class="built_in">UPPER</span>(<span class="string">&#x27;sadasdasd&#x27;</span>)</span><br><span class="line"><span class="keyword">SELECT</span> INSTR (<span class="string">&#x27;zengnanbin&#x27;</span>,<span class="string">&#x27;n&#x27;</span>)</span><br><span class="line"><span class="keyword">SELECT</span> REPLACE(<span class="string">&#x27;你是一个大傻逼&#x27;</span>,<span class="string">&#x27;傻逼&#x27;</span>,<span class="string">&#x27;杂种&#x27;</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">SELECT</span> REPLACE(`name`,<span class="string">&#x27;刘&#x27;</span>,<span class="string">&#x27;牛&#x27;</span>) <span class="keyword">FROM</span> `student`</span><br><span class="line"><span class="keyword">WHERE</span> `name` <span class="keyword">LIKE</span> (<span class="string">&#x27;刘%&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">---时间</span></span><br><span class="line"><span class="keyword">SELECT</span> CURDATE()</span><br><span class="line"><span class="keyword">SELECT</span> NOW()</span><br><span class="line"><span class="keyword">SELECT</span> <span class="built_in">LOCALTIME</span>()</span><br><span class="line"><span class="keyword">SELECT</span> SYSDATE()</span><br><span class="line"></span><br><span class="line"><span class="keyword">SELECT</span> <span class="keyword">YEAR</span>(NOW())</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">SELECT</span> <span class="keyword">USER</span>()</span><br><span class="line"><span class="keyword">SELECT</span> VERSION()</span><br><span class="line"><span class="number">12345678910111213141516171819202122232425262728293031323334</span></span><br></pre></td></tr></table></figure>

<h2 id="5-2、聚合函数"><a href="#5-2、聚合函数" class="headerlink" title="5.2、聚合函数"></a>5.2、聚合函数</h2><p>[外链图片转存失败,源站可能有防盗链机制,建议将图片保存下来直接上传(img-QRShGLiE-1621309051595)(C:\Users\ASUS\AppData\Roaming\Typora\typora-user-images\image-20200429174708478.png)]</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> <span class="built_in">COUNT</span>(`name`)<span class="keyword">FROM</span> `tykdk`</span><br><span class="line"></span><br><span class="line"><span class="keyword">SELECT</span> <span class="built_in">SUM</span>(`<span class="number">9</span>`)<span class="keyword">AS</span> <span class="string">&#x27;总和&#x27;</span> <span class="keyword">FROM</span> `tykdk`</span><br><span class="line"></span><br><span class="line"><span class="keyword">SELECT</span> <span class="built_in">AVG</span> (`<span class="number">9</span>`)<span class="keyword">AS</span> <span class="string">&#x27;平均分&#x27;</span><span class="keyword">FROM</span> `tykdk`</span><br><span class="line"></span><br><span class="line"><span class="keyword">SELECT</span> <span class="built_in">MAX</span>(`<span class="number">9</span>`)<span class="keyword">AS</span> <span class="string">&#x27;最高分&#x27;</span><span class="keyword">FROM</span> `tykdk`</span><br><span class="line"></span><br><span class="line"><span class="keyword">SELECT</span> <span class="built_in">MIN</span>(`<span class="number">9</span>`) <span class="keyword">AS</span> <span class="string">&#x27;最低分&#x27;</span><span class="keyword">FROM</span> `tykdk`</span><br><span class="line"></span><br><span class="line"><span class="number">12345678910</span></span><br></pre></td></tr></table></figure>

<h2 id="5-3、数据库级别的MD5加密"><a href="#5-3、数据库级别的MD5加密" class="headerlink" title="5.3、数据库级别的MD5加密"></a>5.3、数据库级别的MD5加密</h2><p>MD5不可逆，具体的MD5密码值是一样的</p>
<p>MD5破解网站的原理，背后有一个字典</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">UPDATE</span> `testmd5` <span class="keyword">SET</span> `pwd`<span class="operator">=</span><span class="string">&#x27;123456&#x27;</span>,`name`<span class="operator">=</span><span class="string">&#x27;张三&#x27;</span> <span class="keyword">WHERE</span> id<span class="operator">=</span><span class="number">1</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> `testmd5` (`pwd`,`name`) <span class="keyword">VALUES</span> (<span class="string">&#x27;123457&#x27;</span>,<span class="string">&#x27;李四&#x27;</span>),(<span class="string">&#x27;1234557&#x27;</span>,<span class="string">&#x27;王五&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">UPDATE</span> `testmd5` <span class="keyword">SET</span> `pwd`<span class="operator">=</span>MD5(pwd) <span class="keyword">WHERE</span> id<span class="operator">=</span><span class="number">1</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> `testmd5`  <span class="keyword">VALUES</span> (<span class="string">&#x27;4&#x27;</span>,MD5(<span class="string">&#x27;123456&#x27;</span>),<span class="string">&#x27;xm&#x27;</span>)</span><br><span class="line"><span class="number">1234567</span></span><br></pre></td></tr></table></figure>

<h1 id="6、事-务"><a href="#6、事-务" class="headerlink" title="6、事 务"></a>6、事 务</h1><p>要么都成功，要么都失败</p>
<blockquote>
<p>事务原则：ACID原则 原子性，一致性，隔离性，持久性（脏读，欢幻）</p>
</blockquote>
<p>参考博客：<a href="https://blog.csdn.net/dengjili/article/details/82468576">https://blog.csdn.net/dengjili/article/details/82468576</a></p>
<p><strong>原子性（Atomicity）</strong></p>
<p>要么都成功，要么都失败</p>
<p><strong>一致性（Consistency）</strong></p>
<p>事务前后数据要保持一致</p>
<p><strong>隔离性（Isolation）</strong></p>
<p>事务的隔离性是多个用户并发访问数据库时，数据库为每一个用户开启的事务，不能被其他事务的操作数据所干扰，多个并发事务之间要相互隔离。</p>
<p><strong>持久性（Durability）</strong></p>
<p>事务一旦提交就不可逆，被持久化到数据库中</p>
<p>隔离性问题：</p>
<p><img data-src="https://img-blog.csdnimg.cn/2021051811461978.png" alt="在这里插入图片描述"></p>
<blockquote>
<p>执行事务</p>
</blockquote>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="comment">---mysql是默认开启事务自动提交的</span></span><br><span class="line"><span class="keyword">SET</span> autocmmit<span class="operator">=</span><span class="number">0</span><span class="comment">--关闭</span></span><br><span class="line"><span class="keyword">SET</span> autocommit<span class="operator">=</span><span class="number">1</span><span class="comment">--开启</span></span><br><span class="line"><span class="comment">---手动处理事务</span></span><br><span class="line"><span class="keyword">SET</span> autocommit <span class="operator">=</span><span class="number">0</span><span class="comment">--关闭自动提交</span></span><br><span class="line"><span class="comment">---事务开启</span></span><br><span class="line"><span class="keyword">START</span> TRANSACTION <span class="comment">--标记一个事务的开始，从这个之后的sql都在一个事务内</span></span><br><span class="line"><span class="keyword">INSERT</span> XX</span><br><span class="line"></span><br><span class="line"><span class="comment">---提交：持久化（成功）</span></span><br><span class="line"><span class="keyword">commit</span></span><br><span class="line"><span class="comment">--回滚--</span></span><br><span class="line"><span class="keyword">ROLLBACK</span><span class="comment">---回到之前的样子</span></span><br><span class="line"><span class="comment">--事务结束</span></span><br><span class="line"><span class="keyword">SET</span> autocommit<span class="operator">=</span><span class="number">1</span><span class="comment">---开启自动提交</span></span><br><span class="line"></span><br><span class="line"><span class="comment">--了解</span></span><br><span class="line"><span class="keyword">SAVEPOINT</span> 保存点名<span class="comment">---设置一个事务保存点</span></span><br><span class="line"><span class="keyword">ROLLBACK</span> <span class="keyword">TO</span> <span class="keyword">SAVEPOINT</span> 保存点名<span class="comment">--回滚到保存点</span></span><br><span class="line"><span class="keyword">RELEASE</span> <span class="keyword">SAVEPOINT</span> 保存点名<span class="comment">---撤销保存点</span></span><br><span class="line"><span class="number">1234567891011121314151617181920</span></span><br><span class="line"><span class="keyword">SET</span> autocommit <span class="operator">=</span><span class="number">0</span>;<span class="comment">--关闭自动提交</span></span><br><span class="line"><span class="keyword">START</span> TRANSACTION <span class="comment">--开始事务</span></span><br><span class="line"><span class="keyword">UPDATE</span> account1 <span class="keyword">SET</span> money<span class="operator">=</span>money<span class="number">-2000</span> <span class="keyword">WHERE</span> `id` <span class="operator">=</span> <span class="number">1</span></span><br><span class="line"><span class="keyword">UPDATE</span> account1 <span class="keyword">SET</span> money<span class="operator">=</span>money<span class="operator">+</span><span class="number">2000</span> <span class="keyword">WHERE</span> `id` <span class="operator">=</span> <span class="number">2</span></span><br><span class="line"><span class="keyword">COMMIT</span>;<span class="comment">--成功</span></span><br><span class="line"><span class="keyword">ROLLBACK</span>;<span class="comment">--回滚</span></span><br><span class="line"><span class="keyword">SET</span> autocommit<span class="operator">=</span><span class="number">1</span>;<span class="comment">--开启自动提交</span></span><br><span class="line"><span class="number">1234567</span></span><br></pre></td></tr></table></figure>

<h1 id="7、索引"><a href="#7、索引" class="headerlink" title="7、索引"></a>7、索引</h1><h2 id="7-1、索引的分类"><a href="#7-1、索引的分类" class="headerlink" title="7.1、索引的分类"></a>7.1、索引的分类</h2><blockquote>
<p>在一个表中主键索引只可以有一个，唯一索引可以有多个</p>
</blockquote>
<ul>
<li><p>主键索引(PRIMARY KEY)</p>
<p>唯一标识，主键不可重复，只可有个</p>
</li>
<li><p>唯一索引(UNIQUE KEY)</p>
<p>避免重复的列出现，可以重复，多个列都可以标识唯一索引</p>
</li>
<li><p>常规索引(FullText)</p>
<p>默认的，可以用index，key关键字设置</p>
</li>
<li><p>全文索引</p>
<p>在特定的数据库引擎才有，mylsam</p>
<p>快速定位数据</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="comment">--增加一个全文索引</span></span><br><span class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> school.student <span class="keyword">ADD</span> FULLTEXT INDEX `studentName` (`studentName`)</span><br><span class="line"><span class="comment">----EXPLAIN 分析sql的执行情况</span></span><br><span class="line"></span><br><span class="line">EXPLAIN <span class="keyword">SELECT</span> <span class="operator">*</span><span class="keyword">FROM</span> student <span class="comment">---非全文索引</span></span><br><span class="line"></span><br><span class="line">EXPLAIN SELLCT <span class="operator">*</span> <span class="keyword">FROM</span> student <span class="keyword">WHERE</span> <span class="keyword">MATCH</span>(studentName)AGAINST(<span class="string">&#x27;刘&#x27;</span>)</span><br><span class="line"><span class="number">1234567</span></span><br></pre></td></tr></table></figure></li>
</ul>
<h2 id="7-2、测试索引"><a href="#7-2、测试索引" class="headerlink" title="7.2、测试索引"></a>7.2、测试索引</h2><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="comment">---插入一千万条数据</span></span><br><span class="line">DELIMITER $$</span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">FUNCTION</span> mock_data000()</span><br><span class="line"><span class="keyword">RETURNS</span> <span class="type">INT</span></span><br><span class="line"><span class="keyword">BEGIN</span></span><br><span class="line">   <span class="keyword">DECLARE</span> num <span class="type">INT</span> <span class="keyword">DEFAULT</span> <span class="number">10000000</span>;</span><br><span class="line">   <span class="keyword">DECLARE</span> i <span class="type">INT</span> <span class="keyword">DEFAULT</span> <span class="number">0</span>;</span><br><span class="line">   WHILE i<span class="operator">&lt;</span>num DO</span><br><span class="line">     <span class="keyword">INSERT</span> <span class="keyword">INTO</span> `app_user` (`name`,`phone`,`pwd`,`age`) <span class="keyword">VALUES</span> </span><br><span class="line">(CONCAT(<span class="string">&#x27;用户&#x27;</span>,i),<span class="built_in">FLOOR</span>(CONCAT(<span class="string">&#x27;18&#x27;</span>,RAND()<span class="operator">*</span>(<span class="number">999999999</span><span class="number">-100000000</span>)<span class="operator">+</span><span class="number">100000000</span>)),UUID(),<span class="built_in">FLOOR</span>(RAND()<span class="operator">*</span><span class="number">100</span>));</span><br><span class="line">      <span class="keyword">SET</span> i<span class="operator">=</span>i<span class="operator">+</span><span class="number">1</span>;</span><br><span class="line">   <span class="keyword">END</span> WHILE;</span><br><span class="line">   <span class="keyword">RETURN</span> i;</span><br><span class="line"><span class="keyword">END</span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">EXPLAIN <span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> `app_user` <span class="keyword">WHERE</span> `name`<span class="operator">=</span><span class="string">&#x27;用户854569&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">----插入索引</span></span><br><span class="line"><span class="keyword">CREATE</span> INDEX id_app_user_name <span class="keyword">ON</span> `app_user`(`name`)</span><br><span class="line"><span class="number">123456789101112131415161718192021</span></span><br></pre></td></tr></table></figure>

<p>加入索引前</p>
<p><img data-src="https://img-blog.csdnimg.cn/20210518114636582.png" alt="在这里插入图片描述"></p>
<p>加入索引后</p>
<p><img data-src="https://img-blog.csdnimg.cn/20210518114645782.png" alt="在这里插入图片描述"></p>
<h2 id="7-3、索引原则"><a href="#7-3、索引原则" class="headerlink" title="7.3、索引原则"></a>7.3、索引原则</h2><ul>
<li>索引不是越多越好</li>
<li>不要对经常变的数据加索引</li>
<li>小数据的表不要加</li>
<li>一般加在常用在查询的字段上面</li>
</ul>
<blockquote>
<p>索引的数据结构</p>
</blockquote>
<p>Hash 类型的索引</p>
<p>Btree：InnoDB 的默认数据结构</p>
<p>参考资料：<a href="https://blog.csdn.net/zq602316498/article/details/39323803">https://blog.csdn.net/zq602316498/article/details/39323803</a></p>
<h1 id="8、数据库的备份与权限"><a href="#8、数据库的备份与权限" class="headerlink" title="8、数据库的备份与权限"></a>8、数据库的备份与权限</h1><h2 id="8-1、用户管理"><a href="#8-1、用户管理" class="headerlink" title="8.1、用户管理"></a>8.1、用户管理</h2><blockquote>
<p>SQLyog可视化管理</p>
</blockquote>
<p>用户表：mysql.user</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="comment">---创建用户</span></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">USER</span> kuangshen IDENTIFIED <span class="keyword">BY</span> <span class="string">&#x27;123456&#x27;</span></span><br><span class="line"><span class="comment">---修改密码（当前账户）</span></span><br><span class="line"><span class="keyword">SET</span> PASSWORD <span class="operator">=</span>PASSWORD(<span class="string">&#x27;123456&#x27;</span>)</span><br><span class="line"><span class="comment">---修改密码（指定账户）</span></span><br><span class="line"><span class="keyword">SET</span> PASSWORD <span class="keyword">FOR</span> kuangsheng <span class="operator">=</span>PASSWORD(<span class="string">&#x27;123456&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">---用户授权</span></span><br><span class="line"><span class="keyword">GRANT</span> <span class="keyword">ALL</span> PRIVLEGES PN<span class="operator">*</span>.<span class="operator">*</span> <span class="keyword">TO</span> kuangshen</span><br><span class="line"></span><br><span class="line"><span class="comment">--查看权限</span></span><br><span class="line"><span class="keyword">SHOW</span> GRANTS FOE kuangshen</span><br><span class="line"></span><br><span class="line"><span class="comment">--撤销权限</span></span><br><span class="line">REOMVE <span class="keyword">ALL</span> PRIVILEGES OM<span class="operator">*</span>.<span class="operator">*</span> <span class="keyword">FROM</span> kuangshen</span><br><span class="line"><span class="number">123456789101112131415</span></span><br></pre></td></tr></table></figure>

<h2 id="8-2、数据库备份"><a href="#8-2、数据库备份" class="headerlink" title="8.2、数据库备份"></a>8.2、数据库备份</h2><p>为什么要备份</p>
<ul>
<li>保证数据不丢失</li>
<li>数据转移</li>
</ul>
<p>MySQL数据库备份的方式</p>
<ul>
<li>直接拷贝物理文件</li>
<li>sqlyog可视化工具</li>
<li>命令行导出 mysqldump 命令行使用</li>
</ul>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="comment">--musqldummp -h表名 -u用户名 -p密码 数据库 数据库表1 数据库表2.... &gt;导入位置</span></span><br><span class="line"><span class="comment">--导出</span></span><br><span class="line">mysqldump <span class="operator">-</span>hlocalhost <span class="operator">-</span>uroot <span class="operator">-</span>pehero000921 daka tykdk <span class="operator">&gt;</span>D:a.sql</span><br><span class="line"></span><br><span class="line"><span class="comment">--导入</span></span><br><span class="line"><span class="comment">--登录的情况下，切换到指定的数据库</span></span><br><span class="line"></span><br><span class="line"><span class="comment">--导入，登录的情况下</span></span><br><span class="line">source D:<span class="operator">/</span>文件.<span class="keyword">sql</span></span><br><span class="line"></span><br><span class="line"><span class="comment">--没有登录的情况</span></span><br><span class="line"></span><br><span class="line">mysql <span class="operator">-</span>u用户 <span class="operator">-</span>p密码  数据库名字<span class="operator">&lt;</span>备份文件</span><br><span class="line"><span class="number">12345678910111213</span></span><br></pre></td></tr></table></figure>

<p>备份数据库防止数据丢失</p>
<p>把数据库给朋友，sql文件给比人即可！</p>
<h1 id="9、规范数据库设计"><a href="#9、规范数据库设计" class="headerlink" title="9、规范数据库设计"></a>9、规范数据库设计</h1><h2 id="9-1、为什么要设计"><a href="#9-1、为什么要设计" class="headerlink" title="9.1、为什么要设计"></a>9.1、为什么要设计</h2><p>当数据库比较复杂的时候就要设计</p>
<p><strong>糟糕的数据库设计：</strong></p>
<ul>
<li>数据冗长，浪费空间</li>
<li>数据库插入和删除都会麻烦，异常</li>
<li>程序性能差</li>
</ul>
<p><strong>良好的数据库设计</strong></p>
<ul>
<li>节省空间</li>
<li>保证完整性</li>
<li>方便开发</li>
</ul>
<p><strong>软件开发中，关于数据库的设计</strong></p>
<ul>
<li>分析需求</li>
<li>概要设计</li>
</ul>
<p><strong>设计数据库的步骤</strong></p>
<ul>
<li><p>收集信息，分析需求</p>
<p>用户表（用户登录注销，用户的个人信息，写博客，创建分类）</p>
<p>分类表（文章分类，谁创建的）</p>
<p>文章表（文章的信息）</p>
<p>评论表</p>
<p>友情链接（信息）</p>
<p>自定义表（系统信息，某个关键字）</p>
<p>说说表（发表心情。。。。id）</p>
</li>
<li><p>标识实体（把需求落地到每个字段）</p>
</li>
<li><p>标识实体之间的关系</p>
<p>user -&gt;blog</p>
<p>user-&gt;category</p>
<p>关注：user-&gt;user</p>
<p>友链：links</p>
<p>评论：user-&gt;user-blog</p>
</li>
</ul>
<h2 id="9-2、规范数据库设计"><a href="#9-2、规范数据库设计" class="headerlink" title="9.2、规范数据库设计"></a>9.2、规范数据库设计</h2><p><strong>为什么要有范式</strong></p>
<ul>
<li><p>信息重复</p>
</li>
<li><p>更新异常</p>
</li>
<li><p>插入异常</p>
<p>无法正常显示信息</p>
</li>
<li><p>删除异常</p>
<p>丢失有效的信息</p>
</li>
</ul>
<blockquote>
<p>三大范式</p>
</blockquote>
<p><strong>第一范式</strong></p>
<p>原子性：保证每一列不可再分</p>
<p><strong>第二范范式</strong></p>
<p>前提：满足第一范式的前提下，每张表只表示一个信息</p>
<p><strong>第三范式</strong></p>
<p>前提：满足第一第二范式</p>
<p>确保数据表的每一列数据都和主键直接相关，而不能见解相关<br><img data-src="https://img-blog.csdnimg.cn/2021051811471539.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MzE0NTUzOQ==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<h1 id="10、JDBC"><a href="#10、JDBC" class="headerlink" title="10、JDBC"></a>10、JDBC</h1><h2 id="10-1、数据库驱动"><a href="#10-1、数据库驱动" class="headerlink" title="10.1、数据库驱动"></a>10.1、数据库驱动</h2><p>驱动：声卡，显卡，数据库</p>
<h2 id="10-2、JDBC"><a href="#10-2、JDBC" class="headerlink" title="10.2、JDBC"></a>10.2、JDBC</h2><p><img data-src="https://img-blog.csdnimg.cn/20210518114730410.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MzE0NTUzOQ==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<h2 id="10-3、第一个JDBC程序"><a href="#10-3、第一个JDBC程序" class="headerlink" title="10.3、第一个JDBC程序"></a>10.3、第一个JDBC程序</h2><blockquote>
<p>创建测试数据库</p>
</blockquote>
<p>1、创建一个普通项目</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> DATABASE `jdbcstudy`</span><br><span class="line"></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span>  users</span><br><span class="line">(</span><br><span class="line">`id` <span class="type">INT</span> (<span class="number">4</span>) <span class="keyword">PRIMARY</span> KEY,</span><br><span class="line">`name` <span class="type">VARCHAR</span>(<span class="number">40</span>),</span><br><span class="line">`password` <span class="type">VARCHAR</span>(<span class="number">40</span>),</span><br><span class="line">`birthday` <span class="type">DATE</span></span><br><span class="line">);</span><br><span class="line"></span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> `users` (`id`,`name`,`password`,`birthday`) </span><br><span class="line"><span class="keyword">VALUES</span> (<span class="string">&#x27;1&#x27;</span>,<span class="string">&#x27;张三&#x27;</span>,<span class="string">&#x27;123456&#x27;</span>,<span class="string">&#x27;1999-02-02&#x27;</span>),(<span class="string">&#x27;2&#x27;</span>,<span class="string">&#x27;李四&#x27;</span>,<span class="string">&#x27;1234556&#x27;</span>,<span class="string">&#x27;1999-08-02&#x27;</span>),(<span class="string">&#x27;3&#x27;</span>,<span class="string">&#x27;王五&#x27;</span>,<span class="string">&#x27;1288556&#x27;</span>,<span class="string">&#x27;1998-02-15&#x27;</span>)</span><br><span class="line">,(<span class="string">&#x27;4&#x27;</span>,<span class="string">&#x27;赵六&#x27;</span>,<span class="string">&#x27;752156&#x27;</span>,<span class="string">&#x27;1999-12-12&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="number">1234567891011121314</span></span><br></pre></td></tr></table></figure>

<p>2.导入数据库驱动</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> JDBC01;</span><br><span class="line"><span class="keyword">import</span> java.sql.Connection;</span><br><span class="line"><span class="keyword">import</span> java.sql.DriverManager;</span><br><span class="line"><span class="keyword">import</span> java.sql.ResultSet;</span><br><span class="line"><span class="keyword">import</span> java.sql.SQLException;</span><br><span class="line"><span class="keyword">import</span> java.sql.Statement;</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">test01</span> &#123;	</span><br><span class="line">   <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> ClassNotFoundException, SQLException &#123;</span><br><span class="line">		<span class="comment">//1.加载驱动</span></span><br><span class="line">		Class.forName(<span class="string">&quot;com.mysql.jdbc.Driver&quot;</span>);<span class="comment">//固定</span></span><br><span class="line">		<span class="comment">//2.连接用户信息和url</span></span><br><span class="line">		String url=<span class="string">&quot;jdbc:mysql://localhost:3306/jdbcstudy?useUnicode=true&amp;characterEncoding=utf8&amp;useSSL=true&quot;</span>;</span><br><span class="line">		<span class="type">String</span> <span class="variable">username</span> <span class="operator">=</span><span class="string">&quot;root&quot;</span>;</span><br><span class="line">		String password=<span class="string">&quot;ehero000921&quot;</span>;</span><br><span class="line">		<span class="comment">//3.连接成功，数据库对象 Connection</span></span><br><span class="line">		Connection connection=DriverManager.getConnection(url, username, password);</span><br><span class="line">		<span class="comment">//4.执行sql对象</span></span><br><span class="line">		<span class="type">Statement</span> <span class="variable">statement</span>  <span class="operator">=</span>connection.createStatement();</span><br><span class="line">		<span class="comment">//5.执行sql的对象去执行sql</span></span><br><span class="line">		String sql=<span class="string">&quot;select * from users&quot;</span>;</span><br><span class="line">		ResultSet rs=statement.executeQuery(sql);</span><br><span class="line">		<span class="keyword">while</span> (rs.next())</span><br><span class="line">		&#123;</span><br><span class="line">			System.out.print(<span class="string">&quot;id=&quot;</span>+rs.getObject(<span class="string">&quot;id&quot;</span>)+<span class="string">&quot; &quot;</span>);</span><br><span class="line">			System.out.print(<span class="string">&quot;name=&quot;</span>+rs.getObject(<span class="string">&quot;name&quot;</span>)+<span class="string">&quot; &quot;</span>);</span><br><span class="line">			System.out.print(<span class="string">&quot;password=&quot;</span>+rs.getObject(<span class="string">&quot;password&quot;</span>)+<span class="string">&quot; &quot;</span>);</span><br><span class="line">			System.out.println(<span class="string">&quot;birthday=&quot;</span>+rs.getObject(<span class="string">&quot;birthday&quot;</span>));</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="comment">//6.释放连接</span></span><br><span class="line">		rs.close();</span><br><span class="line">		statement.close();</span><br><span class="line">		connection.close();</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="number">1234567891011121314151617181920212223242526272829303132333435</span></span><br></pre></td></tr></table></figure>

<p>步骤总结：</p>
<p>1.加载驱动</p>
<p>2.连接数据库DriverManager</p>
<p>3.获取执行sql的对象Statement</p>
<p>4.获的返回的结果集</p>
<p>5.释放连接</p>
<blockquote>
<p>DriverManager</p>
</blockquote>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">Class.forName(<span class="string">&quot;com.mysql.jdbc.Driver&quot;</span>);</span><br><span class="line"><span class="comment">//固定写法</span></span><br><span class="line"><span class="number">12</span></span><br></pre></td></tr></table></figure>

<blockquote>
<p>URL</p>
</blockquote>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="type">String</span>  <span class="variable">url</span> <span class="operator">=</span><span class="string">&quot;jdbc:mysql://localhost:3306/jdbcstudy?useUnicode=true&amp;characterEncoding=utf8&amp;useSSL=true&quot;</span></span><br><span class="line">    <span class="comment">//mysql默认3306</span></span><br><span class="line">    <span class="comment">//协议://主机地址:端口号/数据库名？参数1&amp;参数2&amp;参数3</span></span><br><span class="line">    </span><br><span class="line">    </span><br><span class="line"><span class="number">12345</span></span><br></pre></td></tr></table></figure>

<blockquote>
<p>Statement 执行SQL的对象 PrepareStatement 执行的SQL的对象</p>
</blockquote>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">String sql=<span class="string">&quot;sekect * from users&quot;</span>;</span><br><span class="line">statement.executeQuery();<span class="comment">//查询</span></span><br><span class="line">statement.execute();<span class="comment">//执行任何SQL</span></span><br><span class="line">statement.executeUpdate();<span class="comment">//更新，插入，删除</span></span><br><span class="line"><span class="number">1234</span></span><br></pre></td></tr></table></figure>

<blockquote>
<p>ResultSet 查询的结果集：封装了所有的查询结果</p>
</blockquote>
<p>获取定的数据类型</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">resultset.getint();</span><br><span class="line">resultset.getobject();</span><br><span class="line">resultset.getDate();</span><br><span class="line">...</span><br><span class="line">    </span><br><span class="line"></span><br><span class="line"><span class="comment">//指针</span></span><br><span class="line">resultset.beforFirst();<span class="comment">//移动到第一个</span></span><br><span class="line">resultset.afterLast();<span class="comment">//移动到自动一个</span></span><br><span class="line">resultset.absolute(row)<span class="comment">//移动到指定类</span></span><br><span class="line">    </span><br><span class="line">    </span><br><span class="line"><span class="number">123456789101112</span></span><br></pre></td></tr></table></figure>

<h2 id="10-4、statement对象"><a href="#10-4、statement对象" class="headerlink" title="10.4、statement对象"></a>10.4、statement对象</h2><blockquote>
<p>配置类</p>
</blockquote>
<figure class="highlight properties"><table><tr><td class="code"><pre><span class="line"><span class="attr">driver</span>=<span class="string">com.mysql.jdbc.Driver</span></span><br><span class="line"><span class="attr">url</span>=<span class="string">jdbc:mysql://localhost:3306/jdbcstudy?useUnicode=true&amp;characterEncoding=utf8&amp;useSSL=true</span></span><br><span class="line"><span class="attr">username</span>=<span class="string">root</span></span><br><span class="line"><span class="attr">password</span>=<span class="string">ehero000921</span></span><br><span class="line"><span class="comment">##最好写在src目录文件下，注意看写在什么地方</span></span><br><span class="line"><span class="attr">12345</span></span><br></pre></td></tr></table></figure>

<blockquote>
<p>工具类</p>
</blockquote>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> JDBC01;</span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"><span class="keyword">import</span> java.io.InputStream;</span><br><span class="line"><span class="keyword">import</span> java.sql.Connection;</span><br><span class="line"><span class="keyword">import</span> java.sql.DriverManager;</span><br><span class="line"><span class="keyword">import</span> java.sql.ResultSet;</span><br><span class="line"><span class="keyword">import</span> java.sql.SQLException;</span><br><span class="line"><span class="keyword">import</span> java.sql.Statement;</span><br><span class="line"><span class="keyword">import</span> java.util.Properties;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">jdbcutils</span> &#123;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">private</span> <span class="keyword">static</span> String driver=<span class="literal">null</span>;</span><br><span class="line">	<span class="keyword">private</span> <span class="keyword">static</span> String url=<span class="literal">null</span>;</span><br><span class="line">	<span class="keyword">private</span> <span class="keyword">static</span> String username=<span class="literal">null</span>;</span><br><span class="line">	<span class="keyword">private</span> <span class="keyword">static</span> String password=<span class="literal">null</span>;</span><br><span class="line">	<span class="keyword">static</span>&#123;</span><br><span class="line">		<span class="keyword">try</span>&#123;</span><br><span class="line"><span class="comment">//			InputStream in=jdbcutils.class.getClassLoader().getResourceAsStream(&quot;db.properties&quot;);</span></span><br><span class="line">			InputStream in=jdbcutils.class.getClassLoader().getResourceAsStream(<span class="string">&quot;JDBC01/db.properties&quot;</span>);<span class="comment">//这样就好了 </span></span><br><span class="line">			Properties properties=<span class="keyword">new</span> <span class="title class_">Properties</span>();</span><br><span class="line">			properties.load(in);</span><br><span class="line">			driver =properties.getProperty(<span class="string">&quot;driver&quot;</span>);</span><br><span class="line">			url =properties.getProperty(<span class="string">&quot;url&quot;</span>);</span><br><span class="line">			username =properties.getProperty(<span class="string">&quot;username&quot;</span>);</span><br><span class="line">			password =properties.getProperty(<span class="string">&quot;password&quot;</span>);</span><br><span class="line">			Class.forName(driver);</span><br><span class="line">			<span class="comment">//驱动只加载一次</span></span><br><span class="line">		</span><br><span class="line">			</span><br><span class="line">		&#125;<span class="keyword">catch</span>(IOException e)&#123;</span><br><span class="line">			e.printStackTrace();</span><br><span class="line">		&#125;<span class="keyword">catch</span> (ClassNotFoundException e) &#123;</span><br><span class="line">			<span class="comment">// TODO Auto-generated catch block</span></span><br><span class="line">			e.printStackTrace();</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="comment">//获取连接</span></span><br><span class="line">	<span class="keyword">public</span> <span class="keyword">static</span> Connection <span class="title function_">getConnection</span><span class="params">()</span> <span class="keyword">throws</span> SQLException</span><br><span class="line">	&#123;</span><br><span class="line">		<span class="keyword">return</span> DriverManager.getConnection(url,username,password);</span><br><span class="line">	&#125;</span><br><span class="line">	</span><br><span class="line">	<span class="comment">//释放连接资源</span></span><br><span class="line">	</span><br><span class="line">	<span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">release</span><span class="params">(Connection conn,Statement st, ResultSet rs)</span> <span class="keyword">throws</span> SQLException</span><br><span class="line">	&#123;</span><br><span class="line">		<span class="keyword">if</span>(rs!=<span class="literal">null</span>)</span><br><span class="line">		&#123;</span><br><span class="line">			rs.close();</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">if</span>(st!=<span class="literal">null</span>)</span><br><span class="line">		&#123;</span><br><span class="line">			st.close();</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">if</span>(conn!=<span class="literal">null</span>)</span><br><span class="line">		&#123;</span><br><span class="line">			conn.close();</span><br><span class="line">		&#125;</span><br><span class="line">		</span><br><span class="line">	&#125;</span><br><span class="line">	</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="number">12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455565758596061626364</span></span><br></pre></td></tr></table></figure>

<blockquote>
<p>代码：</p>
</blockquote>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> JDBC01;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.sql.Connection;</span><br><span class="line"><span class="keyword">import</span> java.sql.ResultSet;</span><br><span class="line"><span class="keyword">import</span> java.sql.SQLException;</span><br><span class="line"><span class="keyword">import</span> java.sql.Statement;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">testinsert</span> &#123;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> Exception &#123;</span><br><span class="line">		<span class="type">Connection</span> <span class="variable">conn</span> <span class="operator">=</span><span class="literal">null</span>;</span><br><span class="line">		Statement st=<span class="literal">null</span>;</span><br><span class="line">		ResultSet rs=<span class="literal">null</span>;</span><br><span class="line">		</span><br><span class="line">		<span class="keyword">try</span> &#123;</span><br><span class="line">			conn= jdbcutils.getConnection();</span><br><span class="line">			st=conn.createStatement();</span><br><span class="line">			String sql=<span class="string">&quot;INSERT INTO `users`  (`id`,`name`,`password`,`birthday`)&quot;</span></span><br><span class="line">					+ <span class="string">&quot; VALUES (&#x27;9&#x27;,&#x27;大傻逼2&#x27;,&#x27;55201314&#x27;,&#x27;2000-12-11&#x27;) &quot;</span>;</span><br><span class="line">			<span class="type">int</span> i=st.executeUpdate(sql);</span><br><span class="line">			<span class="keyword">if</span>(i&gt;<span class="number">0</span>)</span><br><span class="line">			&#123;</span><br><span class="line">				System.out.println(<span class="string">&quot;插入成功!&quot;</span>);</span><br><span class="line">			&#125;</span><br><span class="line">		&#125; <span class="keyword">catch</span> (SQLException e) &#123;</span><br><span class="line">			<span class="comment">// TODO Auto-generated catch block</span></span><br><span class="line">			e.printStackTrace();</span><br><span class="line">		&#125;<span class="keyword">finally</span> &#123;</span><br><span class="line">			jdbcutils.release(conn, st, rs);</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//只需要改sql</span></span><br><span class="line"><span class="number">123456789101112131415161718192021222324252627282930313233</span></span><br></pre></td></tr></table></figure>

<blockquote>
<p>sql注入问题</p>
</blockquote>
<p>sql存在漏洞，会导致被拼接</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> JDBC01;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.sql.Connection;</span><br><span class="line"><span class="keyword">import</span> java.sql.ResultSet;</span><br><span class="line"><span class="keyword">import</span> java.sql.SQLException;</span><br><span class="line"><span class="keyword">import</span> java.sql.Statement;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">sql</span> &#123;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">		sql.login(<span class="string">&quot; &#x27;or &#x27;1=1&quot;</span>, <span class="string">&quot;&#x27;or &#x27;1=1&quot;</span>);</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">login</span><span class="params">(String username,String password)</span></span><br><span class="line">	&#123;</span><br><span class="line">		Connection conn=<span class="literal">null</span>;</span><br><span class="line">		Statement sta=<span class="literal">null</span>;</span><br><span class="line">		ResultSet re=<span class="literal">null</span>;</span><br><span class="line">		<span class="keyword">try</span> &#123;</span><br><span class="line">			conn= jdbcutils.getConnection();</span><br><span class="line">			sta=conn.createStatement();</span><br><span class="line">			String sql=<span class="string">&quot;SELECT * FROM `users`  WHERE `name`=&#x27;&quot;</span>+username+<span class="string">&quot;&#x27; AND `password`=&#x27;&quot;</span>+password+<span class="string">&quot;&#x27;&quot;</span>;</span><br><span class="line">		    re=sta.executeQuery(sql);</span><br><span class="line">		    <span class="keyword">while</span>(re.next())</span><br><span class="line">		    &#123;</span><br><span class="line">		    	System.out.print(re.getString(<span class="string">&quot;name&quot;</span>)+<span class="string">&quot;  &quot;</span>);</span><br><span class="line">		    	System.out.println(re.getString(<span class="string">&quot;password&quot;</span>));</span><br><span class="line">		    &#125;</span><br><span class="line">		&#125; <span class="keyword">catch</span> (SQLException e) &#123;</span><br><span class="line">			</span><br><span class="line">			e.printStackTrace();</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="number">123456789101112131415161718192021222324252627282930313233343536373839</span></span><br></pre></td></tr></table></figure>

<h2 id="10-5、PreparedStatement"><a href="#10-5、PreparedStatement" class="headerlink" title="10.5、PreparedStatement"></a>10.5、PreparedStatement</h2><blockquote>
<p>增加</p>
</blockquote>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> JDBC01;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.sql.Connection;</span><br><span class="line"><span class="keyword">import</span> java.sql.PreparedStatement;</span><br><span class="line"><span class="keyword">import</span> java.sql.SQLException;</span><br><span class="line"><span class="keyword">import</span> java.util.Date;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.mysql.fabric.xmlrpc.base.Data;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">test02</span> &#123;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">		</span><br><span class="line">		Connection con=<span class="literal">null</span>;</span><br><span class="line">		PreparedStatement pst=<span class="literal">null</span>;</span><br><span class="line">		<span class="keyword">try</span> &#123;</span><br><span class="line">			con=jdbcutils.getConnection();</span><br><span class="line">			<span class="type">String</span> <span class="variable">sql</span> <span class="operator">=</span><span class="string">&quot;insert into users(id,name,password,birthday) values(?,?,?,?)&quot;</span>;</span><br><span class="line">			pst=con.prepareStatement(sql);</span><br><span class="line">			pst.setInt(<span class="number">1</span>, <span class="number">7</span>);</span><br><span class="line">			pst.setString(<span class="number">2</span>, <span class="string">&quot;蠢货&quot;</span>);</span><br><span class="line">			pst.setString(<span class="number">3</span>, <span class="string">&quot;5201314888&quot;</span>);</span><br><span class="line">			pst.setDate(<span class="number">4</span>, <span class="keyword">new</span> <span class="title class_">java</span>.sql.Date(<span class="keyword">new</span> <span class="title class_">Date</span>().getTime()) );</span><br><span class="line">			<span class="type">int</span> i=pst.executeUpdate();</span><br><span class="line">			<span class="keyword">if</span>(i==<span class="number">1</span>)</span><br><span class="line">				System.out.println(<span class="string">&quot;插进去了&quot;</span>);</span><br><span class="line">		&#125; <span class="keyword">catch</span> (SQLException e) &#123;</span><br><span class="line">			<span class="comment">// TODO Auto-generated catch block</span></span><br><span class="line">			e.printStackTrace();</span><br><span class="line">		&#125;<span class="keyword">finally</span> &#123;</span><br><span class="line">			<span class="keyword">if</span>(pst!=<span class="literal">null</span>)</span><br><span class="line">				<span class="keyword">try</span> &#123;</span><br><span class="line">					pst.close();</span><br><span class="line">				&#125; <span class="keyword">catch</span> (SQLException e) &#123;</span><br><span class="line">					<span class="comment">// TODO Auto-generated catch block</span></span><br><span class="line">					e.printStackTrace();</span><br><span class="line">				&#125;</span><br><span class="line">			<span class="keyword">if</span>(con!=<span class="literal">null</span>)</span><br><span class="line">				<span class="keyword">try</span> &#123;</span><br><span class="line">					con.close();</span><br><span class="line">				&#125; <span class="keyword">catch</span> (SQLException e) &#123;</span><br><span class="line">					<span class="comment">// TODO Auto-generated catch block</span></span><br><span class="line">					e.printStackTrace();</span><br><span class="line">				&#125;</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">	</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="number">12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849</span></span><br></pre></td></tr></table></figure>

<blockquote>
<p>删除</p>
</blockquote>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> JDBC01;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.sql.Connection;</span><br><span class="line"><span class="keyword">import</span> java.sql.PreparedStatement;</span><br><span class="line"><span class="keyword">import</span> java.sql.SQLException;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">test03</span> &#123;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">		Connection con=<span class="literal">null</span>;</span><br><span class="line">		PreparedStatement pst=<span class="literal">null</span>;</span><br><span class="line">		<span class="keyword">try</span> &#123;</span><br><span class="line">			con=jdbcutils.getConnection();</span><br><span class="line">			String sql=<span class="string">&quot;delete from users where id=? &quot;</span>;</span><br><span class="line">			pst=con.prepareStatement(sql);</span><br><span class="line">			pst.setInt(<span class="number">1</span>, <span class="number">7</span>);</span><br><span class="line">			<span class="type">int</span> i=pst.executeUpdate();</span><br><span class="line">			<span class="keyword">if</span>(i==<span class="number">1</span>)</span><br><span class="line">				System.out.println(<span class="string">&quot;删了&quot;</span>);</span><br><span class="line">		&#125; <span class="keyword">catch</span> (SQLException e) &#123;</span><br><span class="line">			<span class="comment">// TODO Auto-generated catch block</span></span><br><span class="line">			e.printStackTrace();</span><br><span class="line">		&#125;</span><br><span class="line">		</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="number">123456789101112131415161718192021222324252627</span></span><br></pre></td></tr></table></figure>

<blockquote>
<p>改变</p>
</blockquote>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> JDBC01;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.sql.Connection;</span><br><span class="line"><span class="keyword">import</span> java.sql.PreparedStatement;</span><br><span class="line"><span class="keyword">import</span> java.sql.SQLException;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">test04</span> &#123;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">		Connection con=<span class="literal">null</span>;</span><br><span class="line">		PreparedStatement pst=<span class="literal">null</span>;</span><br><span class="line">		<span class="keyword">try</span> &#123;</span><br><span class="line">			con=jdbcutils.getConnection();</span><br><span class="line">			String sql=<span class="string">&quot;update users set `name`=&#x27;杂种&#x27; where `id`=?&quot;</span>;</span><br><span class="line">			</span><br><span class="line">			pst=con.prepareStatement(sql);</span><br><span class="line">			pst.setInt(<span class="number">1</span>, <span class="number">5</span>);</span><br><span class="line">			<span class="type">int</span> i=pst.executeUpdate();</span><br><span class="line">			<span class="keyword">if</span>(i==<span class="number">1</span>)</span><br><span class="line">				System.out.println(<span class="string">&quot;成功&quot;</span>);</span><br><span class="line">		&#125; <span class="keyword">catch</span> (SQLException e) &#123;</span><br><span class="line">			<span class="comment">// TODO Auto-generated catch block</span></span><br><span class="line">			e.printStackTrace();</span><br><span class="line">		&#125;</span><br><span class="line">		</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="number">12345678910111213141516171819202122232425262728</span></span><br></pre></td></tr></table></figure>

<blockquote>
<p>删除</p>
</blockquote>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> JDBC01;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.sql.Connection;</span><br><span class="line"><span class="keyword">import</span> java.sql.PreparedStatement;</span><br><span class="line"><span class="keyword">import</span> java.sql.ResultSet;</span><br><span class="line"><span class="keyword">import</span> java.sql.SQLException;</span><br><span class="line"><span class="keyword">import</span> java.util.Date;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.mysql.fabric.xmlrpc.base.Data;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">test05</span> &#123;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">		Connection con=<span class="literal">null</span>;</span><br><span class="line">		PreparedStatement pst=<span class="literal">null</span>;</span><br><span class="line">		ResultSet rs=<span class="literal">null</span>;</span><br><span class="line">		<span class="keyword">try</span> &#123;</span><br><span class="line">			con=jdbcutils.getConnection();</span><br><span class="line">			String sql=<span class="string">&quot;select * from `users` where id=?&quot;</span>;</span><br><span class="line">			pst=con.prepareStatement(sql);</span><br><span class="line">			pst.setInt(<span class="number">1</span>, <span class="number">2</span>);</span><br><span class="line">			rs=pst.executeQuery();</span><br><span class="line">			<span class="keyword">while</span>(rs.next())</span><br><span class="line">			&#123;</span><br><span class="line">				System.out.println(rs.getInt(<span class="string">&quot;id&quot;</span>));</span><br><span class="line">				System.out.println(rs.getString(<span class="string">&quot;name&quot;</span>));</span><br><span class="line">				System.out.println(rs.getString(<span class="string">&quot;password&quot;</span>));</span><br><span class="line">				System.out.println(rs.getString(<span class="string">&quot;birthday&quot;</span>));</span><br><span class="line"><span class="comment">//				System.out.println(rs.getDate(new java.sql.Date(new Date().getTime())));</span></span><br><span class="line">			&#125;</span><br><span class="line">		&#125; <span class="keyword">catch</span> (SQLException e) &#123;</span><br><span class="line">			<span class="comment">// TODO Auto-generated catch block</span></span><br><span class="line">			e.printStackTrace();</span><br><span class="line">		&#125;</span><br><span class="line">		</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="number">1234567891011121314151617181920212223242526272829303132333435363738</span></span><br></pre></td></tr></table></figure>

<h2 id="10-6、使用IDEA连接数据库"><a href="#10-6、使用IDEA连接数据库" class="headerlink" title="10.6、使用IDEA连接数据库"></a>10.6、使用IDEA连接数据库</h2><h2 id="10-7、数据库连接池"><a href="#10-7、数据库连接池" class="headerlink" title="10.7、数据库连接池"></a>10.7、数据库连接池</h2><p>数据库连接—-执行完毕—释放</p>
<p>连接十分浪费资源</p>
<p><strong>池化技术：准备一些预先的资源，过来就是连接准备好的</strong></p>
<p>—-开门—-业务员：等待–服务—</p>
<p>常用连接数：10</p>
<p>最小连接数：10</p>
<p>最小连接数：100 业务最高承载上限</p>
<p>等待超时：100ms</p>
<p>编写连接池，实现一个接口 DateSource</p>
<blockquote>
<p>开源数据源实现</p>
</blockquote>
<p>DBCP</p>
<p>C3P0</p>
<p>Druid：阿里巴巴</p>
<p>使用这些数据库连接池后在项目就不需要写项目连接池了</p>
<blockquote>
<p>DBCP</p>
</blockquote>
]]></content>
      <categories>
        <category>技术</category>
      </categories>
  </entry>
  <entry>
    <title>朋友，你好！！！</title>
    <url>/posts/helloWorld.html</url>
    <content><![CDATA[<p>欢迎来到<strong>Maric的博客</strong>！！！这里现在是一名大一萌新的博客网站，以后将会有更多优质的文章持续输出，欢迎收藏我的博客网址哦！</p>
]]></content>
  </entry>
  <entry>
    <title>三维重建SFM-stage-1特征匹配</title>
    <url>/posts/sfmstage01.html</url>
    <content><![CDATA[<h1 id="三维重建SFM-Stage-1-Feature-Matching-特征匹配"><a href="#三维重建SFM-Stage-1-Feature-Matching-特征匹配" class="headerlink" title="三维重建SFM Stage 1-Feature Matching 特征匹配"></a>三维重建SFM Stage 1-Feature Matching 特征匹配</h1><blockquote>
<p>本文章为电子科大大二数字动漫综合设计挑战项目，笔者主要对代码作解析，具体原理可以参考网上资料。</p>
</blockquote>
<span id="more"></span>

<h2 id="环境配置"><a href="#环境配置" class="headerlink" title="环境配置"></a>环境配置</h2><p>系统：Linux Ubuntu</p>
<p>IDE： Clion</p>
<p>库：OpenCV 4.8.0</p>
<h2 id="代码解析"><a href="#代码解析" class="headerlink" title="代码解析"></a>代码解析</h2><h3 id="图像读入"><a href="#图像读入" class="headerlink" title="图像读入"></a>图像读入</h3><p>使用<strong>imread</strong>读取图像：</p>
<ul>
<li>filename：图像路径</li>
<li>flags:图像读入方式。SIFT算法通常在<strong>灰度图像</strong>上运行，因为灰度图像更简单，计算效率更高，所以选择读入灰度图像</li>
</ul>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line">cv::Mat image1 = cv::<span class="built_in">imread</span>(<span class="string">&quot;/home/maric/CLionProjects/reconstruction/s2/B21.jpg&quot;</span>,cv::IMREAD_GRAYSCALE);</span><br><span class="line">cv::Mat image2 = cv::<span class="built_in">imread</span>(<span class="string">&quot;/home/maric/CLionProjects/reconstruction/s2/B22.jpg&quot;</span>,cv::IMREAD_GRAYSCALE);</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h3 id="设置掩码"><a href="#设置掩码" class="headerlink" title="设置掩码"></a>设置掩码</h3><p>定义了一个与原始图像相同大小的二值图像，其中像素值为0或255。掩码的作用是限制特征点的检测和匹配区域，只对指定区域内的图像进行特征提取和匹配。</p>
<p>在这里，使用矩形区域定义了采样区域的ROI（Region of Interest），然后将掩码中对应区域的像素值设置为255，以便在该区域内进行特征点检测和匹配。</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line">   <span class="comment">// 定义掩码图像</span></span><br><span class="line"><span class="comment">//--------------</span></span><br><span class="line"><span class="comment">//设置掩码大小与图片等大，且全部置零</span></span><br><span class="line">   cv::Mat mask1 = cv::Mat::<span class="built_in">zeros</span>(image1.<span class="built_in">size</span>(), CV_8U); </span><br><span class="line">   cv::Mat mask2 = cv::Mat::<span class="built_in">zeros</span>(image2.<span class="built_in">size</span>(), CV_8U);</span><br><span class="line"></span><br><span class="line">   <span class="comment">// 划定采样区域的矩形,从(100,30)坐标框选(300,600)大小区域作为采样区</span></span><br><span class="line">   <span class="function">cv::Rect <span class="title">roi1</span><span class="params">(<span class="number">100</span>, <span class="number">30</span>, <span class="number">300</span>, <span class="number">600</span>)</span></span>;  </span><br><span class="line">   <span class="function">cv::Rect <span class="title">roi2</span><span class="params">(<span class="number">100</span>, <span class="number">30</span>, <span class="number">300</span>, <span class="number">600</span>)</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">//将该区域掩码设置为255</span></span><br><span class="line">   <span class="built_in">mask1</span>(roi1).<span class="built_in">setTo</span>(<span class="number">255</span>); </span><br><span class="line">   <span class="built_in">mask2</span>(roi2).<span class="built_in">setTo</span>(<span class="number">255</span>);</span><br></pre></td></tr></table></figure>

<h3 id="SIFT（Scale-Invariant-Feature-Transform）算法"><a href="#SIFT（Scale-Invariant-Feature-Transform）算法" class="headerlink" title="SIFT（Scale-Invariant Feature Transform）算法"></a>SIFT（Scale-Invariant Feature Transform）算法</h3><p>SIFT检测能够提取出具有唯一性和尺度不变性的图像特征点，并计算出描述符以进行特征匹配。这使得SIFT在计算机视觉领域的很多应用中都发挥着重要的作用，例如目标识别、图像拼接、三维重建等。</p>
<ul>
<li>SIFT参数：<ul>
<li>nfeatures：要检测的关键点数量，默认为0，设定为1000提高效率</li>
<li>nOctaveLayers：每个金字塔组中的层数，设定为5提高精度</li>
<li>contrastThreshold：用于过滤关键点的对比度阈值，默认为0.04。对于灰度图像，该值影响较小，若使用彩色图像，则可以对该值进行一定的调整。</li>
<li>edgeThreshold：用于过滤边缘关键点的阈值，默认为10.0。</li>
<li>sigma：高斯滤波器的初始方差，默认为1.6</li>
</ul>
</li>
</ul>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 创建SIFT特征检测器</span></span><br><span class="line">cv::Ptr&lt;cv::Feature2D&gt; sift = cv::SIFT::<span class="built_in">create</span></span><br><span class="line">        (</span><br><span class="line">                <span class="number">1000</span>,</span><br><span class="line">                <span class="number">5</span>,</span><br><span class="line">                <span class="number">0.03</span>,</span><br><span class="line">                <span class="number">10.0</span>,</span><br><span class="line">                <span class="number">1.6</span>,</span><br><span class="line">                <span class="literal">false</span></span><br><span class="line">        );<span class="comment">//创建SIFT</span></span><br></pre></td></tr></table></figure>

<h4 id="特征点检测"><a href="#特征点检测" class="headerlink" title="特征点检测"></a>特征点检测</h4><p>SIFT算法能够在图像中检测出具有显著特征的位置，这些位置被称为关键点（keypoints）。关键点通常位于图像中的角点、边缘、纹理等具有唯一性的位置，能够在不同尺度和旋转下保持稳定。通过检测关键点，可以在图像中找到具有显著特征的位置。</p>
<h4 id="特征描述"><a href="#特征描述" class="headerlink" title="特征描述"></a>特征描述</h4><p>对于每个检测到的关键点，SIFT算法计算一个描述符（descriptor），描述符是一个包含了关键点及其周围区域的局部特征向量。描述符编码了关键点周围区域的梯度方向、梯度大小等信息，具有较高的区分度和尺度不变性。通过计算描述符，可以将关键点转换为数值表示，用于后续的特征匹配和识别任务。</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="comment">//关键点列表: 图像中的特殊点，具有显著特征的位置，用于定位</span></span><br><span class="line">   std::vector&lt;cv::KeyPoint&gt; keypoints1, keypoints2;    </span><br><span class="line">cv::Mat descriptors1, descriptors2;</span><br><span class="line"> <span class="comment">//根据图片和掩码获得关键点和描述符</span></span><br><span class="line">   sift-&gt;<span class="built_in">detectAndCompute</span>(image1, mask1, keypoints1, descriptors1);</span><br><span class="line">   sift-&gt;<span class="built_in">detectAndCompute</span>(image2, mask2, keypoints2, descriptors2);</span><br></pre></td></tr></table></figure>

<h4 id="特征匹配："><a href="#特征匹配：" class="headerlink" title="特征匹配："></a>特征匹配：</h4><p>SIFT算法通过比较关键点的描述符，可以进行特征匹配。通过在两幅图像中找到具有相似特征描述符的关键点对，可以将两幅图像中的相应特征点进行匹配。特征匹配在图像拼接、目标跟踪、图像检索等应用中非常有用，目前openCV可以使用两种方法进行特征匹配：</p>
<ul>
<li><p><code>Brute-Force</code>暴力匹配：Brute-Force匹配的优点是简单直观，易于实现。然而，它的计算复杂度较高，特别是在具有大量特征点的情况下。因此，在处理大规模数据时，Brute-Force匹配可能会变得相对缓慢。</p>
</li>
<li><p><code>FLANN</code>最近邻匹配：使用<code>cv::FlannBasedMatcher</code>类，它基于特征描述子之间的距离来找到最相似的k个特征点，并根据一定的阈值和筛选规则来决定是否进行匹配，这里笔者采用的是Flann匹配法。</p>
<ul>
<li>直接匹配：</li>
</ul>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 使用FLANN匹配器进行特征匹配</span></span><br><span class="line"><span class="comment">//匹配处理器</span></span><br><span class="line">   cv::Ptr&lt;cv::FlannBasedMatcher&gt; flann = cv::FlannBasedMatcher::<span class="built_in">create</span>();</span><br><span class="line"><span class="comment">//匹配结果列表</span></span><br><span class="line">std::vector&lt;cv::DMatch&gt; matches;</span><br><span class="line"><span class="comment">//匹配结果处理</span></span><br><span class="line">flann-&gt;<span class="built_in">match</span>(descriptors1, descriptors2, matches);</span><br><span class="line">  </span><br><span class="line"><span class="comment">// 绘制匹配结果</span></span><br><span class="line">cv::Mat matchImage;</span><br><span class="line">cv::<span class="built_in">drawMatches</span>(image1, keypoints1, image2, keypoints2, matches, matchImage);</span><br><span class="line">  </span><br><span class="line"><span class="comment">// 显示匹配结果</span></span><br><span class="line">cv::<span class="built_in">imshow</span>(<span class="string">&quot;SIFT Matches&quot;</span>, matchImage);</span><br><span class="line">cv::<span class="built_in">waitKey</span>(<span class="number">0</span>);</span><br></pre></td></tr></table></figure>

<p><img data-src="https://cdn.jsdelivr.net/gh/JcMarical/mapstorage/images/image-20231109203218795.png" alt="image-20231109203218795"></p>
<p>可以看到，直接匹配有太多的错误点，我们需要针对此进行优化</p>
</li>
</ul>
<h3 id="优化"><a href="#优化" class="headerlink" title="优化"></a>优化</h3><h4 id="距离比例筛选（Distance-Ratio-Filtering）"><a href="#距离比例筛选（Distance-Ratio-Filtering）" class="headerlink" title="距离比例筛选（Distance Ratio Filtering）"></a>距离比例筛选（Distance Ratio Filtering）</h4><p>在特征匹配中，距离比例筛选是一种常用的筛选方法，用于排除一些不可靠的匹配结果。通过比较匹配结果中<strong>最近邻和次近邻</strong>之间的距离比例，可以判断匹配的可靠性。通常情况下，如果最近邻的距离远远小于次近邻的距离，那么可以认为这是一个可靠的匹配。</p>
<p>笔者通过遍历所有的匹配结果（<code>matches</code>向量），对每个匹配结果进行以下判断：如果第一个最近邻的距离小于<strong>距离比例阈值k</strong>倍数的第二个最近邻的距离，将该匹配结果添加到新的匹配结果中，从而排除不可靠的匹配。</p>
<ul>
<li><p>我们对flann匹配代码部分进行重写，首先我们需要计算出新的次近邻匹配</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="comment">//匹配处理器</span></span><br><span class="line">cv::Ptr&lt;cv::FlannBasedMatcher&gt; flann = cv::FlannBasedMatcher::<span class="built_in">create</span>();</span><br><span class="line"><span class="comment">//匹配结果列表</span></span><br><span class="line">std::vector&lt;std::vector&lt;cv::DMatch&gt;&gt; matches;</span><br><span class="line"><span class="comment">//匹配结果处理</span></span><br><span class="line">flann-&gt;<span class="built_in">knnMatch</span>(descriptors1, descriptors2, matches,<span class="number">2</span>);</span><br></pre></td></tr></table></figure>
</li>
<li><p>定义一个新的Dmatch变量good，用来存放好的匹配结果，同时设置距离比例阈值，通过调整阈值，我们可以对匹配结果进行筛选，最后通过这个good匹配结果生成匹配点</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line">std::vector&lt;cv::DMatch&gt; good;</span><br><span class="line">    <span class="type">float</span> ratio = <span class="number">0.65</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">size_t</span> i = <span class="number">0</span>; i &lt; matches.<span class="built_in">size</span>(); i++) &#123;</span><br><span class="line">        <span class="keyword">if</span> (matches[i][<span class="number">0</span>].distance &lt; ratio * matches[i][<span class="number">1</span>].distance) &#123;</span><br><span class="line">            good.<span class="built_in">push_back</span>(matches[i][<span class="number">0</span>]);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">        <span class="comment">// 绘制匹配结果</span></span><br><span class="line">        cv::Mat matchImage;</span><br><span class="line">        cv::<span class="built_in">drawMatches</span>(image1, keypoints1, image2, keypoints2, good, matchImage);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 显示匹配结果</span></span><br><span class="line">        cv::<span class="built_in">imshow</span>(<span class="string">&quot;SIFT Matches&quot;</span>, matchImage);</span><br><span class="line">        cv::<span class="built_in">waitKey</span>(<span class="number">0</span>);</span><br><span class="line">    </span><br></pre></td></tr></table></figure></li>
</ul>
<h3 id="匹配结果"><a href="#匹配结果" class="headerlink" title="匹配结果"></a>匹配结果</h3><p>可以看到，匹配结果精确了很多。</p>
<p><img data-src="https://cdn.jsdelivr.net/gh/JcMarical/mapstorage/images/image-20231109212448428.png" alt="image-20231109212448428"></p>
<h3 id="源代码"><a href="#源代码" class="headerlink" title="源代码"></a>源代码</h3><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="comment">// Created by maric on 23-10-9.</span></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;opencv2/opencv.hpp&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="type">const</span> <span class="type">int</span> MIN_MATCH_COUNT = <span class="number">10</span>;</span><br><span class="line"><span class="comment">//SIFT匹配的算法，包含各语句含义解释</span></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="comment">// 读取两个图像</span></span><br><span class="line">    cv::Mat image1 = cv::<span class="built_in">imread</span>(<span class="string">&quot;/home/maric/CLionProjects/reconstruction/s2/B21.jpg&quot;</span>, cv::IMREAD_GRAYSCALE);</span><br><span class="line">    cv::Mat image2 = cv::<span class="built_in">imread</span>(<span class="string">&quot;/home/maric/CLionProjects/reconstruction/s2/B22.jpg&quot;</span>, cv::IMREAD_GRAYSCALE);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 定义掩码图像</span></span><br><span class="line">    cv::Mat mask1 = cv::Mat::<span class="built_in">zeros</span>(image1.<span class="built_in">size</span>(), CV_8U); <span class="comment">//设置掩码大小与图片等大，且全部置零</span></span><br><span class="line">    cv::Mat mask2 = cv::Mat::<span class="built_in">zeros</span>(image2.<span class="built_in">size</span>(), CV_8U);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 划定采样区域的矩形</span></span><br><span class="line">    <span class="function">cv::Rect <span class="title">roi1</span><span class="params">(<span class="number">100</span>, <span class="number">30</span>, <span class="number">300</span>, <span class="number">600</span>)</span></span>;  <span class="comment">//从(100,30)坐标框选(300,600)大小区域作为采样区</span></span><br><span class="line">    <span class="function">cv::Rect <span class="title">roi2</span><span class="params">(<span class="number">100</span>, <span class="number">30</span>, <span class="number">300</span>, <span class="number">600</span>)</span></span>;</span><br><span class="line">    <span class="built_in">mask1</span>(roi1).<span class="built_in">setTo</span>(<span class="number">255</span>); <span class="comment">//将该区域掩码设置为255</span></span><br><span class="line">    <span class="built_in">mask2</span>(roi2).<span class="built_in">setTo</span>(<span class="number">255</span>);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 创建SIFT特征检测器SS</span></span><br><span class="line">    cv::Ptr&lt;cv::Feature2D&gt; sift = cv::SIFT::<span class="built_in">create</span></span><br><span class="line">            (</span><br><span class="line">                    <span class="number">1000</span>,</span><br><span class="line">                    <span class="number">5</span>,</span><br><span class="line">                    <span class="number">0.03</span>,</span><br><span class="line">                    <span class="number">10.0</span>,</span><br><span class="line">                    <span class="number">1.6</span>,</span><br><span class="line">                    <span class="literal">false</span></span><br><span class="line">            );<span class="comment">//创建SIFT</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">// 检测特征点和计算描述符</span></span><br><span class="line">    <span class="comment">//关键点列表: 图像中的特殊点，具有显著特征的位置，用于定位</span></span><br><span class="line">    std::vector&lt;cv::KeyPoint&gt; keypoints1, keypoints2;</span><br><span class="line">    <span class="comment">//关键描述列表: 包含了某点及附近向量信息的描述，用来确定唯一点</span></span><br><span class="line">    cv::Mat descriptors1, descriptors2;</span><br><span class="line">    <span class="comment">//参数(输入图片，掩码，关键点向量(列表)，关键描述向量(列表))</span></span><br><span class="line">    sift-&gt;<span class="built_in">detectAndCompute</span>(image1, mask1, keypoints1, descriptors1);</span><br><span class="line">    sift-&gt;<span class="built_in">detectAndCompute</span>(image2, mask2, keypoints2, descriptors2);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 使用FLANN匹配器进行特征匹配</span></span><br><span class="line">    <span class="comment">//匹配处理器</span></span><br><span class="line">    cv::Ptr&lt;cv::FlannBasedMatcher&gt; flann = cv::FlannBasedMatcher::<span class="built_in">create</span>();</span><br><span class="line">    <span class="comment">//匹配结果列表</span></span><br><span class="line">    std::vector&lt;std::vector&lt;cv::DMatch&gt;&gt; matches;</span><br><span class="line">    <span class="comment">//匹配结果处理</span></span><br><span class="line">    flann-&gt;<span class="built_in">knnMatch</span>(descriptors1, descriptors2, matches, <span class="number">2</span>);</span><br><span class="line"></span><br><span class="line">    <span class="comment">//将符合条件的特征点分别存入p1和p2</span></span><br><span class="line">    std::vector&lt;cv::DMatch&gt; good;</span><br><span class="line">    <span class="type">float</span> ratio = <span class="number">0.65</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">size_t</span> i = <span class="number">0</span>; i &lt; matches.<span class="built_in">size</span>(); i++) &#123;</span><br><span class="line">        <span class="keyword">if</span> (matches[i][<span class="number">0</span>].distance &lt; ratio * matches[i][<span class="number">1</span>].distance) &#123;</span><br><span class="line">            good.<span class="built_in">push_back</span>(matches[i][<span class="number">0</span>]);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">        <span class="comment">// 绘制匹配结果</span></span><br><span class="line">        cv::Mat matchImage;</span><br><span class="line">        cv::<span class="built_in">drawMatches</span>(image1, keypoints1, image2, keypoints2, good, matchImage);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 显示匹配结果</span></span><br><span class="line">        cv::<span class="built_in">imshow</span>(<span class="string">&quot;SIFT Matches&quot;</span>, matchImage);</span><br><span class="line">        cv::<span class="built_in">waitKey</span>(<span class="number">0</span>);</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>技术</category>
      </categories>
  </entry>
  <entry>
    <title>从零开始搭博客（Hexo+GitHub+Next）</title>
    <url>/posts/helloHexo.html</url>
    <content><![CDATA[<h1 id="从零开始搭博客"><a href="#从零开始搭博客" class="headerlink" title="从零开始搭博客"></a>从零开始搭博客</h1><p>此文章简单介绍了如何通过<strong>Hexo+GitHub+Next</strong>从零开始搭建一个完整的博客</p>
<blockquote>
<p>不过因为之前博主没有了解到Markdown图片的引用方式，导致博客图片全部炸掉，博主会找个时间把它修改回来。</p>
</blockquote>
<span id="more"></span>

<h2 id="相关软件工具下载"><a href="#相关软件工具下载" class="headerlink" title="相关软件工具下载"></a>相关软件工具下载</h2><h3 id="Node-js"><a href="#Node-js" class="headerlink" title="Node.js"></a>Node.js</h3><p>先在官网上下载<strong>Node.js</strong>	<a href="http://nodejs.cn/download/">下载 | Node.js 中文网 (nodejs.cn)</a></p>
<p><img data-src="https://cdn.jsdelivr.net/gh/JcMarical/mapstorage/images/image-20220913171949597-1701571965414.png" alt="image-20220913171949597"></p>
<h3 id="Git"><a href="#Git" class="headerlink" title="Git"></a>Git</h3><p>安装好后</p>
<p>分别输入</p>
<figure class="highlight crmsh"><table><tr><td class="code"><pre><span class="line"><span class="keyword">node</span> <span class="title">-v</span></span><br></pre></td></tr></table></figure>

<p> 确认node.js安装</p>
<figure class="highlight coffeescript"><table><tr><td class="code"><pre><span class="line"><span class="built_in">npm</span> -v</span><br></pre></td></tr></table></figure>

<p>确认node.js的一个伴随软件安装</p>
<figure class="highlight ada"><table><tr><td class="code"><pre><span class="line">git <span class="comment">--version</span></span><br></pre></td></tr></table></figure>

<p>确认git安装</p>
<p><img data-src="https://cdn.jsdelivr.net/gh/JcMarical/mapstorage/images/image-20220913173355208.png" alt="image-20220913173355208"></p>
<h3 id="Hexo"><a href="#Hexo" class="headerlink" title="Hexo"></a>Hexo</h3><p>确认好后，就可以安装我们的<strong>Hexo</strong>了,输入以下代码即可安装</p>
<figure class="highlight avrasm"><table><tr><td class="code"><pre><span class="line">npm install hexo-<span class="keyword">cli</span> -g</span><br></pre></td></tr></table></figure>

<hr>
<h2 id="创建仓库"><a href="#创建仓库" class="headerlink" title="创建仓库"></a>创建仓库</h2><p>登录Github后</p>
<p>点击左上角的<strong>New</strong></p>
<p>名字格式为<strong>用户名.github.io</strong>（我这里报错是因为已经创建了）</p>
<p><img data-src="https://cdn.jsdelivr.net/gh/JcMarical/mapstorage/images/image-20220913185215550.png" alt="image-20220913185215550"></p>
<p>搭建完毕如图所示</p>
<p><img data-src="https://cdn.jsdelivr.net/gh/JcMarical/mapstorage/images/image-20220913195416114.png" alt="image-20220913195416114"></p>
<hr>
<h2 id="生成SSH-Keys"><a href="#生成SSH-Keys" class="headerlink" title="生成SSH Keys"></a>生成SSH Keys</h2><p>基本原理和ssh远程免密登录操作相似</p>
<p>首先<strong>新建文件夹</strong></p>
<p>右键空白处点击 <strong>Git Bush Here</strong></p>
<p><img data-src="https://cdn.jsdelivr.net/gh/JcMarical/mapstorage/images/image-20220913195757528.png" alt="image-20220913195757528"></p>
<p>再输入</p>
<figure class="highlight elixir"><table><tr><td class="code"><pre><span class="line"><span class="variable">$ </span>ssh-keygen -t rsa -C <span class="string">&quot;Github注册用电子邮箱&quot;</span></span><br></pre></td></tr></table></figure>

<p>输入几个回车和y即可获得密钥</p>
<p><img data-src="https://cdn.jsdelivr.net/gh/JcMarical/mapstorage/images/image-20220913200537442.png" alt="image-20220913200537442"></p>
<p>然后在<strong>此电脑\users\个人文件夹.ssh</strong> 里找到<strong>id_rsa.pub</strong>公钥，用记事本打开后全选复制</p>
<p><img data-src="/%E4%BB%8E%E9%9B%B6%E5%BC%80%E5%A7%8B%E6%90%AD%E5%8D%9A%E5%AE%A2%EF%BC%88Hexo+GitHub+Next%EF%BC%89.assets/image-20220913202932667.png" alt="image-20220913202932667"></p>
<p>​	打开Github，点击<strong>头像右边的小三角</strong>，选择<strong>Setting</strong>，然后在出现的界面中，选择<strong>SSH and GPG keys</strong>,再点击右上角绿色的<strong>New SSH Key</strong></p>
<p>名称随意填写，把复制的东西粘贴到下面的Key即可</p>
<p><img data-src="https://cdn.jsdelivr.net/gh/JcMarical/mapstorage/images/image-20220913205438416.png" alt="image-20220913205438416"></p>
<hr>
<h2 id="本地生成博客"><a href="#本地生成博客" class="headerlink" title="本地生成博客"></a>本地生成博客</h2><p>然后转到我们的MINGW64页面</p>
<p>输入</p>
<figure class="highlight nginx"><table><tr><td class="code"><pre><span class="line"><span class="attribute">ssh</span> -T git<span class="variable">@github</span>.com</span><br></pre></td></tr></table></figure>

<p>选择<strong>yes</strong>，我们便成功连接上了github</p>
<p><img data-src="https://cdn.jsdelivr.net/gh/JcMarical/mapstorage/images/image-20220913210215008.png" alt="image-20220913210215008"></p>
<p>初始化服务器</p>
<figure class="highlight csharp"><table><tr><td class="code"><pre><span class="line">hexo <span class="keyword">init</span></span><br></pre></td></tr></table></figure>

<p><img data-src="https://cdn.jsdelivr.net/gh/JcMarical/mapstorage/images/image-20220913212932654.png" alt="image-20220913212932654"></p>
<p>启动服务器</p>
<figure class="highlight ebnf"><table><tr><td class="code"><pre><span class="line"><span class="attribute">hexo s</span></span><br></pre></td></tr></table></figure>

<p><img data-src="https://cdn.jsdelivr.net/gh/JcMarical/mapstorage/images/image-20220913213053338.png" alt="image-20220913213053338"></p>
<p>启动后输入<a href="http://localhost:4000/%E5%8D%B3%E5%8F%AF%E7%9C%8B%E5%88%B0%E8%87%AA%E5%B7%B1%E7%9A%84%E5%8D%9A%E5%AE%A2">http://localhost:4000/即可看到自己的博客</a></p>
<hr>
<h2 id="发布博客"><a href="#发布博客" class="headerlink" title="发布博客"></a>发布博客</h2><p>回到我们之前创建的空文件夹，发现已经多出了很多文件，找到**_config.yml**配置文件，打开（我这里用的是Vscode）</p>
<p>找到下方的</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">deploy:</span><br><span class="line"></span><br><span class="line"> <span class="built_in">type</span>: <span class="string">&#x27;&#x27;</span></span><br></pre></td></tr></table></figure>

<p>改为（<strong>注意冒号后有空格</strong>）</p>
<figure class="highlight dts"><table><tr><td class="code"><pre><span class="line"><span class="symbol">deploy:</span></span><br><span class="line"><span class="symbol"></span></span><br><span class="line"><span class="symbol"> type:</span> git</span><br><span class="line"><span class="symbol"></span></span><br><span class="line"><span class="symbol"> repository:</span> </span><br><span class="line"><span class="symbol"></span></span><br><span class="line"><span class="symbol"> branch:</span> main</span><br></pre></td></tr></table></figure>

<p>然后打开我们的github之前创建的仓库，点击绿色的<strong>Code</strong>，复制里面的链接到<strong>repository:</strong> 后面（<strong>注意冒号后有空格</strong>）</p>
<p><img data-src="https://cdn.jsdelivr.net/gh/JcMarical/mapstorage/images/image-20220913221048259.png" alt="image-20220913221048259"></p>
<p>写成如下格式</p>
<p><img data-src="/%E4%BB%8E%E9%9B%B6%E5%BC%80%E5%A7%8B%E6%90%AD%E5%8D%9A%E5%AE%A2%EF%BC%88Hexo+GitHub+Next%EF%BC%89.assets/image-20220913223350705.png" alt="image-20220913223350705">t</p>
<p>然后安装 自动部署发布工具：</p>
<figure class="highlight ada"><table><tr><td class="code"><pre><span class="line">npm install hexo-deployer-git <span class="comment">--save</span></span><br></pre></td></tr></table></figure>

<p>然后输入生成页面语句</p>
<figure class="highlight ebnf"><table><tr><td class="code"><pre><span class="line"><span class="attribute">hexo g</span></span><br></pre></td></tr></table></figure>

<p><img data-src="https://cdn.jsdelivr.net/gh/JcMarical/mapstorage/images/image-20220913225537576.png" alt="image-20220913225537576"></p>
<p>然后是上传我们的文件到github上</p>
<figure class="highlight ebnf"><table><tr><td class="code"><pre><span class="line"><span class="attribute">hexo d</span></span><br></pre></td></tr></table></figure>

<p>输入后会出现一个登录界面（没成功多次几次，实在不行用点魔法）</p>
<p><img data-src="/%E4%BB%8E%E9%9B%B6%E5%BC%80%E5%A7%8B%E6%90%AD%E5%8D%9A%E5%AE%A2%EF%BC%88Hexo+GitHub+Next%EF%BC%89.assets/image-20220913230424933.png" alt="image-20220913230424933"></p>
<p>登录后</p>
<p>我们的Github个人博客就正式发布在互联网上了！！！</p>
<p>输入<strong>用户名.github.io</strong>即可看到自己的博客了</p>
<hr>
<h2 id="博客个性化设置"><a href="#博客个性化设置" class="headerlink" title="博客个性化设置"></a>博客个性化设置</h2><h3 id="主题设置"><a href="#主题设置" class="headerlink" title="主题设置"></a>主题设置</h3><p>在Github开源了许多关于Hexo的博客主题，我这里选择使用Next作为我的主题</p>
<h4 id="Hexo目录构成"><a href="#Hexo目录构成" class="headerlink" title="Hexo目录构成"></a>Hexo目录构成</h4><blockquote>
<p>node_modules：里面存放Node.js各种库的目录</p>
<p>public：生成网页的文件目录</p>
<p>scaffolds：存放新文章和新页面的初始设置</p>
<p>source：存放文章，各类页面，图像等文件</p>
<p>themes：存放着主题文件</p>
<p>_config.yml：站点配置文件</p>
</blockquote>
<h4 id="配置主题"><a href="#配置主题" class="headerlink" title="配置主题"></a>配置主题</h4><p>在终端窗口下，定位到 Hexo 站点目录下。使用 <code>Git</code> checkout 代码：</p>
<figure class="highlight awk"><table><tr><td class="code"><pre><span class="line">$ cd your-hexo-site</span><br><span class="line">$ git clone https:<span class="regexp">//gi</span>thub.com<span class="regexp">/iissnan/</span>hexo-theme-<span class="keyword">next</span> themes/<span class="keyword">next</span></span><br></pre></td></tr></table></figure>

<p><img data-src="https://cdn.jsdelivr.net/gh/JcMarical/mapstorage/images/image-20220914094439150.png" alt="image-20220914094439150"></p>
<p>删除 <strong>themes&#x2F;next</strong> 文件夹里的**.git和.gitigore**文件，因为博客文件夹不能有两个git管理。</p>
<p><img data-src="https://cdn.jsdelivr.net/gh/JcMarical/mapstorage/images/image-20220914095832878.png" alt="image-20220914095832878"></p>
<p>然后修改<strong>站点配置文件</strong>：</p>
<p>把主题修改为 <strong>next</strong></p>
<p><img data-src="/%E4%BB%8E%E9%9B%B6%E5%BC%80%E5%A7%8B%E6%90%AD%E5%8D%9A%E5%AE%A2%EF%BC%88Hexo+GitHub+Next%EF%BC%89.assets/image-20220914100142908.png" alt="image-20220914100142908"></p>
<p>在终端执行后，可以看到本地网站主题已经被更换</p>
<figure class="highlight crystal"><table><tr><td class="code"><pre><span class="line"><span class="variable">$ </span>hexo s</span><br></pre></td></tr></table></figure>

<h4 id="Next目录构成"><a href="#Next目录构成" class="headerlink" title="Next目录构成"></a>Next目录构成</h4><blockquote>
<p>languages：语言 [通常保存本网站支持的语言设置和支持]</p>
<p>layout：布局文件[通常此文件中添加或者删除一些小功能]</p>
<p>pages：页面文件</p>
<p>scripts：脚本文件 [存放一些JavaScript脚本文件]</p>
<p>sources：资源文件 [存放一些图片,特效之类的文件]</p>
<p><em>config.yml：主题配置文件</em></p>
<p>static_prefix.yml：静态网页参数</p>
</blockquote>
<h3 id="主题配置美化"><a href="#主题配置美化" class="headerlink" title="主题配置美化"></a>主题配置美化</h3><h4 id="1、设置博主文字描述和中文语言"><a href="#1、设置博主文字描述和中文语言" class="headerlink" title="1、设置博主文字描述和中文语言"></a>1、设置博主文字描述和中文语言</h4><p><strong>站点配置文件</strong>修改Site：</p>
<figure class="highlight vbnet"><table><tr><td class="code"><pre><span class="line"># Site</span><br><span class="line"><span class="symbol">title:</span> Maric的博客</span><br><span class="line"><span class="symbol">subtitle:</span> <span class="comment">&#x27;No Code No Life&#x27;</span></span><br><span class="line"><span class="symbol">description:</span> <span class="comment">&#x27;coding就是生产力&#x27;</span></span><br><span class="line"><span class="symbol">keywords:</span></span><br><span class="line"><span class="symbol">author:</span> Maric</span><br><span class="line"><span class="symbol">language:</span> zh-CN</span><br><span class="line"><span class="symbol">timezone:</span> <span class="comment">&#x27;&#x27;</span></span><br></pre></td></tr></table></figure>

<h4 id="2、设置Next主题样式"><a href="#2、设置Next主题样式" class="headerlink" title="2、设置Next主题样式"></a>2、设置Next主题样式</h4><p><strong>主题配置文件</strong>中，Next提供了四种主题样式，根据个人的喜好选择即可（可以都试试哦）。</p>
<p>个人偏好Genemi一些</p>
<figure class="highlight avrasm"><table><tr><td class="code"><pre><span class="line"><span class="meta">#Schemes</span></span><br><span class="line"><span class="meta">#scheme: Muse</span></span><br><span class="line"><span class="meta">#scheme: Mist</span></span><br><span class="line"><span class="meta">#scheme: Pisces</span></span><br><span class="line"><span class="symbol">scheme:</span> Gemini</span><br></pre></td></tr></table></figure>

<p><img data-src="https://cdn.jsdelivr.net/gh/JcMarical/mapstorage/images/image-20220914110128892.png" alt="image-20220914110128892"></p>
<h4 id="3、设置博客文章持久化链接"><a href="#3、设置博客文章持久化链接" class="headerlink" title="3、设置博客文章持久化链接"></a>3、设置博客文章持久化链接</h4><p>发布博客后，它的默认url地址是带中文的，并且进行了多层分级，非常复杂，因此需要在<strong>终端</strong>安装这个插件简化url。</p>
<figure class="highlight ada"><table><tr><td class="code"><pre><span class="line">$ npm install hexo-abbrlink <span class="comment">--save</span></span><br></pre></td></tr></table></figure>

<p><img data-src="https://cdn.jsdelivr.net/gh/JcMarical/mapstorage/images/image-20220914102846307.png" alt="image-20220914102846307"></p>
<p><strong>站点配置文件</strong>修改permalink添加如下内容：</p>
<figure class="highlight dts"><table><tr><td class="code"><pre><span class="line"><span class="symbol">url:</span> https:<span class="comment">//（用户名）.github.io/</span></span><br><span class="line"><span class="symbol">permalink:</span> posts/:abbrlink.html</span><br><span class="line"><span class="symbol">abbrlink:</span></span><br><span class="line"><span class="symbol">    alg:</span> crc16</span><br><span class="line"><span class="symbol">    rep:</span> hex</span><br></pre></td></tr></table></figure>

<p><img data-src="https://cdn.jsdelivr.net/gh/JcMarical/mapstorage/images/image-20220914103102672.png" alt="image-20220914103102672"></p>
<h4 id="4、Menu添加关于、标签、分类页面"><a href="#4、Menu添加关于、标签、分类页面" class="headerlink" title="4、Menu添加关于、标签、分类页面"></a>4、Menu添加关于、标签、分类页面</h4><p><strong>主题配置文件</strong>修改menu，将about、tags、categories前的#号去掉，示例如下：</p>
<figure class="highlight dts"><table><tr><td class="code"><pre><span class="line"><span class="symbol">menu:</span></span><br><span class="line"><span class="symbol">  home:</span> / || fa fa-home</span><br><span class="line"><span class="symbol">  about:</span> <span class="keyword">/about/</span> || fa fa-user</span><br><span class="line"><span class="symbol">  tags:</span> <span class="keyword">/tags/</span> || fa fa-tags</span><br><span class="line"><span class="symbol">  categories:</span> <span class="keyword">/categories/</span> || fa fa-th</span><br></pre></td></tr></table></figure>

<p><img data-src="file:///C:\Users\Marical\AppData\Roaming\Tencent\Users\1109361945\QQ\WinTemp\RichOle\EQ0UI}_V2RL0EG~@KEWSTKJ.png" alt="img"></p>
<p>新建相关页面</p>
<figure class="highlight haxe"><table><tr><td class="code"><pre><span class="line">$ hexo <span class="keyword">new</span> <span class="type">page</span> <span class="string">&quot;about&quot;</span></span><br><span class="line">$ hexo <span class="keyword">new</span> <span class="type">page</span> <span class="string">&quot;tags&quot;</span></span><br><span class="line">$ hexo <span class="keyword">new</span> <span class="type">page</span> <span class="string">&quot;categories&quot;</span></span><br></pre></td></tr></table></figure>

<p>修改生成页面的配置<br>source&#x2F;about&#x2F;index.md<br>source&#x2F;tags&#x2F;index.md<br>source&#x2F;categories&#x2F;index.md</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">title:</span> <span class="string">关于</span></span><br><span class="line"><span class="attr">type:</span> <span class="string">&quot;about&quot;</span></span><br><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">title:</span> <span class="string">标签</span></span><br><span class="line"><span class="attr">type:</span> <span class="string">&quot;tags&quot;</span></span><br><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">title:</span> <span class="string">分类</span></span><br><span class="line"><span class="attr">type:</span> <span class="string">&quot;categories&quot;</span></span><br><span class="line"><span class="meta">---</span></span><br></pre></td></tr></table></figure>

<h4 id="5、添加搜索功能"><a href="#5、添加搜索功能" class="headerlink" title="5、添加搜索功能"></a>5、添加搜索功能</h4><p>安装exo-generator-searchdb这个插件</p>
<figure class="highlight ada"><table><tr><td class="code"><pre><span class="line">npm install hexo-generator-searchdb <span class="comment">--save</span></span><br></pre></td></tr></table></figure>

<p><strong>站点配置文件</strong>添加</p>
<figure class="highlight avrasm"><table><tr><td class="code"><pre><span class="line"><span class="meta"># Search</span></span><br><span class="line"><span class="symbol">search:</span></span><br><span class="line"><span class="symbol">path:</span> search.xml</span><br><span class="line"><span class="symbol">field:</span> post</span><br><span class="line"><span class="symbol">format:</span> html</span><br><span class="line"><span class="symbol">limit:</span> <span class="number">10000</span></span><br></pre></td></tr></table></figure>

<h4 id="6、对于网站样式的自定义"><a href="#6、对于网站样式的自定义" class="headerlink" title="6、对于网站样式的自定义"></a>6、对于网站样式的自定义</h4><p>在博客根目录下的source文件夹下新建_data文件夹并添加styles.styl文件，就可以对in网站样式进行自定义<br>以我的个人博客为例，我做了如下自定义样式：修改链接样式、去掉顶部黑线、修改选中字符的颜色、修改代码块选中的颜色、修改引用样式。</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line">// 修改链接样式</span><br><span class="line"><span class="selector-class">.post-body</span> <span class="selector-tag">p</span> <span class="selector-tag">a</span>&#123;</span><br><span class="line">  <span class="attribute">color</span>: <span class="number">#0593d3</span>;</span><br><span class="line">  <span class="attribute">border-bottom</span>: none;</span><br><span class="line">  &amp;<span class="selector-pseudo">:hover</span> &#123;</span><br><span class="line">    <span class="attribute">color</span>: <span class="number">#ff106c</span>;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-tag">a</span>, <span class="selector-tag">span</span><span class="selector-class">.exturl</span> &#123;</span><br><span class="line">  <span class="attribute">border-bottom</span>: none;</span><br><span class="line">  &amp;<span class="selector-pseudo">:hover</span> &#123;</span><br><span class="line">    <span class="attribute">color</span>: <span class="number">#ff106c</span>;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">  //去掉顶部黑线：</span><br><span class="line"><span class="selector-class">.headband</span> &#123;<span class="attribute">display</span>:none;&#125;</span><br><span class="line"></span><br><span class="line">// 修改选中字符的颜色</span><br><span class="line"><span class="comment">/* webkit, opera, IE9 */</span></span><br><span class="line"><span class="selector-pseudo">::selection</span> &#123; </span><br><span class="line">    <span class="attribute">background</span>: <span class="number">#00c4b6</span>;</span><br><span class="line">    <span class="attribute">color</span>: <span class="number">#f7f7f7</span>; </span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/* firefox */</span></span><br><span class="line">::-moz-selection &#123; </span><br><span class="line">    <span class="attribute">background</span>: <span class="number">#00c4b6</span>;</span><br><span class="line">    <span class="attribute">color</span>: <span class="number">#f7f7f7</span>;    </span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">// 代码块选中颜色</span><br><span class="line"><span class="selector-class">.highlight</span> *<span class="selector-pseudo">::selection</span> &#123;</span><br><span class="line">    <span class="attribute">background</span>: <span class="number">#00c4b6</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">//修改引用样式</span><br><span class="line"><span class="selector-tag">blockquote</span> &#123;</span><br><span class="line">    <span class="attribute">border-left</span>: <span class="number">4px</span> solid <span class="number">#f27c8d</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p><img data-src="https://cdn.jsdelivr.net/gh/JcMarical/mapstorage/images/image-20220914111856012.png" alt="image-20220914111856012"></p>
<h4 id="7、设置侧栏阅读进度百分比"><a href="#7、设置侧栏阅读进度百分比" class="headerlink" title="7、设置侧栏阅读进度百分比"></a>7、设置侧栏阅读进度百分比</h4><p>编辑<strong>站点配置文件</strong>，修改 back2top 部分如下</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">back2top:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">sidebar:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">scrollpercent:</span> <span class="literal">true</span></span><br></pre></td></tr></table></figure>

<p><img data-src="https://cdn.jsdelivr.net/gh/JcMarical/mapstorage/images/image-20220914112003744.png" alt="image-20220914112003744"></p>
<h4 id="8、设置字数统计和预计阅读时间"><a href="#8、设置字数统计和预计阅读时间" class="headerlink" title="8、设置字数统计和预计阅读时间"></a>8、设置字数统计和预计阅读时间</h4><p>在博客根目录下安装插件：</p>
<figure class="highlight applescript"><table><tr><td class="code"><pre><span class="line">npm install hexo-symbols-<span class="built_in">count</span>-<span class="built_in">time</span> <span class="comment">--save</span></span><br></pre></td></tr></table></figure>

<p>编辑站点配置文件，添加如下内容：</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="comment">#文章、站点字数统计</span></span><br><span class="line"><span class="attr">symbols_count_time:</span></span><br><span class="line">  <span class="attr">symbols:</span> <span class="literal">true</span>                <span class="comment"># 文章字数统计</span></span><br><span class="line">  <span class="attr">time:</span> <span class="literal">true</span>                   <span class="comment"># 文章阅读时长</span></span><br><span class="line">  <span class="attr">total_symbols:</span> <span class="literal">true</span>          <span class="comment"># 站点总字数统计</span></span><br><span class="line">  <span class="attr">total_time:</span> <span class="literal">true</span>             <span class="comment"># 站点总阅读时长</span></span><br><span class="line">  <span class="attr">exclude_codeblock:</span> <span class="literal">false</span>     <span class="comment"># 排除代码字数统计</span></span><br></pre></td></tr></table></figure>

<p>修改主题配置文件：</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">symbols_count_time:</span></span><br><span class="line">  <span class="attr">separated_meta:</span> <span class="literal">true</span>     <span class="comment"># 是否另起一行（true的话不和发表时间等同一行）</span></span><br><span class="line">  <span class="attr">item_text_post:</span> <span class="literal">true</span>     <span class="comment"># 首页文章统计数量前是否显示文字描述（本文字数、阅读时长）</span></span><br><span class="line">  <span class="attr">item_text_total:</span> <span class="literal">true</span>   <span class="comment"># 页面底部统计数量前是否显示文字描述（站点总字数、站点阅读时长）</span></span><br><span class="line">  <span class="attr">awl:</span> <span class="number">4</span>                   <span class="comment"># Average Word Length</span></span><br><span class="line">  <span class="attr">wpm:</span> <span class="number">275</span>                 <span class="comment"># Words Per Minute（每分钟阅读词数）</span></span><br><span class="line">  <span class="attr">suffix:</span> <span class="string">mins.</span></span><br></pre></td></tr></table></figure>

<h4 id="9、网站底部添加网站运行时间"><a href="#9、网站底部添加网站运行时间" class="headerlink" title="9、网站底部添加网站运行时间"></a>9、网站底部添加网站运行时间</h4><p>修改主题下<strong>layout&#x2F;_partials&#x2F;footer.swig</strong>，在**{ {- next_inject(‘footer’) } }**上方添加如下内容：</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 网站运行时间的设置 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">span</span> <span class="attr">id</span>=<span class="string">&quot;timeDate&quot;</span>&gt;</span>载入天数...<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">span</span> <span class="attr">id</span>=<span class="string">&quot;times&quot;</span>&gt;</span>载入时分秒...<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">var</span> now = <span class="keyword">new</span> <span class="title class_">Date</span>();</span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">function</span> <span class="title function_">createtime</span>(<span class="params"></span>) &#123;</span></span><br><span class="line"><span class="language-javascript">        <span class="keyword">var</span> grt= <span class="keyword">new</span> <span class="title class_">Date</span>(<span class="string">&quot;08/10/2021 12:00:00&quot;</span>);<span class="comment">//此处修改你的建站时间或者网站上线时间</span></span></span><br><span class="line"><span class="language-javascript">        now.<span class="title function_">setTime</span>(now.<span class="title function_">getTime</span>()+<span class="number">250</span>);</span></span><br><span class="line"><span class="language-javascript">        days = (now - grt ) / <span class="number">1000</span> / <span class="number">60</span> / <span class="number">60</span> / <span class="number">24</span>; dnum = <span class="title class_">Math</span>.<span class="title function_">floor</span>(days);</span></span><br><span class="line"><span class="language-javascript">        hours = (now - grt ) / <span class="number">1000</span> / <span class="number">60</span> / <span class="number">60</span> - (<span class="number">24</span> * dnum); hnum = <span class="title class_">Math</span>.<span class="title function_">floor</span>(hours);</span></span><br><span class="line"><span class="language-javascript">        <span class="keyword">if</span>(<span class="title class_">String</span>(hnum).<span class="property">length</span> ==<span class="number">1</span> )&#123;hnum = <span class="string">&quot;0&quot;</span> + hnum;&#125; minutes = (now - grt ) / <span class="number">1000</span> /<span class="number">60</span> - (<span class="number">24</span> * <span class="number">60</span> * dnum) - (<span class="number">60</span> * hnum);</span></span><br><span class="line"><span class="language-javascript">        mnum = <span class="title class_">Math</span>.<span class="title function_">floor</span>(minutes); <span class="keyword">if</span>(<span class="title class_">String</span>(mnum).<span class="property">length</span> ==<span class="number">1</span> )&#123;mnum = <span class="string">&quot;0&quot;</span> + mnum;&#125;</span></span><br><span class="line"><span class="language-javascript">        seconds = (now - grt ) / <span class="number">1000</span> - (<span class="number">24</span> * <span class="number">60</span> * <span class="number">60</span> * dnum) - (<span class="number">60</span> * <span class="number">60</span> * hnum) - (<span class="number">60</span> * mnum);</span></span><br><span class="line"><span class="language-javascript">        snum = <span class="title class_">Math</span>.<span class="title function_">round</span>(seconds); <span class="keyword">if</span>(<span class="title class_">String</span>(snum).<span class="property">length</span> ==<span class="number">1</span> )&#123;snum = <span class="string">&quot;0&quot;</span> + snum;&#125;</span></span><br><span class="line"><span class="language-javascript">        <span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&quot;timeDate&quot;</span>).<span class="property">innerHTML</span> = <span class="string">&quot;本站已安全运行 &quot;</span>+dnum+<span class="string">&quot; 天 &quot;</span>;</span></span><br><span class="line"><span class="language-javascript">        <span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&quot;times&quot;</span>).<span class="property">innerHTML</span> = hnum + <span class="string">&quot; 小时 &quot;</span> + mnum + <span class="string">&quot; 分 &quot;</span> + snum + <span class="string">&quot; 秒&quot;</span>;</span></span><br><span class="line"><span class="language-javascript">    &#125;</span></span><br><span class="line"><span class="language-javascript">    <span class="built_in">setInterval</span>(<span class="string">&quot;createtime()&quot;</span>,<span class="number">250</span>);</span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p><img data-src="file:///C:\Users\Marical\AppData\Roaming\Tencent\Users\1109361945\QQ\WinTemp\RichOle\OZD{M990H7%%`$IRE51I7{Q.png" alt="img"></p>
<h4 id="10、添加自定义404页面"><a href="#10、添加自定义404页面" class="headerlink" title="10、添加自定义404页面"></a>10、添加自定义404页面</h4><figure class="highlight haxe"><table><tr><td class="code"><pre><span class="line">hexo <span class="keyword">new</span> <span class="type">page</span> <span class="number">404</span></span><br></pre></td></tr></table></figure>

<p>编辑新建的页面文件，默认在站点根目录下 &#x2F;source&#x2F;404&#x2F;index.md(<strong>注意把网址名称改成你自己的</strong>)</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">title:</span> <span class="number">404</span></span><br><span class="line"><span class="attr">comments:</span> <span class="literal">false</span></span><br><span class="line"><span class="attr">permalink:</span> <span class="string">/404</span></span><br><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="string">&lt;center&gt;对不起，您所访问的页面不存在或者已删除&lt;/center&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="string">*</span> [<span class="string">click</span> <span class="string">here</span>]<span class="string">(https://JcMarical.github.io/)</span> <span class="string">返回首页</span></span><br><span class="line"><span class="string">*</span> <span class="string">我的Github：[https://github.com/JcMarical](https://github.com/JcMarical)</span></span><br></pre></td></tr></table></figure>

<p><img data-src="file:///C:\Users\Marical\AppData\Roaming\Tencent\Users\1109361945\QQ\WinTemp\RichOle\RAJ516PR0WL`42Z1$]DEX9F.png" alt="img"></p>
<h4 id="11、添加图片放大预览功能"><a href="#11、添加图片放大预览功能" class="headerlink" title="11、添加图片放大预览功能"></a>11、添加图片放大预览功能</h4><p>在主题配置文件，启用 fancybox，修改配置如下：</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">fancybox:</span> <span class="literal">true</span></span><br></pre></td></tr></table></figure>

<h4 id="12、隐藏网页底部-powered-By-Hexo-x2F-强力驱动"><a href="#12、隐藏网页底部-powered-By-Hexo-x2F-强力驱动" class="headerlink" title="12、隐藏网页底部 powered By Hexo &#x2F; 强力驱动"></a>12、隐藏网页底部 powered By Hexo &#x2F; 强力驱动</h4><p>修改主题配置文件：</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">powered:</span> <span class="literal">false</span></span><br></pre></td></tr></table></figure>

<h4 id="13、网页底部添加动态桃心"><a href="#13、网页底部添加动态桃心" class="headerlink" title="13、网页底部添加动态桃心"></a>13、网页底部添加动态桃心</h4><p>在<strong>主题配置文件</strong>中启用</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">icon:</span></span><br><span class="line">    <span class="attr">animated:</span> <span class="literal">true</span></span><br></pre></td></tr></table></figure>

<h4 id="14、图片懒加载设置"><a href="#14、图片懒加载设置" class="headerlink" title="14、图片懒加载设置"></a>14、图片懒加载设置</h4><p>在<strong>主题配置文件</strong>中启用lazyload</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">lazyload:</span> <span class="literal">true</span></span><br></pre></td></tr></table></figure>

<h4 id="15、设置标题栏背景图片"><a href="#15、设置标题栏背景图片" class="headerlink" title="15、设置标题栏背景图片"></a>15、设置标题栏背景图片</h4><p>博客根目录下的<strong>source&#x2F;_data&#x2F;styles.styl</strong>文件，添加如下代码：</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line">// 标题栏背景图片</span><br><span class="line"><span class="selector-class">.site-brand-container</span> &#123; </span><br><span class="line">  <span class="attribute">background-image</span>: <span class="built_in">url</span>(<span class="string">/images/bg.png</span>);</span><br><span class="line">  <span class="attribute">background-size</span>: <span class="number">100%</span> <span class="number">100%</span>;</span><br><span class="line">  <span class="attribute">opacity</span>: <span class="number">0.9</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p><strong>&#x2F;images&#x2F;bg.png</strong>指的是根目录下**public&#x2F;images&#x2F;**下的图片</p>
<h4 id="16、修改文章底部tag标签"><a href="#16、修改文章底部tag标签" class="headerlink" title="16、修改文章底部tag标签"></a>16、修改文章底部tag标签</h4><p>把文章底部#标签改为图标，在<strong>主题配置文件</strong>中修改：</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">tag_icon:</span> <span class="literal">true</span></span><br></pre></td></tr></table></figure>

<h4 id="17、设置头像"><a href="#17、设置头像" class="headerlink" title="17、设置头像"></a>17、设置头像</h4><p>在主题配置文件中修改avatar</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Sidebar Avatar</span></span><br><span class="line"><span class="attr">avatar:</span></span><br><span class="line">  <span class="comment"># Replace the default image and set the url here.</span></span><br><span class="line">  <span class="attr">url:</span> <span class="string">/images/avatar.png</span></span><br><span class="line">  <span class="comment"># If true, the avatar will be dispalyed in circle.</span></span><br><span class="line">  <span class="attr">rounded:</span> <span class="literal">true</span></span><br><span class="line">  <span class="comment"># If true, the avatar will be rotated with the cursor.</span></span><br><span class="line">  <span class="attr">rotated:</span> <span class="literal">false</span></span><br></pre></td></tr></table></figure>

<p><strong>&#x2F;images&#x2F;avatar.png</strong>指的是根目录下**public&#x2F;images&#x2F;**下的图片</p>
<p><img data-src="/%E4%BB%8E%E9%9B%B6%E5%BC%80%E5%A7%8B%E6%90%AD%E5%8D%9A%E5%AE%A2%EF%BC%88Hexo+GitHub+Next%EF%BC%89.assets/image-20220914114745768.png" alt="image-20220914114745768"></p>
<h4 id="18、网站底部加上访问量"><a href="#18、网站底部加上访问量" class="headerlink" title="18、网站底部加上访问量"></a>18、网站底部加上访问量</h4><p>修改主题下<strong>layout&#x2F;_partials&#x2F;footer.swig</strong>，在**{ {- next_inject(‘footer’) } }**上方添加如下内容：</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">async</span> <span class="attr">src</span>=<span class="string">&quot;//busuanzi.ibruce.info/busuanzi/2.3/busuanzi.pure.mini.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">span</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span>	</span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">&quot;post-meta-item-icon&quot;</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">i</span> <span class="attr">class</span>=<span class="string">&quot;fa fa-user&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">i</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">span</span>&gt;</span>总访客&amp;nbsp<span class="tag">&lt;<span class="name">span</span> <span class="attr">id</span>=<span class="string">&quot;busuanzi_value_site_uv&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span>&amp;nbsp人<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">&quot;post-meta-divider&quot;</span>&gt;</span>|<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">&quot;post-meta-item-icon&quot;</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">i</span> <span class="attr">class</span>=<span class="string">&quot;fa fa-eye&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">i</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">span</span>&gt;</span>总访问量&amp;nbsp<span class="tag">&lt;<span class="name">span</span> <span class="attr">id</span>=<span class="string">&quot;busuanzi_value_site_pv&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span>&amp;nbsp次<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h4 id="19、顶部阅读进度条"><a href="#19、顶部阅读进度条" class="headerlink" title="19、顶部阅读进度条"></a>19、顶部阅读进度条</h4><p><strong>主题配置文件</strong>中修改 reading_progress 选项</p>
<figure class="highlight dts"><table><tr><td class="code"><pre><span class="line"><span class="symbol">reading_progress:</span></span><br><span class="line"><span class="symbol">  enable:</span> true</span><br><span class="line">  <span class="meta"># 显示在顶部</span></span><br><span class="line"><span class="symbol">  position:</span> top</span><br><span class="line"><span class="symbol">  color:</span> <span class="string">&quot;#06d633&quot;</span></span><br><span class="line"><span class="symbol">  height:</span> <span class="number">3</span>px</span><br></pre></td></tr></table></figure>

<h4 id="20、设置网站图标"><a href="#20、设置网站图标" class="headerlink" title="20、设置网站图标"></a>20、设置网站图标</h4><p>在<strong>主题配置文件</strong>中修改favicon</p>
<figure class="highlight dts"><table><tr><td class="code"><pre><span class="line"><span class="meta"># 填写自己的图片</span></span><br><span class="line"><span class="symbol">favicon:</span></span><br><span class="line"><span class="symbol">  small:</span> <span class="keyword">/images/</span>favicon.png</span><br><span class="line"><span class="symbol">  medium:</span> <span class="keyword">/images/</span>favicon.png</span><br><span class="line"><span class="symbol">  apple_touch_icon:</span> <span class="keyword">/images/</span>favicon.png</span><br><span class="line"><span class="symbol">  safari_pinned_tab:</span> <span class="keyword">/images/</span>favicon.png</span><br></pre></td></tr></table></figure>

<p><strong>&#x2F;images&#x2F;favicon.png</strong>指的是根目录下**public&#x2F;images&#x2F;**下的图片(我暂时还未设置)</p>
<h4 id="21、侧边栏社交链接"><a href="#21、侧边栏社交链接" class="headerlink" title="21、侧边栏社交链接"></a>21、侧边栏社交链接</h4><p>（添加你本人的网站）修改<strong>主题配置文件</strong>中socail选项：</p>
<figure class="highlight dts"><table><tr><td class="code"><pre><span class="line"><span class="symbol">social:</span></span><br><span class="line"><span class="symbol">  GitHub:</span> https:<span class="comment">//github.com/JcMarical || fab fa-github</span></span><br><span class="line">  E-Mail: mailto:<span class="number">1109361945</span>@qq.com || fa fa-envelope</span><br></pre></td></tr></table></figure>

<h4 id="22、阅读全文按钮样式"><a href="#22、阅读全文按钮样式" class="headerlink" title="22、阅读全文按钮样式"></a>22、阅读全文按钮样式</h4><p>在博客需要显示摘要的地方加上 more标签，就不会显示全文。</p>
<h4 id="23、更改新建文章的模板"><a href="#23、更改新建文章的模板" class="headerlink" title="23、更改新建文章的模板"></a>23、更改新建文章的模板</h4><p>默认新建文章没有分类这个选项，需要自己填写，现在修改 <strong>博客文件夹&#x2F;scaffolds&#x2F;post.md</strong> 文件 。</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">title:</span> &#123;&#123; <span class="string">title</span> &#125;&#125;</span><br><span class="line"><span class="attr">date:</span> &#123;&#123; <span class="string">date</span> &#125;&#125;</span><br><span class="line"><span class="attr">categories:</span></span><br><span class="line"><span class="attr">tags:</span></span><br><span class="line"><span class="meta">---</span></span><br></pre></td></tr></table></figure>

<h4 id="24、设定代码高亮格式"><a href="#24、设定代码高亮格式" class="headerlink" title="24、设定代码高亮格式"></a>24、设定代码高亮格式</h4><p>在<strong>站点的配置文件</strong>中，搜索highlight</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">highlight:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">line_number:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">auto_detect:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">tab_replace:</span></span><br></pre></td></tr></table></figure>

<p>主题配置有关于代码高亮样式的选择，搜索highlight，一般选择normal即可</p>
<h4 id="25、代码块复制选项"><a href="#25、代码块复制选项" class="headerlink" title="25、代码块复制选项"></a>25、代码块复制选项</h4><p><strong>主题配置文件</strong>搜索copy_button：</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">copy_button:</span></span><br><span class="line">    <span class="attr">enable:</span> <span class="literal">true</span></span><br></pre></td></tr></table></figure>

<h4 id="26、添加萌萌哒Live2D模型"><a href="#26、添加萌萌哒Live2D模型" class="headerlink" title="26、添加萌萌哒Live2D模型"></a>26、添加萌萌哒Live2D模型</h4><p>安装插件</p>
<figure class="highlight ada"><table><tr><td class="code"><pre><span class="line">npm install <span class="comment">--save hexo-helper-live2d</span></span><br></pre></td></tr></table></figure>

<p>在站点配置文件中添加：</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># live2d</span></span><br><span class="line"><span class="attr">live2d:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">scriptFrom:</span> <span class="string">local</span></span><br><span class="line">  <span class="attr">pluginRootPath:</span> <span class="string">live2dw/</span></span><br><span class="line">  <span class="attr">pluginJsPath:</span> <span class="string">lib/</span></span><br><span class="line">  <span class="attr">pluginModelPath:</span> <span class="string">assets/</span></span><br><span class="line">  <span class="attr">tagMode:</span> <span class="literal">false</span></span><br><span class="line">  <span class="attr">debug:</span> <span class="literal">false</span></span><br><span class="line">  <span class="attr">model:</span></span><br><span class="line">    <span class="attr">use:</span> <span class="string">live2d-widget-model-hijiki</span></span><br><span class="line">  <span class="attr">display:</span></span><br><span class="line">    <span class="attr">position:</span> <span class="string">right</span></span><br><span class="line">    <span class="attr">width:</span> <span class="number">150</span></span><br><span class="line">    <span class="attr">height:</span> <span class="number">300</span></span><br><span class="line">  <span class="attr">mobile:</span></span><br><span class="line">    <span class="attr">show:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">react:</span></span><br><span class="line">    <span class="attr">opacity:</span> <span class="number">0.7</span></span><br></pre></td></tr></table></figure>

<p>我使用的是一个二次元女生的模型，使用以下命令下载组件，如需使用别的看板娘，请自行百度搜索</p>
<figure class="highlight cmake"><table><tr><td class="code"><pre><span class="line">npm <span class="keyword">install</span> live2d-widget-model-shizuku</span><br></pre></td></tr></table></figure>

<ul>
<li>在<strong>Hexo根目录</strong>中新建文件夹live2d_models</li>
<li>在 node_modules 文件夹中找到刚刚下载的 live2d 模型，将其复制到 live2d_models 中。live2d 模型是一个类似于这样的文件夹：live2d-widget-model-hijiki</li>
<li>更新<strong>站点配置文件</strong>中model:use项，将其修改为 live2d_models 文件夹中的模型文件夹的名称</li>
</ul>
<h4 id="27、（增强网页安全性）开启Valine评论系统"><a href="#27、（增强网页安全性）开启Valine评论系统" class="headerlink" title="27、（增强网页安全性）开启Valine评论系统"></a>27、（增强网页安全性）开启Valine评论系统</h4><p>注册 Leancloud 账号，注册完成后进入app控制面板-&gt;创建应用-&gt;创建开发版应用。</p>
<p><a href="https://cdn.nlark.com/yuque/0/2021/png/12855610/1628932563266-a353398b-e96b-4b96-b3a6-8f31ec7d6823.png"><img data-src="https://cdn.jsdelivr.net/gh/JcMarical/mapstorage/images/1628932563266-a353398b-e96b-4b96-b3a6-8f31ec7d6823.png" alt="img"></a></p>
<p>接下来我们配置一下我们的leancloud。点击设置-&gt;安全中心-&gt;Web 安全域名，输入你的博客网址来保证其他人就算获取了你的appid也没办法操作你的数据库。</p>
<p><img data-src="file:///C:\Users\Marical\AppData\Roaming\Tencent\Users\1109361945\QQ\WinTemp\RichOle\U7GQ`G1$@JI~%ZDIB$]`}6I.png" alt="img"></p>
<p>接下来点击应用凭证获取你的appid和appkey。</p>
<p><a href="https://cdn.nlark.com/yuque/0/2021/png/12855610/1628932681681-3f87d5db-34fc-4b73-ae9d-7690800a4811.png"><img data-src="/%E4%BB%8E%E9%9B%B6%E5%BC%80%E5%A7%8B%E6%90%AD%E5%8D%9A%E5%AE%A2%EF%BC%88Hexo+GitHub+Next%EF%BC%89.assets/1628932681681-3f87d5db-34fc-4b73-ae9d-7690800a4811.png" alt="img"></a></p>
<hr>
<p>打开主题配置文件，找到comments栏目并开启valine。</p>
<figure class="highlight dts"><table><tr><td class="code"><pre><span class="line"><span class="symbol">comments:</span></span><br><span class="line"><span class="symbol">  active:</span> valine</span><br></pre></td></tr></table></figure>

<p>往下滑动进入valine设置栏，开启valine并填入你的appid和appkey。</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">valine:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">appid:</span> <span class="comment"># Your leancloud application appid</span></span><br><span class="line">  <span class="attr">appkey:</span> <span class="comment"># Your leancloud application appkey</span></span><br><span class="line">  <span class="attr">notify:</span> <span class="literal">false</span> <span class="comment"># Mail notifier</span></span><br><span class="line">  <span class="attr">verify:</span> <span class="literal">false</span> <span class="comment"># Verification code</span></span><br><span class="line">  <span class="attr">placeholder:</span> <span class="string">作者看到就会及时反馈，欢迎评论哦(๑•̀ㅂ•́)و✧</span> <span class="comment"># Comment box placeholder</span></span><br><span class="line">  <span class="attr">avatar:</span> <span class="string">retro</span> <span class="comment"># Gravatar style</span></span><br><span class="line">  <span class="attr">guest_info:</span> <span class="string">nick,mail</span> <span class="comment"># Custom comment header</span></span><br><span class="line">  <span class="attr">pageSize:</span> <span class="number">10</span> <span class="comment"># Pagination size</span></span><br><span class="line">  <span class="attr">language:</span> <span class="comment"># Language, available values: en, zh-cn</span></span><br><span class="line">  <span class="attr">visitor:</span> <span class="literal">true</span> <span class="comment"># Article reading statistic</span></span><br><span class="line">  <span class="attr">comment_count:</span> <span class="literal">true</span> <span class="comment"># If false, comment count will only be displayed in post page, not in home page</span></span><br><span class="line">  <span class="attr">recordIP:</span> <span class="literal">true</span> <span class="comment"># Whether to record the commenter IP</span></span><br><span class="line">  <span class="attr">serverURLs:</span> <span class="comment"># When the custom domain name is enabled, fill it in here (it will be detected automatically by default, no need to fill in)</span></span><br><span class="line">  <span class="comment">#post_meta_order: 0</span></span><br></pre></td></tr></table></figure>

<p>这里稍微解释一下各个参数的用途。<br>placeholder是在用户未输入任何参数时默认显示的值；avatar是默认用户头像，参考<a href="https://valine.js.org/avatar.html">link</a>；meta是可以选择的用户信息栏。</p>
<p>为了让Valine更加简洁，我们可以自定义Valine的显示，我是去除了Valine的power by、svg标签、下方的评论提示。具体做法是修改source&#x2F;_data&#x2F;styles.styl:</p>
<figure class="highlight stylus"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 隐藏 valine 的 powered by</span></span><br><span class="line"><span class="selector-class">.vpower</span><span class="selector-class">.txt-right</span> &#123;</span><br><span class="line">  <span class="attribute">display</span>: none;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 隐藏 valine 的 svg标签</span></span><br><span class="line"><span class="selector-class">.markdown</span> &#123;</span><br><span class="line">  <span class="attribute">display</span>: none;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 隐藏 valine 的 下方评论提示</span></span><br><span class="line"><span class="selector-class">.vempty</span> &#123;</span><br><span class="line">  <span class="attribute">display</span>: none<span class="meta">!important</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<blockquote>
<p>至此你的评论系统已经开启。</p>
</blockquote>
<h4 id="28、添加对表情符号的支持"><a href="#28、添加对表情符号的支持" class="headerlink" title="28、添加对表情符号的支持"></a>28、添加对表情符号的支持</h4><p>安装</p>
<figure class="highlight arcade"><table><tr><td class="code"><pre><span class="line">npm install hexo-<span class="built_in">filter</span>-emoji</span><br></pre></td></tr></table></figure>

<p>在站点配置文件添加：</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 为博客添加emoji表情支持</span></span><br><span class="line"><span class="attr">emoji:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">className:</span> <span class="string">github-emoji</span></span><br><span class="line">  <span class="attr">styles:</span> </span><br><span class="line">  <span class="attr">customEmojis:</span> </span><br></pre></td></tr></table></figure>

<h1 id="结束语"><a href="#结束语" class="headerlink" title="结束语"></a>结束语</h1><p>花了三天时间，算是把这篇『从零开始搭博客』完成了。感谢前人写下的教程，也感谢前人为搭博客写下的软件。在整个搭博客的过程中，我对git的使用，对github的使用，对Markdown文件排版的格式都有了更深层次的理解。同时在看到自己做的博客一步步成型，能感受到的满足感也让我对Web的道路更加充满信心。希望我写的这篇文章也能给看到的人留下一点小小的帮助。</p>
<h1 id="欢迎搜索我的博客，可以在这里留下你的评论哦"><a href="#欢迎搜索我的博客，可以在这里留下你的评论哦" class="headerlink" title="欢迎搜索我的博客，可以在这里留下你的评论哦"></a>欢迎搜索我的博客，可以在这里留下你的评论哦</h1><p><strong><a href="https://jcmarical.github.io/">https://jcmarical.github.io/</a></strong> <strong>Maric的Blog</strong></p>
]]></content>
      <categories>
        <category>技术</category>
      </categories>
      <tags>
        <tag>前端</tag>
      </tags>
  </entry>
  <entry>
    <title>Direct3D 12 基础渲染器搭建</title>
    <url>/posts/d3d12-pre.html</url>
    <content><![CDATA[<h1 id="引言"><a href="#引言" class="headerlink" title="引言"></a>引言</h1><blockquote>
<p>偶尔翻到了很早前用DirectX12搭建的渲染器，很多细节都已经遗忘了，现在发上来作为一个参考，期末考完后应该会根据龙书继续学习DX12的细节。</p>
</blockquote>
<p>本篇使用DX12，构建了一个加载了光照模型的基础渲染器</p>
<span id="more"></span>



<h1 id="一-调用D3D12的基本步骤和准备工作"><a href="#一-调用D3D12的基本步骤和准备工作" class="headerlink" title="一 调用D3D12的基本步骤和准备工作"></a>一 调用D3D12的基本步骤和准备工作</h1><h2 id="头文件和引用库文件"><a href="#头文件和引用库文件" class="headerlink" title="头文件和引用库文件"></a>头文件和引用库文件</h2><h3 id="组件对象模型-COM"><a href="#组件对象模型-COM" class="headerlink" title="组件对象模型 COM"></a>组件对象模型 COM</h3><ul>
<li><p>令DirectX不受编程语言束缚，使之向后兼容</p>
</li>
<li><p>通常视为接口，但考虑编程目的，目前当做C++类使用</p>
</li>
<li><p>隐藏大量细节</p>
</li>
<li><p>使用</p>
<ul>
<li>获取指向某COM接口的指针，需要借助特定函数或另一接口的方法，而不是C++的new</li>
<li>COM对象会统计其引用次数（引用计数为0，自行释放内存）</li>
<li>使用完后，应该调用<strong>Release</strong>方法</li>
</ul>
</li>
<li><p>为了辅助管理，Window运行时库（<strong>Windows Runtime Library，WRL</strong>）提供了<code>ComPtr</code>类，可以当做是COM对象的智能指针</p>
<ul>
<li><p><strong>Get：</strong>返回一个指针</p>
</li>
<li><p><strong>GetAddressOf：</strong>返回COM接口指针地址</p>
</li>
<li><p><strong>Reset：</strong>设置为nullptr并释放与之相关的所有引用，与赋值nullptr作用相同</p>
</li>
<li><blockquote>
<p>COM接口都以<strong>大写字母I</strong>开头</p>
</blockquote>
</li>
</ul>
</li>
</ul>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;SDKDDKVer.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> WIN32_LEAN_AND_MEAN <span class="comment">// 从 Windows 头中排除极少使用的资料，不加载MFC时使用</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;windows.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;tchar.h&gt;</span></span></span><br><span class="line"><span class="comment">//添加WTL支持 方便使用COM</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;wrl.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> Microsoft;</span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> Microsoft::WRL;</span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;dxgi1_6.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;DirectXMath.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> DirectX;</span><br><span class="line"><span class="comment">//for d3d12</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;d3d12.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;d3d12shader.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;d3dcompiler.h&gt;</span></span></span><br><span class="line"><span class="comment">//linker链接库</span></span><br><span class="line"><span class="meta">#<span class="keyword">pragma</span> comment(lib, <span class="string">&quot;dxguid.lib&quot;</span>)</span></span><br><span class="line"><span class="meta">#<span class="keyword">pragma</span> comment(lib, <span class="string">&quot;dxgi.lib&quot;</span>)</span></span><br><span class="line"><span class="meta">#<span class="keyword">pragma</span> comment(lib, <span class="string">&quot;d3d12.lib&quot;</span>)</span></span><br><span class="line"><span class="meta">#<span class="keyword">pragma</span> comment(lib, <span class="string">&quot;d3dcompiler.lib&quot;</span>)</span></span><br><span class="line"><span class="comment">//Debug</span></span><br><span class="line"><span class="meta">#<span class="keyword">if</span> defined(_DEBUG)</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;dxgidebug.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">endif</span></span></span><br><span class="line"><span class="comment">//将D3D12中的结构都派生（说扩展更合适）为简单的类，以便于使用，加入了构造函数</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;d3dx12.h&quot;</span></span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> GRS_WND_CLASS_NAME _T(<span class="string">&quot;Game Window Class&quot;</span>)</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> GRS_WND_TITLE   _T(<span class="string">&quot;DirectX12 Trigger Sample&quot;</span>)</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//GRS_THROW_IF_FAILED这个宏其实它就是为了在调用COM接口时简化出错时处理时使用的一个宏</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> GRS_THROW_IF_FAILED(hr) <span class="keyword">if</span> (FAILED(hr))&#123; throw CGRSCOMException(hr); &#125;</span></span><br></pre></td></tr></table></figure>

<h2 id="定义待渲染数据结构（三角形）"><a href="#定义待渲染数据结构（三角形）" class="headerlink" title="定义待渲染数据结构（三角形）"></a>定义待渲染数据结构（三角形）</h2><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="keyword">struct</span> <span class="title class_">GRS_VERTEX</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="comment">//&lt;DirectXMath.h&gt;</span></span><br><span class="line">XMFLOAT3 position; <span class="comment">//float[3]</span></span><br><span class="line">XMFLOAT4 color;   <span class="comment">//float[4]</span></span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>

<h2 id="定义变量"><a href="#定义变量" class="headerlink" title="定义变量"></a>定义变量</h2><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="type">const</span> UINT nFrameBackBufCount = <span class="number">3u</span>;<span class="comment">//无符号整型</span></span><br><span class="line"></span><br><span class="line">   <span class="type">int</span> iWidth = <span class="number">1024</span>;</span><br><span class="line">   <span class="type">int</span> iHeight = <span class="number">768</span>;  <span class="comment">//窗口大小</span></span><br><span class="line"></span><br><span class="line">   UINT nFrameIndex = <span class="number">0</span>;</span><br><span class="line">   UINT nFrame = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">   UINT nDXGIFactoryFlags = <span class="number">0U</span>;</span><br><span class="line">   UINT nRTVDescriptorSize = <span class="number">0U</span>;</span><br><span class="line"></span><br><span class="line">   HWND hWnd = <span class="literal">nullptr</span>; <span class="comment">//窗口句柄</span></span><br><span class="line">   MSG  msg = &#123;&#125;;  <span class="comment">//Message</span></span><br><span class="line"></span><br><span class="line">   <span class="type">float</span> fAspectRatio = <span class="number">3.0f</span>;  <span class="comment">//分辨</span></span><br><span class="line"></span><br><span class="line">   D3D12_VERTEX_BUFFER_VIEW stVertexBufferView = &#123;&#125;;  <span class="comment">//顶点缓冲视图</span></span><br><span class="line"></span><br><span class="line">   UINT64 n64FenceValue = <span class="number">0u</span>i64;      <span class="comment">// ？？？</span></span><br><span class="line"></span><br><span class="line">   HANDLE hFenceEvent = <span class="literal">nullptr</span>;       <span class="comment">//？？？句柄 </span></span><br><span class="line"></span><br><span class="line">   <span class="function">CD3DX12_VIEWPORT <span class="title">stViewPort</span><span class="params">(<span class="number">0.0f</span>, <span class="number">0.0f</span>, <span class="keyword">static_cast</span>&lt;<span class="type">float</span>&gt;(iWidth), <span class="keyword">static_cast</span>&lt;<span class="type">float</span>&gt;(iHeight))</span></span>;</span><br><span class="line">   <span class="function">CD3DX12_RECT  <span class="title">stScissorRect</span><span class="params">(<span class="number">0</span>, <span class="number">0</span>, <span class="keyword">static_cast</span>&lt;LONG&gt;(iWidth), <span class="keyword">static_cast</span>&lt;LONG&gt;(iHeight))</span></span>;</span><br><span class="line"></span><br><span class="line">   <span class="comment">//ComPtr&lt;&gt; WRL中的智能指针，模版类的析构函数帮助我们来管理这些COM组件实现的接口实例，而无需过多担心内存的泄漏。该智能指针的大小和一般的指针大小是一致的，没有额外的内存空间占用。</span></span><br><span class="line">   ComPtr&lt;IDXGIFactory5&gt;                pIDXGIFactory5; </span><br><span class="line">   ComPtr&lt;IDXGIAdapter1&gt;                pIAdapter;</span><br><span class="line">   ComPtr&lt;ID3D12Device4&gt;                pID3DDevice;</span><br><span class="line">   ComPtr&lt;ID3D12CommandQueue&gt;           pICommandQueue;</span><br><span class="line">   ComPtr&lt;IDXGISwapChain1&gt;              pISwapChain1;</span><br><span class="line">   ComPtr&lt;IDXGISwapChain3&gt;              pISwapChain3;</span><br><span class="line">   ComPtr&lt;ID3D12DescriptorHeap&gt;         pIRTVHeap;</span><br><span class="line">   ComPtr&lt;ID3D12Resource&gt;               pIARenderTargets[nFrameBackBufCount];</span><br><span class="line">   ComPtr&lt;ID3D12CommandAllocator&gt;       pICommandAllocator;</span><br><span class="line">   ComPtr&lt;ID3D12RootSignature&gt;          pIRootSignature;</span><br><span class="line">   ComPtr&lt;ID3D12PipelineState&gt;          pIPipelineState;</span><br><span class="line">   ComPtr&lt;ID3D12GraphicsCommandList&gt;    pICommandList;</span><br><span class="line">   ComPtr&lt;ID3D12Resource&gt;               pIVertexBuffer;</span><br><span class="line">   ComPtr&lt;ID3D12Fence&gt;                  pIFence;</span><br><span class="line">   <span class="keyword">return</span> <span class="number">0</span>;</span><br></pre></td></tr></table></figure>

<h1 id="二-创建窗口"><a href="#二-创建窗口" class="headerlink" title="二 创建窗口"></a>二 创建窗口</h1><h2 id="WNDCLASSEX"><a href="#WNDCLASSEX" class="headerlink" title="WNDCLASSEX"></a>WNDCLASSEX</h2><h2 id="设置窗口属性"><a href="#设置窗口属性" class="headerlink" title="设置窗口属性"></a>设置窗口属性</h2><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line">WNDCLASSEX windowClass = &#123; <span class="number">0</span> &#125;;</span><br><span class="line">	windowClass.cbSize = <span class="built_in">sizeof</span>(WNDCLASSEX);</span><br><span class="line">	windowClass.style = CS_HREDRAW | CS_VREDRAW;</span><br><span class="line">	windowClass.lpfnWndProc = DefWindowProc;</span><br><span class="line">	windowClass.hInstance = hInstance;</span><br><span class="line">	windowClass.hCursor = <span class="built_in">LoadCursor</span>(<span class="literal">NULL</span>, IDC_ARROW);</span><br><span class="line">	windowClass.lpszClassName = <span class="string">L&quot;YSHRenderClass&quot;</span>;</span><br></pre></td></tr></table></figure>

<h2 id="注册WNDCLASSEX结构体"><a href="#注册WNDCLASSEX结构体" class="headerlink" title="注册WNDCLASSEX结构体"></a>注册WNDCLASSEX结构体</h2><figure class="highlight reasonml"><table><tr><td class="code"><pre><span class="line"><span class="constructor">RegisterClassEx(&amp;<span class="params">windowClass</span>)</span>;</span><br></pre></td></tr></table></figure>

<h2 id="Create-Window"><a href="#Create-Window" class="headerlink" title="Create Window"></a>Create Window</h2><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line">HWND hwnd = <span class="built_in">CreateWindow</span>(</span><br><span class="line">		windowClass.lpszClassName,</span><br><span class="line">		<span class="string">L&quot;YSHRender&quot;</span>,</span><br><span class="line">		WS_OVERLAPPEDWINDOW,</span><br><span class="line">		CW_USEDEFAULT,</span><br><span class="line">		CW_USEDEFAULT,</span><br><span class="line">		<span class="number">800</span>,</span><br><span class="line">		<span class="number">600</span>,</span><br><span class="line">		<span class="literal">nullptr</span>,       </span><br><span class="line">		<span class="literal">nullptr</span>,       </span><br><span class="line">		hInstance,</span><br><span class="line">		<span class="literal">nullptr</span>);</span><br></pre></td></tr></table></figure>

<h2 id="Show-Window"><a href="#Show-Window" class="headerlink" title="Show Window"></a>Show Window</h2><figure class="highlight reasonml"><table><tr><td class="code"><pre><span class="line"><span class="constructor">ShowWindow(<span class="params">hwnd</span>, SW_SHOW)</span>;</span><br></pre></td></tr></table></figure>

<h2 id="添加While循环"><a href="#添加While循环" class="headerlink" title="添加While循环"></a>添加While循环</h2><ul>
<li>持续运行</li>
</ul>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="keyword">while</span> (<span class="literal">true</span>)</span><br><span class="line">	&#123;</span><br><span class="line">	&#125;</span><br></pre></td></tr></table></figure>

<h2 id="教程一二完整代码"><a href="#教程一二完整代码" class="headerlink" title="?教程一二完整代码"></a><em>?教程一二完整代码</em></h2><ul>
<li>因为未知的错误，所以运行不了</li>
</ul>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="type">const</span> UINT nFrameBackBufCount = <span class="number">3u</span>;<span class="comment">//无符号整型</span></span><br><span class="line"></span><br><span class="line">    <span class="type">int</span> iWidth = <span class="number">1024</span>;</span><br><span class="line">    <span class="type">int</span> iHeight = <span class="number">768</span>;  <span class="comment">//窗口大小</span></span><br><span class="line"></span><br><span class="line">    UINT nFrameIndex = <span class="number">0</span>;</span><br><span class="line">    UINT nFrame = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">    UINT nDXGIFactoryFlags = <span class="number">0U</span>;</span><br><span class="line">    UINT nRTVDescriptorSize = <span class="number">0U</span>;</span><br><span class="line"></span><br><span class="line">    HWND hWnd = <span class="literal">nullptr</span>; <span class="comment">//窗口句柄</span></span><br><span class="line">    MSG  msg = &#123;&#125;;  <span class="comment">//Message</span></span><br><span class="line"></span><br><span class="line">    <span class="type">float</span> fAspectRatio = <span class="number">3.0f</span>;  <span class="comment">//分辨</span></span><br><span class="line"></span><br><span class="line">    D3D12_VERTEX_BUFFER_VIEW stVertexBufferView = &#123;&#125;;  <span class="comment">//顶点缓冲视图</span></span><br><span class="line"></span><br><span class="line">    UINT64 n64FenceValue = <span class="number">0u</span>i64;      <span class="comment">// ？？？</span></span><br><span class="line"></span><br><span class="line">    HANDLE hFenceEvent = <span class="literal">nullptr</span>;       <span class="comment">//？？？句柄 </span></span><br><span class="line"></span><br><span class="line">    <span class="function">CD3DX12_VIEWPORT <span class="title">stViewPort</span><span class="params">(<span class="number">0.0f</span>, <span class="number">0.0f</span>, <span class="keyword">static_cast</span>&lt;<span class="type">float</span>&gt;(iWidth), <span class="keyword">static_cast</span>&lt;<span class="type">float</span>&gt;(iHeight))</span></span>;</span><br><span class="line">    <span class="function">CD3DX12_RECT  <span class="title">stScissorRect</span><span class="params">(<span class="number">0</span>, <span class="number">0</span>, <span class="keyword">static_cast</span>&lt;LONG&gt;(iWidth), <span class="keyword">static_cast</span>&lt;LONG&gt;(iHeight))</span></span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//ComPtr&lt;&gt; 智能指针，帮助我们来管理这些COM组件实现的接口实例，而无需过多担心内存的泄漏。该智能指针的大小和一般的指针大小是一致的，没有额外的内存空间占用。</span></span><br><span class="line">    ComPtr&lt;IDXGIFactory5&gt;                pIDXGIFactory5; </span><br><span class="line">    ComPtr&lt;IDXGIAdapter1&gt;                pIAdapter;</span><br><span class="line">    ComPtr&lt;ID3D12Device4&gt;                pID3DDevice;</span><br><span class="line">    ComPtr&lt;ID3D12CommandQueue&gt;           pICommandQueue;</span><br><span class="line">    ComPtr&lt;IDXGISwapChain1&gt;              pISwapChain1;</span><br><span class="line">    ComPtr&lt;IDXGISwapChain3&gt;              pISwapChain3;</span><br><span class="line">    ComPtr&lt;ID3D12DescriptorHeap&gt;         pIRTVHeap;</span><br><span class="line">    ComPtr&lt;ID3D12Resource&gt;               pIARenderTargets[nFrameBackBufCount];</span><br><span class="line">    ComPtr&lt;ID3D12CommandAllocator&gt;       pICommandAllocator;</span><br><span class="line">    ComPtr&lt;ID3D12RootSignature&gt;          pIRootSignature;</span><br><span class="line">    ComPtr&lt;ID3D12PipelineState&gt;          pIPipelineState;</span><br><span class="line">    ComPtr&lt;ID3D12GraphicsCommandList&gt;    pICommandList;</span><br><span class="line">    ComPtr&lt;ID3D12Resource&gt;               pIVertexBuffer;</span><br><span class="line">    ComPtr&lt;ID3D12Fence&gt;                  pIFence;</span><br><span class="line"></span><br><span class="line">    WNDCLASSEX windowClass = &#123; <span class="number">0</span> &#125;;</span><br><span class="line">    windowClass.cbSize = <span class="built_in">sizeof</span>(WNDCLASSEX);</span><br><span class="line">   <span class="comment">// windowClass.style = CS_HREDRAW | CS_VREDRAW; 不同教程</span></span><br><span class="line">    windowClass.style = CS_GLOBALCLASS;    <span class="comment">//去掉Redraw类型</span></span><br><span class="line">    windowClass.lpfnWndProc = DefWindowProc;</span><br><span class="line">    windowClass.hInstance = hInstance;</span><br><span class="line">    windowClass.hCursor = <span class="built_in">LoadCursor</span>(<span class="literal">NULL</span>, IDC_ARROW);</span><br><span class="line">    windowClass.lpszClassName = <span class="string">L&quot;YSHRenderClass&quot;</span>;</span><br><span class="line">    windowClass.hbrBackground = (HBRUSH)<span class="built_in">GetStockObject</span>(NULL_BRUSH);     <span class="comment">//防止无聊的背景重绘，因为我们并不使用GDI的任何绘制，而是在使用D3D12绘制！</span></span><br><span class="line"></span><br><span class="line">    <span class="built_in">RegisterClassEx</span>(&amp;windowClass);</span><br><span class="line"></span><br><span class="line">    hWnd = <span class="built_in">CreateWindowW</span>(GRS_WND_CLASS_NAME</span><br><span class="line">        , GRS_WND_TITLE</span><br><span class="line">        , WS_OVERLAPPED | WS_SYSMENU</span><br><span class="line">        , CW_USEDEFAULT</span><br><span class="line">        , <span class="number">0</span></span><br><span class="line">        , iWidth</span><br><span class="line">        , iHeight</span><br><span class="line">        , <span class="literal">nullptr</span></span><br><span class="line">        , <span class="literal">nullptr</span></span><br><span class="line">        , hInstance</span><br><span class="line">        , <span class="literal">nullptr</span>);</span><br><span class="line"></span><br><span class="line">    <span class="built_in">ShowWindow</span>(hWnd, SW_SHOW);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">while</span> (<span class="number">0</span>) &#123;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br></pre></td></tr></table></figure>

<h2 id="添加事件处理"><a href="#添加事件处理" class="headerlink" title="添加事件处理"></a>添加事件处理</h2><ul>
<li>把while改成这个，这下就可以正常关闭窗口了</li>
</ul>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line">MSG msg = &#123;&#125;;</span><br><span class="line">	<span class="keyword">while</span> (msg.message != WM_QUIT)</span><br><span class="line">	&#123;</span><br><span class="line">		<span class="keyword">if</span> (<span class="built_in">PeekMessage</span>(&amp;msg, <span class="literal">NULL</span>, <span class="number">0</span>, <span class="number">0</span>, PM_REMOVE))</span><br><span class="line">		&#123;</span><br><span class="line">			<span class="built_in">TranslateMessage</span>(&amp;msg);</span><br><span class="line">			<span class="built_in">DispatchMessage</span>(&amp;msg);</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br></pre></td></tr></table></figure>

<ul>
<li>但VS还没有终止程序，需要添加一个<strong>回调函数</strong>，之前默认的是<strong>DefWindowProc</strong>，现在改成自己的WindowProc函数</li>
</ul>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line">WNDCLASSEX windowClass = &#123; <span class="number">0</span> &#125;;</span><br><span class="line">	windowClass.cbSize = <span class="built_in">sizeof</span>(WNDCLASSEX);</span><br><span class="line">	windowClass.style = CS_HREDRAW | CS_VREDRAW;</span><br><span class="line">	windowClass.lpfnWndProc = WindowProc;<span class="comment">//DefWindowProc;</span></span><br><span class="line">	windowClass.hInstance = hInstance;</span><br><span class="line">	windowClass.hCursor = <span class="built_in">LoadCursor</span>(<span class="literal">NULL</span>, IDC_ARROW);</span><br><span class="line">	windowClass.lpszClassName = <span class="string">L&quot;YSHRenderClass&quot;</span>;</span><br></pre></td></tr></table></figure>

<h3 id="WindowProc-回调函数"><a href="#WindowProc-回调函数" class="headerlink" title="WindowProc 回调函数"></a>WindowProc 回调函数</h3><h4 id="作用"><a href="#作用" class="headerlink" title="作用"></a>作用</h4><ul>
<li>咱们有很多消息类型，通过<code>Switch</code>来选择处理不同类型的信息。</li>
<li>比如<code>WM_DESTROTY</code>，就是在咱们点击关闭窗口按钮时会触发的，在<code>case WM_DESTROY</code>里面咱们调用了<code>PostQuitMessage(0)</code>方法，也就意味着退出了。</li>
</ul>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="function">LRESULT CALLBACK <span class="title">WindowProc</span><span class="params">(HWND hWnd, UINT message, WPARAM wParam, LPARAM lParam)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	<span class="keyword">switch</span> (message)</span><br><span class="line">	&#123;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">case</span> WM_DESTROY:</span><br><span class="line">		<span class="built_in">PostQuitMessage</span>(<span class="number">0</span>);</span><br><span class="line">		<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">return</span> <span class="built_in">DefWindowProc</span>(hWnd, message, wParam, lParam);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h1 id="三-初始化Direct3D"><a href="#三-初始化Direct3D" class="headerlink" title="三 初始化Direct3D"></a>三 初始化Direct3D</h1><h2 id="基本知识"><a href="#基本知识" class="headerlink" title="基本知识"></a>基本知识</h2><h3 id="纹理格式"><a href="#纹理格式" class="headerlink" title="纹理格式"></a>纹理格式</h3><ul>
<li>尽管名称在字面上是颜色和Alpha值，但不一定存储的是颜色信息<ul>
<li>如 <strong>1</strong> 还可以储存任意3D向量</li>
<li>也有无类型的纹理，仅用它来预留内存</li>
<li><img data-src="https://cdn.jsdelivr.net/gh/JcMarical/mapstorage/images/image-20230721145950240.png" alt="image-20230721145950240"></li>
</ul>
</li>
</ul>
<p><img data-src="https://cdn.jsdelivr.net/gh/JcMarical/mapstorage/images/image-20230721145536444.png" alt="image-20230721145536444"></p>
<h3 id="深度缓冲"><a href="#深度缓冲" class="headerlink" title="深度缓冲"></a>深度缓冲</h3><p><img data-src="https://cdn.jsdelivr.net/gh/JcMarical/mapstorage/images/image-20230721150903460.png" alt="image-20230721150903460"></p>
<h3 id="资源与描述符"><a href="#资源与描述符" class="headerlink" title="资源与描述符"></a>资源与描述符</h3><h4 id="资源"><a href="#资源" class="headerlink" title="资源"></a>资源</h4><ul>
<li>GPU会对资源进行读和写操作<ul>
<li>读：例如从纹理或者存有3d场景中几何体位置信息的缓冲区读取数据</li>
<li>写：例如向后台缓冲区或深度&#x2F;模版缓冲区写入数据</li>
</ul>
</li>
<li>在发出绘制命令前，需要将本次draw call相关的Resource bind （or link）到render pipeline。</li>
<li>部分资源可能在每次绘制时发生变化，每次需要重新绑定</li>
</ul>
<h4 id="描述符"><a href="#描述符" class="headerlink" title="描述符"></a>描述符</h4><ul>
<li>然而，GPU资源并非直接与render pipeline 绑定，需要**描述符(descriptor)**对象来对它进行间接引用，descriptor实际上即为一个中间层。</li>
<li>为什么要额外使用这个中间层？<ul>
<li>GPU Resource实际上都是一些普通的内存块</li>
<li>由于Resource通用性，它们能被设置到render pipeline的不同阶段使用<ul>
<li>常见例子：先把纹理用作渲染目标(即D3d绘制到纹理技术)，然后再将该纹理作为一个shader resource（经过采样作为shader的input data）</li>
</ul>
</li>
<li>有时，我们只想bind  a part of resource data 到 render pipeline中</li>
<li>创建一个resource 可能用的 无类型格式，这样GPU甚至不会知晓</li>
</ul>
</li>
<li>作用：<ul>
<li>指定资源数据</li>
<li>为GPU解释资源（无类型，则创建descriptor时指定其type类型）</li>
<li>告知D3D某个资源如何使用</li>
<li>指定resouce的局部数据</li>
</ul>
</li>
</ul>
<h5 id="descriptor-x3D-x3D-view"><a href="#descriptor-x3D-x3D-view" class="headerlink" title="descriptor&#x3D;&#x3D;view"></a>descriptor&#x3D;&#x3D;view<img data-src="https://cdn.jsdelivr.net/gh/JcMarical/mapstorage/images/image-20230721153444722.png" alt="image-20230721153444722"></h5><h4 id="Descriptor具体类型"><a href="#Descriptor具体类型" class="headerlink" title="Descriptor具体类型"></a>Descriptor具体类型</h4><p><img data-src="https://cdn.jsdelivr.net/gh/JcMarical/mapstorage/images/image-20230721153645480.png" alt="image-20230721153645480"></p>
<h3 id="描述符堆-Descriptor-Heap"><a href="#描述符堆-Descriptor-Heap" class="headerlink" title="描述符堆 Descriptor Heap"></a>描述符堆 Descriptor Heap</h3><ul>
<li><p>存有一系列描述符，可看做描述符数组</p>
</li>
<li><p>本质上是存放用户程序中某种<strong>特定类型</strong>描述符的一块内存</p>
</li>
<li><p>我们需要为每一种描述符都创建出单独的描述符堆。另外，也可以为同一种描述符类型多个描述符堆</p>
</li>
<li><p>我们可以用多个描述符引用同一个资源</p>
<ul>
<li><p>先把纹理用作渲染目标(即D3d绘制到纹理技术)，然后再将该纹理作为一个shader resource（经过采样作为shader的input data），就要分别创建两个描述符：<strong>RTV描述符和SRV描述符</strong></p>
</li>
<li><p>如果以无类型格式创建一个资源，我们也可以创建两个Descriptor分别根据需求当做浮点值和整数值使用</p>
</li>
</ul>
</li>
</ul>
<p>创建Descriptor最佳时机在初始化期间，此过程中需要执行一些类型的检测和验证工作</p>
<h2 id="全局变量"><a href="#全局变量" class="headerlink" title="全局变量"></a>全局变量</h2><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="type">const</span> UINT FrameCount = <span class="number">2</span>;</span><br><span class="line">UINT width = <span class="number">800</span>;</span><br><span class="line">UINT height = <span class="number">600</span>;</span><br><span class="line">HWND hwnd;</span><br></pre></td></tr></table></figure>

<h3 id="管线对象"><a href="#管线对象" class="headerlink" title="管线对象"></a>管线对象</h3><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="comment">//管线对象</span></span><br><span class="line">ComPtr&lt;IDXGISwapChain3&gt; swapChain;</span><br><span class="line">ComPtr&lt;ID3D12Device&gt; device;</span><br><span class="line">ComPtr&lt;ID3D12Resource&gt; renderTargets[FrameCount];</span><br><span class="line">ComPtr&lt;ID3D12CommandAllocator&gt; commandAllocator;</span><br><span class="line">ComPtr&lt;ID3D12CommandQueue&gt; commandQueue;</span><br><span class="line">ComPtr&lt;ID3D12DescriptorHeap&gt; rtvHeap;</span><br><span class="line">ComPtr&lt;ID3D12PipelineState&gt; pipelineState;</span><br><span class="line">ComPtr&lt;ID3D12GraphicsCommandList&gt; commandList;</span><br><span class="line">UINT rtvDescriptorSize;</span><br></pre></td></tr></table></figure>

<h3 id="同步对象"><a href="#同步对象" class="headerlink" title="同步对象"></a>同步对象</h3><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line">UINT frameIndex;</span><br><span class="line">HANDLE fenceEvent;</span><br><span class="line">ComPtr&lt;ID3D12Fence&gt; fence;</span><br><span class="line">UINT64 fenceValue;</span><br></pre></td></tr></table></figure>

<h2 id="加载管线对象"><a href="#加载管线对象" class="headerlink" title="加载管线对象"></a>加载管线对象</h2><ul>
<li>新建一个函数叫<code>LoadPipeline()</code>，下面在这个函数里面加载咱们需要的管线对象了</li>
</ul>
<h3 id="辅助方法（官方抄来-可以自己写"><a href="#辅助方法（官方抄来-可以自己写" class="headerlink" title="辅助方法（官方抄来,可以自己写)"></a>辅助方法（官方抄来,可以自己写)</h3><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="function">std::string <span class="title">HrToString</span><span class="params">(HRESULT hr)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	<span class="type">char</span> s_str[<span class="number">64</span>] = &#123;&#125;;</span><br><span class="line">	<span class="built_in">sprintf_s</span>(s_str, <span class="string">&quot;HRESULT of 0x%08X&quot;</span>, <span class="built_in">static_cast</span>&lt;UINT&gt;(hr));</span><br><span class="line">	<span class="keyword">return</span> std::<span class="built_in">string</span>(s_str);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">HrException</span> : <span class="keyword">public</span> std::runtime_error</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">	<span class="built_in">HrException</span>(HRESULT hr) : std::<span class="built_in">runtime_error</span>(<span class="built_in">HrToString</span>(hr)), <span class="built_in">m_hr</span>(hr) &#123;&#125;</span><br><span class="line">	<span class="function">HRESULT <span class="title">Error</span><span class="params">()</span> <span class="type">const</span> </span>&#123; <span class="keyword">return</span> m_hr; &#125;</span><br><span class="line"><span class="keyword">private</span>:</span><br><span class="line">	<span class="type">const</span> HRESULT m_hr;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">ThrowIfFailed</span><span class="params">(HRESULT hr)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	<span class="keyword">if</span> (<span class="built_in">FAILED</span>(hr))</span><br><span class="line">	&#123;</span><br><span class="line">		<span class="keyword">throw</span> <span class="built_in">HrException</span>(hr);</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="ID3D12Debug调试层"><a href="#ID3D12Debug调试层" class="headerlink" title="ID3D12Debug	调试层"></a>ID3D12Debug	调试层</h3><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">if</span> defined(_DEBUG)</span></span><br><span class="line">	&#123;</span><br><span class="line">		ComPtr&lt;ID3D12Debug&gt; debugController;</span><br><span class="line">		<span class="keyword">if</span> (<span class="built_in">SUCCEEDED</span>(<span class="built_in">D3D12GetDebugInterface</span>(<span class="built_in">IID_PPV_ARGS</span>(&amp;debugController))))</span><br><span class="line">		&#123;</span><br><span class="line">			debugController-&gt;<span class="built_in">EnableDebugLayer</span>();</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line"><span class="meta">#<span class="keyword">endif</span> </span></span><br></pre></td></tr></table></figure>

<h3 id="IDXGIFactory4-枚举显示适配器，创建交换链"><a href="#IDXGIFactory4-枚举显示适配器，创建交换链" class="headerlink" title="IDXGIFactory4 枚举显示适配器，创建交换链"></a>IDXGIFactory4 枚举显示适配器，创建交换链</h3><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line">ComPtr&lt;IDXGIFactory4&gt; mDxgiFactory;				<span class="built_in">ThrowIfFailed</span>(<span class="built_in">CreateDXGIFactory1</span>(<span class="built_in">IID_PPV_ARGS</span>(mDxgiFactory.<span class="built_in">GetAddressOf</span>())));</span><br></pre></td></tr></table></figure>

<h4 id="IDXGIAdapter1"><a href="#IDXGIAdapter1" class="headerlink" title="IDXGIAdapter1"></a>IDXGIAdapter1</h4><ul>
<li>不只1，还有2、3、4</li>
<li>现在可以通过上面创建的工厂来枚举咱们的适配器了</li>
</ul>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="function">IDXGIAdapter1* <span class="title">GetSupportedAdapter</span><span class="params">(ComPtr&lt;IDXGIFactory4&gt;&amp; dxgiFactory,<span class="type">const</span> D3D_FEATURE_LEVEL featureLevel)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	IDXGIAdapter1* adapter = <span class="literal">nullptr</span>;</span><br><span class="line">	<span class="keyword">for</span> (std::<span class="type">uint32_t</span> adapterIndex = <span class="number">0U</span>; ; ++adapterIndex) </span><br><span class="line">	&#123;</span><br><span class="line">		IDXGIAdapter1* currentAdapter = <span class="literal">nullptr</span>;</span><br><span class="line">		<span class="keyword">if</span> (DXGI_ERROR_NOT_FOUND == dxgiFactory-&gt;<span class="built_in">EnumAdapters1</span>(adapterIndex, &amp;currentAdapter)) </span><br><span class="line">		&#123;</span><br><span class="line">			<span class="keyword">break</span>;</span><br><span class="line">		&#125;</span><br><span class="line"></span><br><span class="line">		<span class="type">const</span> HRESULT hres = <span class="built_in">D3D12CreateDevice</span>(currentAdapter,featureLevel,_uuidof(ID3D12Device),<span class="literal">nullptr</span>);</span><br><span class="line">		<span class="keyword">if</span> (<span class="built_in">SUCCEEDED</span>(hres)) </span><br><span class="line">		&#123;</span><br><span class="line">			adapter = currentAdapter;</span><br><span class="line">			<span class="keyword">break</span>;</span><br><span class="line">		&#125;</span><br><span class="line"></span><br><span class="line">		currentAdapter-&gt;<span class="built_in">Release</span>();</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">return</span> adapter;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<ul>
<li>找到咱们支持的适配器</li>
</ul>
<figure class="highlight text"><table><tr><td class="code"><pre><span class="line">D3D_FEATURE_LEVEL featureLevels[] =</span><br><span class="line">	&#123;</span><br><span class="line">		D3D_FEATURE_LEVEL_12_1,</span><br><span class="line">		D3D_FEATURE_LEVEL_12_0,</span><br><span class="line">		D3D_FEATURE_LEVEL_11_1,</span><br><span class="line">		D3D_FEATURE_LEVEL_11_0,</span><br><span class="line">	&#125;;</span><br><span class="line"></span><br><span class="line">	IDXGIAdapter1* adapter = nullptr;</span><br><span class="line">	for (std::uint32_t i = 0U; i &lt; _countof(featureLevels); ++i)</span><br><span class="line">	&#123;</span><br><span class="line">		adapter = GetSupportedAdapter(mDxgiFactory, featureLevels[i]);</span><br><span class="line">		if (adapter != nullptr) </span><br><span class="line">		&#123;</span><br><span class="line">			break;</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br></pre></td></tr></table></figure>

<h3 id="ID3D12Device-包含对象创建方法"><a href="#ID3D12Device-包含对象创建方法" class="headerlink" title="ID3D12Device 包含对象创建方法"></a>ID3D12Device 包含对象创建方法</h3><ul>
<li><code>ID3D12Device</code>接口作为最基础的接口之一，在整个d3d12编程中有很重要的作用。包含了很多重要对象的创建方法。</li>
</ul>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="keyword">if</span> (adapter != <span class="literal">nullptr</span>)</span><br><span class="line">	&#123;</span><br><span class="line">		<span class="built_in">D3D12CreateDevice</span>(adapter,D3D_FEATURE_LEVEL_12_1,<span class="built_in">IID_PPV_ARGS</span>(device.<span class="built_in">GetAddressOf</span>()));</span><br><span class="line">	&#125;</span><br></pre></td></tr></table></figure>

<h3 id="ID3D12CommandQueue-命令队列"><a href="#ID3D12CommandQueue-命令队列" class="headerlink" title="ID3D12CommandQueue 命令队列"></a>ID3D12CommandQueue 命令队列</h3><ul>
<li>在Direct3D12中，命令队列由接口<code>ID3D12CommandQueue</code>来表示。它是通过填充<code>D3D12_COMMAND_QUEUE_DESC</code>结构来描述队列，然后调用<code>ID3D12Device::CreateCommandQueue</code>来创建的。</li>
</ul>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line">D3D12_COMMAND_QUEUE_DESC queueDesc = &#123;&#125;;</span><br><span class="line">	queueDesc.Flags = D3D12_COMMAND_QUEUE_FLAG_NONE;</span><br><span class="line">	queueDesc.Type = D3D12_COMMAND_LIST_TYPE_DIRECT;</span><br><span class="line"></span><br><span class="line">	<span class="built_in">ThrowIfFailed</span>(device-&gt;<span class="built_in">CreateCommandQueue</span>(&amp;queueDesc, <span class="built_in">IID_PPV_ARGS</span>(&amp;commandQueue)));</span><br></pre></td></tr></table></figure>

<h3 id="IDXGISwapChain3-交换链"><a href="#IDXGISwapChain3-交换链" class="headerlink" title="IDXGISwapChain3 交换链"></a>IDXGISwapChain3 交换链</h3><ul>
<li>正如你看到的，它带了个数字3，也就意味着还有。。。</li>
</ul>
<h4 id="交换链和页面翻转"><a href="#交换链和页面翻转" class="headerlink" title="交换链和页面翻转"></a>交换链和页面翻转</h4><p>为避免动画中画面闪烁，最好将动画帧绘制在一中称为后台缓冲区的离屏(off-screen)纹理内。</p>
<ul>
<li>后台缓冲区绘制完后，和前台缓冲区互换的操作，称为<strong>呈现</strong>，只需交换两个指针即可</li>
<li>后台缓冲区和前台缓冲区构成了<strong>交换链</strong>(swap chain)</li>
<li>使用两个缓冲区称为<strong>双缓冲</strong>(double buffering)</li>
</ul>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line">DXGI_SWAP_CHAIN_DESC1 swapChainDesc = &#123;&#125;;</span><br><span class="line">	swapChainDesc.BufferCount = FrameCount;</span><br><span class="line">	swapChainDesc.Width = width;</span><br><span class="line">	swapChainDesc.Height = height;</span><br><span class="line">	swapChainDesc.Format = DXGI_FORMAT_R8G8B8A8_UNORM;</span><br><span class="line">	swapChainDesc.BufferUsage = DXGI_USAGE_RENDER_TARGET_OUTPUT;</span><br><span class="line">	swapChainDesc.SwapEffect = DXGI_SWAP_EFFECT_FLIP_DISCARD;</span><br><span class="line">	swapChainDesc.SampleDesc.Count = <span class="number">1</span>;</span><br><span class="line"></span><br><span class="line">	ComPtr&lt;IDXGISwapChain1&gt; swapChain1;</span><br><span class="line">	<span class="built_in">ThrowIfFailed</span>(mDxgiFactory-&gt;<span class="built_in">CreateSwapChainForHwnd</span>(</span><br><span class="line">		commandQueue.<span class="built_in">Get</span>(),  </span><br><span class="line">		hwnd,</span><br><span class="line">		&amp;swapChainDesc,</span><br><span class="line">		<span class="literal">nullptr</span>,</span><br><span class="line">		<span class="literal">nullptr</span>,</span><br><span class="line">		&amp;swapChain1</span><br><span class="line">	));</span><br><span class="line"></span><br><span class="line">	<span class="built_in">ThrowIfFailed</span>(swapChain1.<span class="built_in">As</span>(&amp;swapChain));</span><br><span class="line">	frameIndex = swapChain-&gt;<span class="built_in">GetCurrentBackBufferIndex</span>();</span><br></pre></td></tr></table></figure>

<h3 id="ID3D12DescriptorHeap-描述符堆"><a href="#ID3D12DescriptorHeap-描述符堆" class="headerlink" title="ID3D12DescriptorHeap 描述符堆"></a>ID3D12DescriptorHeap 描述符堆</h3><ul>
<li>描述符堆是什么？看名字就知道是存放东西的地方，每错，它就是用来存放描述符（内存那么多数据，我怎么知道这块内存是什么？就靠描述符来对它描述）或者说是资源视图的。</li>
</ul>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line">D3D12_DESCRIPTOR_HEAP_DESC rtvHeapDesc = &#123;&#125;;</span><br><span class="line">		rtvHeapDesc.NumDescriptors = FrameCount;</span><br><span class="line">		rtvHeapDesc.Type = D3D12_DESCRIPTOR_HEAP_TYPE_RTV;</span><br><span class="line">		rtvHeapDesc.Flags = D3D12_DESCRIPTOR_HEAP_FLAG_NONE;</span><br><span class="line">		<span class="built_in">ThrowIfFailed</span>(device-&gt;<span class="built_in">CreateDescriptorHeap</span>(&amp;rtvHeapDesc, <span class="built_in">IID_PPV_ARGS</span>(&amp;rtvHeap)));</span><br><span class="line"></span><br><span class="line">		rtvDescriptorSize = device-&gt;<span class="built_in">GetDescriptorHandleIncrementSize</span>(D3D12_DESCRIPTOR_HEAP_TYPE_RTV);</span><br></pre></td></tr></table></figure>

<h3 id="ID3D12Resource-资源"><a href="#ID3D12Resource-资源" class="headerlink" title="ID3D12Resource 资源"></a>ID3D12Resource 资源</h3><ul>
<li>首先通过<code>GetBuffer</code>方法获取交换链缓存区资源，然后为此资源创建视图。</li>
</ul>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="keyword">for</span> (UINT n = <span class="number">0</span>; n &lt; FrameCount; n++)</span><br><span class="line">	&#123;</span><br><span class="line">		<span class="built_in">ThrowIfFailed</span>(swapChain-&gt;<span class="built_in">GetBuffer</span>(n, <span class="built_in">IID_PPV_ARGS</span>(&amp;renderTargets[n])));</span><br><span class="line">		device-&gt;<span class="built_in">CreateRenderTargetView</span>(renderTargets[n].<span class="built_in">Get</span>(), <span class="literal">nullptr</span>, rtvHandle);</span><br><span class="line">		rtvHandle.<span class="built_in">Offset</span>(<span class="number">1</span>, rtvDescriptorSize);</span><br><span class="line">	&#125;</span><br></pre></td></tr></table></figure>

<h3 id="ID3D12CommandAllocator-命令分配器"><a href="#ID3D12CommandAllocator-命令分配器" class="headerlink" title="ID3D12CommandAllocator 命令分配器"></a>ID3D12CommandAllocator 命令分配器</h3><ul>
<li>创建命令分配器来存放命令。</li>
</ul>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="built_in">ThrowIfFailed</span>(device-&gt;<span class="built_in">CreateCommandAllocator</span>(D3D12_COMMAND_LIST_TYPE_DIRECT, <span class="built_in">IID_PPV_ARGS</span>(&amp;commandAllocator)));</span><br></pre></td></tr></table></figure>

<h3 id="LoadPipeline方法完整代码"><a href="#LoadPipeline方法完整代码" class="headerlink" title="LoadPipeline方法完整代码"></a>LoadPipeline方法完整代码</h3><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="type">void</span> <span class="title">LoadPipeline</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">if</span> defined(_DEBUG)</span></span><br><span class="line">	&#123;</span><br><span class="line">		ComPtr&lt;ID3D12Debug&gt; debugController;</span><br><span class="line">		<span class="keyword">if</span> (<span class="built_in">SUCCEEDED</span>(<span class="built_in">D3D12GetDebugInterface</span>(<span class="built_in">IID_PPV_ARGS</span>(&amp;debugController))))</span><br><span class="line">		&#123;</span><br><span class="line">			debugController-&gt;<span class="built_in">EnableDebugLayer</span>();</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line"><span class="meta">#<span class="keyword">endif</span> </span></span><br><span class="line"></span><br><span class="line">	ComPtr&lt;IDXGIFactory4&gt; mDxgiFactory;</span><br><span class="line">	<span class="built_in">ThrowIfFailed</span>(<span class="built_in">CreateDXGIFactory1</span>(<span class="built_in">IID_PPV_ARGS</span>(mDxgiFactory.<span class="built_in">GetAddressOf</span>())));</span><br><span class="line"></span><br><span class="line">	D3D_FEATURE_LEVEL featureLevels[] =</span><br><span class="line">	&#123;</span><br><span class="line">		D3D_FEATURE_LEVEL_12_1,</span><br><span class="line">		D3D_FEATURE_LEVEL_12_0,</span><br><span class="line">		D3D_FEATURE_LEVEL_11_1,</span><br><span class="line">		D3D_FEATURE_LEVEL_11_0,</span><br><span class="line">	&#125;;</span><br><span class="line"></span><br><span class="line">	IDXGIAdapter1* adapter = <span class="literal">nullptr</span>;</span><br><span class="line">	<span class="keyword">for</span> (std::<span class="type">uint32_t</span> i = <span class="number">0U</span>; i &lt; _countof(featureLevels); ++i)</span><br><span class="line">	&#123;</span><br><span class="line">		adapter = <span class="built_in">GetSupportedAdapter</span>(mDxgiFactory, featureLevels[i]);</span><br><span class="line">		<span class="keyword">if</span> (adapter != <span class="literal">nullptr</span>) </span><br><span class="line">		&#123;</span><br><span class="line">			<span class="keyword">break</span>;</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">if</span> (adapter != <span class="literal">nullptr</span>)</span><br><span class="line">	&#123;</span><br><span class="line">		<span class="built_in">D3D12CreateDevice</span>(adapter,D3D_FEATURE_LEVEL_12_1,<span class="built_in">IID_PPV_ARGS</span>(device.<span class="built_in">GetAddressOf</span>()));</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	D3D12_COMMAND_QUEUE_DESC queueDesc = &#123;&#125;;</span><br><span class="line">	queueDesc.Flags = D3D12_COMMAND_QUEUE_FLAG_NONE;</span><br><span class="line">	queueDesc.Type = D3D12_COMMAND_LIST_TYPE_DIRECT;</span><br><span class="line"></span><br><span class="line">	<span class="built_in">ThrowIfFailed</span>(device-&gt;<span class="built_in">CreateCommandQueue</span>(&amp;queueDesc, <span class="built_in">IID_PPV_ARGS</span>(&amp;commandQueue)));</span><br><span class="line"></span><br><span class="line">	DXGI_SWAP_CHAIN_DESC1 swapChainDesc = &#123;&#125;;</span><br><span class="line">	swapChainDesc.BufferCount = FrameCount;</span><br><span class="line">	swapChainDesc.Width = width;</span><br><span class="line">	swapChainDesc.Height = height;</span><br><span class="line">	swapChainDesc.Format = DXGI_FORMAT_R8G8B8A8_UNORM;</span><br><span class="line">	swapChainDesc.BufferUsage = DXGI_USAGE_RENDER_TARGET_OUTPUT;</span><br><span class="line">	swapChainDesc.SwapEffect = DXGI_SWAP_EFFECT_FLIP_DISCARD;</span><br><span class="line">	swapChainDesc.SampleDesc.Count = <span class="number">1</span>;</span><br><span class="line"></span><br><span class="line">	ComPtr&lt;IDXGISwapChain1&gt; swapChain1;</span><br><span class="line">	<span class="built_in">ThrowIfFailed</span>(mDxgiFactory-&gt;<span class="built_in">CreateSwapChainForHwnd</span>(</span><br><span class="line">		commandQueue.<span class="built_in">Get</span>(),  </span><br><span class="line">		hwnd,</span><br><span class="line">		&amp;swapChainDesc,</span><br><span class="line">		<span class="literal">nullptr</span>,</span><br><span class="line">		<span class="literal">nullptr</span>,</span><br><span class="line">		&amp;swapChain1</span><br><span class="line">	));</span><br><span class="line"></span><br><span class="line">	<span class="built_in">ThrowIfFailed</span>(swapChain1.<span class="built_in">As</span>(&amp;swapChain));</span><br><span class="line">	frameIndex = swapChain-&gt;<span class="built_in">GetCurrentBackBufferIndex</span>();</span><br><span class="line"></span><br><span class="line">	&#123;</span><br><span class="line">		D3D12_DESCRIPTOR_HEAP_DESC rtvHeapDesc = &#123;&#125;;</span><br><span class="line">		rtvHeapDesc.NumDescriptors = FrameCount;</span><br><span class="line">		rtvHeapDesc.Type = D3D12_DESCRIPTOR_HEAP_TYPE_RTV;</span><br><span class="line">		rtvHeapDesc.Flags = D3D12_DESCRIPTOR_HEAP_FLAG_NONE;</span><br><span class="line">		<span class="built_in">ThrowIfFailed</span>(device-&gt;<span class="built_in">CreateDescriptorHeap</span>(&amp;rtvHeapDesc, <span class="built_in">IID_PPV_ARGS</span>(&amp;rtvHeap)));</span><br><span class="line"></span><br><span class="line">		rtvDescriptorSize = device-&gt;<span class="built_in">GetDescriptorHandleIncrementSize</span>(D3D12_DESCRIPTOR_HEAP_TYPE_RTV);</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="function">CD3DX12_CPU_DESCRIPTOR_HANDLE <span class="title">rtvHandle</span><span class="params">(rtvHeap-&gt;GetCPUDescriptorHandleForHeapStart())</span></span>;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">for</span> (UINT n = <span class="number">0</span>; n &lt; FrameCount; n++)</span><br><span class="line">	&#123;</span><br><span class="line">		<span class="built_in">ThrowIfFailed</span>(swapChain-&gt;<span class="built_in">GetBuffer</span>(n, <span class="built_in">IID_PPV_ARGS</span>(&amp;renderTargets[n])));</span><br><span class="line">		device-&gt;<span class="built_in">CreateRenderTargetView</span>(renderTargets[n].<span class="built_in">Get</span>(), <span class="literal">nullptr</span>, rtvHandle);</span><br><span class="line">		rtvHandle.<span class="built_in">Offset</span>(<span class="number">1</span>, rtvDescriptorSize);</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="built_in">ThrowIfFailed</span>(device-&gt;<span class="built_in">CreateCommandAllocator</span>(D3D12_COMMAND_LIST_TYPE_DIRECT, <span class="built_in">IID_PPV_ARGS</span>(&amp;commandAllocator)));</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="加载资源对象"><a href="#加载资源对象" class="headerlink" title="加载资源对象"></a>加载资源对象</h2><ul>
<li><p>新建LoadAsset(),下面在这个函数中加载咱们需要的资源</p>
</li>
<li><p>因为咱们现在只是初始化DX而已，并不需要什么资源，所以此方法内容比较简单。</p>
</li>
<li><p>首先前面创建的命令列表在记录命令前得先关闭，然后创建了CPU和GPU同步的Fence。</p>
</li>
<li><p>&#96;&#96;&#96;cpp<br>void LoadAsset()<br>{<br>ThrowIfFailed(device-&gt;CreateCommandList(0, D3D12_COMMAND_LIST_TYPE_DIRECT, commandAllocator.Get(), nullptr, IID_PPV_ARGS(&amp;commandList)));<br><br>ThrowIfFailed(commandList-&gt;Close());&#x2F;&#x2F;关闭命令队列<br><br>{<br>    ThrowIfFailed(device-&gt;CreateFence(0, D3D12_FENCE_FLAG_NONE, IID_PPV_ARGS(&amp;fence)));<br>    fenceValue &#x3D; 1;<br><br>    fenceEvent &#x3D; CreateEvent(nullptr, FALSE, FALSE, nullptr);<br>    if (fenceEvent &#x3D;&#x3D; nullptr)<br>    {<br>        ThrowIfFailed(HRESULT_FROM_WIN32(GetLastError()));<br>    }<br>}<br>}</p>
<figure class="highlight reasonml"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line">## 添加命令<span class="operator"></span></span><br><span class="line"><span class="operator"></span></span><br><span class="line"><span class="operator">* </span>创建一个新的方法<span class="constructor">`PopulateCommandList()</span>`来记录命令，这里执行了一个最简单操作`ClearRenderTargetView`。</span><br><span class="line"></span><br><span class="line">```cpp</span><br><span class="line">void <span class="constructor">PopulateCommandList()</span></span><br><span class="line">&#123;</span><br><span class="line">	<span class="constructor">ThrowIfFailed(<span class="params">commandAllocator</span>-&gt;Reset()</span>);</span><br><span class="line">	<span class="constructor">ThrowIfFailed(<span class="params">commandList</span>-&gt;Reset(<span class="params">commandAllocator</span>.Get()</span>, pipelineState.<span class="constructor">Get()</span>));</span><br><span class="line"></span><br><span class="line">	D3D12_RESOURCE_BARRIER resBarrier = CD3DX12_RESOURCE_BARRIER::<span class="constructor">Transition(<span class="params">renderTargets</span>[<span class="params">frameIndex</span>].Get()</span>, D3D12_RESOURCE_STATE_PRESENT, D3D12_RESOURCE_STATE_RENDER_TARGET);</span><br><span class="line">	commandList-&gt;<span class="constructor">ResourceBarrier(1, &amp;<span class="params">resBarrier</span>)</span>;</span><br><span class="line"></span><br><span class="line">	CD3DX12_CPU_DESCRIPTOR_HANDLE rtv<span class="constructor">Handle(<span class="params">rtvHeap</span>-&gt;GetCPUDescriptorHandleForHeapStart()</span>, frameIndex, rtvDescriptorSize);</span><br><span class="line"></span><br><span class="line">	const <span class="built_in">float</span> clearColor<span class="literal">[]</span> = &#123; <span class="number">0.0</span>f, <span class="number">0.2</span>f, <span class="number">0.4</span>f, <span class="number">1.0</span>f &#125;;</span><br><span class="line">	commandList-&gt;<span class="constructor">ClearRenderTargetView(<span class="params">rtvHandle</span>, <span class="params">clearColor</span>, 0, <span class="params">nullptr</span>)</span>;</span><br><span class="line"></span><br><span class="line">	resBarrier = CD3DX12_RESOURCE_BARRIER::<span class="constructor">Transition(<span class="params">renderTargets</span>[<span class="params">frameIndex</span>].Get()</span>, D3D12_RESOURCE_STATE_RENDER_TARGET, D3D12_RESOURCE_STATE_PRESENT);</span><br><span class="line">	commandList-&gt;<span class="constructor">ResourceBarrier(1, &amp;<span class="params">resBarrier</span>)</span>;</span><br><span class="line"></span><br><span class="line">	<span class="constructor">ThrowIfFailed(<span class="params">commandList</span>-&gt;Close()</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li>
</ul>
<h2 id="同步"><a href="#同步" class="headerlink" title="同步"></a>同步</h2><ul>
<li>创建一个新的方法WaitForPreviousFrame()来进行同步。</li>
</ul>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="type">void</span> <span class="title">WaitForPreviousFrame</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	<span class="type">const</span> UINT64 tempFenceValue = fenceValue;</span><br><span class="line">	<span class="built_in">ThrowIfFailed</span>(commandQueue-&gt;<span class="built_in">Signal</span>(fence.<span class="built_in">Get</span>(), tempFenceValue));</span><br><span class="line">	fenceValue++;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">if</span> (fence-&gt;<span class="built_in">GetCompletedValue</span>() &lt; tempFenceValue)</span><br><span class="line">	&#123;</span><br><span class="line">		<span class="built_in">ThrowIfFailed</span>(fence-&gt;<span class="built_in">SetEventOnCompletion</span>(tempFenceValue, fenceEvent));</span><br><span class="line">		<span class="built_in">WaitForSingleObject</span>(fenceEvent, INFINITE);</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	frameIndex = swapChain-&gt;<span class="built_in">GetCurrentBackBufferIndex</span>();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="渲染"><a href="#渲染" class="headerlink" title="渲染"></a>渲染</h2><ul>
<li><p>创建一个新的方法<code>OnRender()</code>来渲染。</p>
</li>
<li><p>&#96;&#96;&#96;cpp<br>void OnRender()<br>{<br>PopulateCommandList();<br><br>ID3D12CommandList* ppCommandLists[] &#x3D; { commandList.Get() };<br>commandQueue-&gt;ExecuteCommandLists(_countof(ppCommandLists), ppCommandLists);<br><br>ThrowIfFailed(swapChain-&gt;Present(1, 0));<br><br>WaitForPreviousFrame();<br>}</p>
<figure class="highlight scss"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line">## 清理</span><br><span class="line"></span><br><span class="line">* 创建一个新的方法<span class="built_in">OnDestroy</span>()来清理。</span><br><span class="line"></span><br><span class="line">```cpp</span><br><span class="line">void <span class="built_in">OnDestroy</span>()</span><br><span class="line">&#123;</span><br><span class="line">	<span class="built_in">WaitForPreviousFrame</span>();</span><br><span class="line"></span><br><span class="line">	<span class="built_in">CloseHandle</span>(fenceEvent);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li>
</ul>
<h2 id="渲染-1"><a href="#渲染-1" class="headerlink" title="渲染"></a>渲染</h2><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="type">void</span> <span class="title">OnRender</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	<span class="built_in">PopulateCommandList</span>();</span><br><span class="line"></span><br><span class="line">	ID3D12CommandList* ppCommandLists[] = &#123; commandList.<span class="built_in">Get</span>() &#125;;</span><br><span class="line">	commandQueue-&gt;<span class="built_in">ExecuteCommandLists</span>(_countof(ppCommandLists), ppCommandLists);</span><br><span class="line"></span><br><span class="line">	<span class="built_in">ThrowIfFailed</span>(swapChain-&gt;<span class="built_in">Present</span>(<span class="number">1</span>, <span class="number">0</span>));</span><br><span class="line"></span><br><span class="line">	<span class="built_in">WaitForPreviousFrame</span>();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="WindowProc"><a href="#WindowProc" class="headerlink" title="WindowProc"></a>WindowProc</h2><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="function">LRESULT CALLBACK <span class="title">WindowProc</span><span class="params">(HWND hWnd, UINT message, WPARAM wParam, LPARAM lParam)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	<span class="keyword">switch</span> (message)</span><br><span class="line">	&#123;</span><br><span class="line">	<span class="keyword">case</span> WM_PAINT:</span><br><span class="line">		<span class="built_in">OnRender</span>();</span><br><span class="line">		<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">case</span> WM_DESTROY:</span><br><span class="line">		<span class="built_in">PostQuitMessage</span>(<span class="number">0</span>);</span><br><span class="line">		<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">return</span> <span class="built_in">DefWindowProc</span>(hWnd, message, wParam, lParam);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="Main函数也要修改"><a href="#Main函数也要修改" class="headerlink" title="Main函数也要修改"></a>Main函数也要修改</h2><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="type">int</span> CALLBACK <span class="title">WinMain</span><span class="params">(_In_ HINSTANCE hInstance, _In_opt_ HINSTANCE hPrevInstance, _In_ LPSTR lpCmdLine, _In_ <span class="type">int</span> nShowCmd)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	WNDCLASSEX windowClass = &#123; <span class="number">0</span> &#125;;</span><br><span class="line">	windowClass.cbSize = <span class="built_in">sizeof</span>(WNDCLASSEX);</span><br><span class="line">	windowClass.style = CS_HREDRAW | CS_VREDRAW;</span><br><span class="line">	windowClass.lpfnWndProc = WindowProc;</span><br><span class="line">	windowClass.hInstance = hInstance;</span><br><span class="line">	windowClass.hCursor = <span class="built_in">LoadCursor</span>(<span class="literal">NULL</span>, IDC_ARROW);</span><br><span class="line">	windowClass.lpszClassName = <span class="string">L&quot;YSHRenderClass&quot;</span>;</span><br><span class="line"></span><br><span class="line">	<span class="built_in">RegisterClassEx</span>(&amp;windowClass);</span><br><span class="line"></span><br><span class="line">	hwnd = <span class="built_in">CreateWindow</span>(</span><br><span class="line">		windowClass.lpszClassName,</span><br><span class="line">		<span class="string">L&quot;YSHRender&quot;</span>,</span><br><span class="line">		WS_OVERLAPPEDWINDOW,</span><br><span class="line">		CW_USEDEFAULT,</span><br><span class="line">		CW_USEDEFAULT,</span><br><span class="line">		width,</span><br><span class="line">		height,</span><br><span class="line">		<span class="literal">nullptr</span>,</span><br><span class="line">		<span class="literal">nullptr</span>,</span><br><span class="line">		hInstance,</span><br><span class="line">		<span class="literal">nullptr</span>);</span><br><span class="line"></span><br><span class="line">	<span class="built_in">LoadPipeline</span>();</span><br><span class="line">	<span class="built_in">LoadAsset</span>();</span><br><span class="line"></span><br><span class="line">	<span class="built_in">ShowWindow</span>(hwnd, SW_SHOW);</span><br><span class="line"></span><br><span class="line">	MSG msg = &#123;&#125;;</span><br><span class="line">	<span class="keyword">while</span> (msg.message != WM_QUIT)</span><br><span class="line">	&#123;</span><br><span class="line">		<span class="keyword">if</span> (<span class="built_in">PeekMessage</span>(&amp;msg, <span class="literal">NULL</span>, <span class="number">0</span>, <span class="number">0</span>, PM_REMOVE))</span><br><span class="line">		&#123;</span><br><span class="line">			<span class="built_in">TranslateMessage</span>(&amp;msg);</span><br><span class="line">			<span class="built_in">DispatchMessage</span>(&amp;msg);</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="built_in">OnDestroy</span>();</span><br><span class="line"></span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h1 id="四-背景颜色更新"><a href="#四-背景颜色更新" class="headerlink" title="四 背景颜色更新"></a>四 背景颜色更新</h1><h2 id="全局变量-RGB颜色"><a href="#全局变量-RGB颜色" class="headerlink" title="全局变量:RGB颜色"></a>全局变量:RGB颜色</h2><figure class="highlight angelscript"><table><tr><td class="code"><pre><span class="line"><span class="comment">//RGB颜色</span></span><br><span class="line"><span class="built_in">float</span> color[<span class="number">4</span>];</span><br><span class="line"><span class="built_in">bool</span> isRAdd = <span class="literal">true</span>;</span><br><span class="line"><span class="built_in">bool</span> isGAdd = <span class="literal">true</span>;</span><br><span class="line"><span class="built_in">bool</span> isBAdd = <span class="literal">true</span>;</span><br></pre></td></tr></table></figure>

<h2 id="清屏颜色设置"><a href="#清屏颜色设置" class="headerlink" title="清屏颜色设置"></a>清屏颜色设置</h2><ul>
<li><p>我们需要将添加命令函数<code>PopulateCommandList()</code>里的<code>clearColor</code>修改为全局变量</p>
<figure class="highlight processing"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> <span class="type">float</span> clearColor[] = &#123; <span class="type">color</span>[<span class="number">0</span>], <span class="type">color</span>[<span class="number">1</span>], <span class="type">color</span>[<span class="number">2</span>], <span class="type">color</span>[<span class="number">3</span>] &#125;;</span><br></pre></td></tr></table></figure></li>
</ul>
<h2 id="添加Update函数"><a href="#添加Update函数" class="headerlink" title="添加Update函数"></a>添加Update函数</h2><ul>
<li>该功能实现窗口颜色的变化</li>
</ul>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="type">void</span> <span class="title">OnUpdate</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">if</span> (color[<span class="number">0</span>] &lt;= <span class="number">1.0f</span> &amp;&amp; isRAdd)</span><br><span class="line">	&#123;</span><br><span class="line">		color[<span class="number">0</span>] += <span class="number">0.001f</span>;</span><br><span class="line">		isRAdd = <span class="literal">true</span>;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">else</span></span><br><span class="line">	&#123;</span><br><span class="line">		color[<span class="number">0</span>] -= <span class="number">0.002f</span>;</span><br><span class="line">		color[<span class="number">0</span>] &lt;= <span class="number">0</span> ? isRAdd = <span class="literal">true</span> : isRAdd = <span class="literal">false</span>;</span><br><span class="line">		</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">if</span> (color[<span class="number">1</span>] &lt;= <span class="number">1.0f</span> &amp;&amp; isGAdd)</span><br><span class="line">	&#123;</span><br><span class="line">		color[<span class="number">1</span>] += <span class="number">0.002f</span>;</span><br><span class="line">		isGAdd = <span class="literal">true</span>;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">else</span></span><br><span class="line">	&#123;</span><br><span class="line">		color[<span class="number">1</span>] -= <span class="number">0.001f</span>;</span><br><span class="line">		color[<span class="number">1</span>] &lt;= <span class="number">0</span> ? isGAdd = <span class="literal">true</span> : isGAdd = <span class="literal">false</span>;</span><br><span class="line"></span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">if</span> (color[<span class="number">2</span>] &lt;= <span class="number">1.0f</span> &amp;&amp; isBAdd)</span><br><span class="line">	&#123;</span><br><span class="line">		color[<span class="number">2</span>] += <span class="number">0.001f</span>;</span><br><span class="line">		isBAdd = <span class="literal">true</span>;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">else</span></span><br><span class="line">	&#123;</span><br><span class="line">		color[<span class="number">2</span>] -= <span class="number">0.001f</span>;</span><br><span class="line">		color[<span class="number">2</span>] &lt;= <span class="number">0</span> ? isBAdd = <span class="literal">true</span> : isBAdd = <span class="literal">false</span>;</span><br><span class="line"></span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	color[<span class="number">3</span>] = <span class="number">1.0f</span>;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="窗口"><a href="#窗口" class="headerlink" title="窗口"></a>窗口</h2><ul>
<li>我们需要执行我们刚才新增的<code>OnUpdate()</code>函数</li>
</ul>
<blockquote>
<p>最后，我们就可以得到一个窗口不断变化背景颜色的程序了</p>
</blockquote>
<h1 id="五-绘制三角形"><a href="#五-绘制三角形" class="headerlink" title="五 绘制三角形"></a>五 绘制三角形</h1><h2 id="修改LoadAsset方法"><a href="#修改LoadAsset方法" class="headerlink" title="修改LoadAsset方法"></a>修改<code>LoadAsset</code>方法</h2><ul>
<li>只需要修改一下<code>LoadAsset</code>方法</li>
</ul>
<h2 id="根签名-ID3D12RootSignature"><a href="#根签名-ID3D12RootSignature" class="headerlink" title="根签名 ID3D12RootSignature"></a>根签名 ID3D12RootSignature</h2><h3 id="什么是根签名？"><a href="#什么是根签名？" class="headerlink" title="什么是根签名？"></a>什么是根签名？</h3><p>根签名由应用配置，并将命令列表链接到着色器所需的资源。 图形命令列表同时具有图形和计算根签名。 计算命令列表只具有一个计算根签名。 这些根签名彼此独立。</p>
<p>详细请看<a href="https://learn.microsoft.com/zh-cn/windows/win32/direct3d12/root-signatures">根签名 - Win32 apps | Microsoft Learn</a></p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line">&#123;</span><br><span class="line">		CD3DX12_ROOT_SIGNATURE_DESC rootSignatureDesc;</span><br><span class="line">		rootSignatureDesc.<span class="built_in">Init</span>(<span class="number">0</span>, <span class="literal">nullptr</span>, <span class="number">0</span>, <span class="literal">nullptr</span>, D3D12_ROOT_SIGNATURE_FLAG_ALLOW_INPUT_ASSEMBLER_INPUT_LAYOUT);</span><br><span class="line"></span><br><span class="line">		ComPtr&lt;ID3DBlob&gt; signature;</span><br><span class="line">		ComPtr&lt;ID3DBlob&gt; error;</span><br><span class="line">		<span class="built_in">ThrowIfFailed</span>(<span class="built_in">D3D12SerializeRootSignature</span>(&amp;rootSignatureDesc, D3D_ROOT_SIGNATURE_VERSION_1, &amp;signature, &amp;error));</span><br><span class="line">		<span class="built_in">ThrowIfFailed</span>(device-&gt;<span class="built_in">CreateRootSignature</span>(<span class="number">0</span>, signature-&gt;<span class="built_in">GetBufferPointer</span>(), signature-&gt;<span class="built_in">GetBufferSize</span>(), <span class="built_in">IID_PPV_ARGS</span>(&amp;rootSignature)));</span><br><span class="line">	&#125;</span><br></pre></td></tr></table></figure>

<h2 id="第一个着色器"><a href="#第一个着色器" class="headerlink" title="第一个着色器"></a>第一个着色器</h2><h3 id="引入新的头文件（d3dcompiler-h）和库（d3dcompiler-lib）。"><a href="#引入新的头文件（d3dcompiler-h）和库（d3dcompiler-lib）。" class="headerlink" title="引入新的头文件（d3dcompiler.h）和库（d3dcompiler.lib）。"></a>引入新的头文件（d3dcompiler.h）和库（d3dcompiler.lib）。</h3><h3 id="第一个shader"><a href="#第一个shader" class="headerlink" title="第一个shader"></a>第一个shader</h3><ul>
<li>新建一个<strong>Assets文件夹</strong>存放着色器文件，然后新建一个**<code>shaders.hlsl</code>**文件。</li>
</ul>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line">     ComPtr&lt;ID3DBlob&gt; vertexShader;</span><br><span class="line">        ComPtr&lt;ID3DBlob&gt; pixelShader;</span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">if</span> defined(_DEBUG)</span></span><br><span class="line">        <span class="comment">// Enable better shader debugging with the graphics debugging tools.</span></span><br><span class="line">        UINT compileFlags = D3DCOMPILE_DEBUG | D3DCOMPILE_SKIP_OPTIMIZATION;</span><br><span class="line"><span class="meta">#<span class="keyword">else</span></span></span><br><span class="line">        UINT compileFlags = <span class="number">0</span>;</span><br><span class="line"><span class="meta">#<span class="keyword">endif</span></span></span><br><span class="line"></span><br><span class="line">        <span class="built_in">ThrowIfFailed</span>(<span class="built_in">D3DCompileFromFile</span>(<span class="built_in">GetAssetFullPath</span>(<span class="string">L&quot;shaders.hlsl&quot;</span>).<span class="built_in">c_str</span>(), <span class="literal">nullptr</span>, <span class="literal">nullptr</span>, <span class="string">&quot;VSMain&quot;</span>, <span class="string">&quot;vs_5_0&quot;</span>, compileFlags, <span class="number">0</span>, &amp;vertexShader, <span class="literal">nullptr</span>));</span><br><span class="line">        <span class="built_in">ThrowIfFailed</span>(<span class="built_in">D3DCompileFromFile</span>(<span class="built_in">GetAssetFullPath</span>(<span class="string">L&quot;shaders.hlsl&quot;</span>).<span class="built_in">c_str</span>(), <span class="literal">nullptr</span>, <span class="literal">nullptr</span>, <span class="string">&quot;PSMain&quot;</span>, <span class="string">&quot;ps_5_0&quot;</span>, compileFlags, <span class="number">0</span>, &amp;pixelShader, <span class="literal">nullptr</span>));</span><br></pre></td></tr></table></figure>

<h4 id="shaders-hlsl"><a href="#shaders-hlsl" class="headerlink" title="shaders.hlsl"></a><strong><code>shaders.hlsl</code></strong></h4><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="keyword">struct</span> <span class="title class_">PSInput</span></span><br><span class="line">&#123;</span><br><span class="line">    float4 position : SV_POSITION;</span><br><span class="line">    float4 color : COLOR;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="function">PSInput <span class="title">VSMain</span><span class="params">(float4 position : POSITION, float4 color : COLOR)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    PSInput result;</span><br><span class="line"></span><br><span class="line">    result.position = position;</span><br><span class="line">    result.color = color;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> result;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function">float4 <span class="title">PSMain</span><span class="params">(PSInput input)</span> : SV_TARGET</span></span><br><span class="line"><span class="function">&#123;</span></span><br><span class="line">    <span class="keyword">return</span> input.color;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="创建管线状态对象-ID3D12PipelineState"><a href="#创建管线状态对象-ID3D12PipelineState" class="headerlink" title="创建管线状态对象 ID3D12PipelineState"></a>创建管线状态对象 ID3D12PipelineState</h2><h3 id="是什么"><a href="#是什么" class="headerlink" title="是什么"></a>是什么</h3><ul>
<li>表示当前设置的所有着色器和某些固定函数状态对象的状态</li>
</ul>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line">D3D12_INPUT_ELEMENT_DESC inputElementDescs[] =</span><br><span class="line">		&#123;</span><br><span class="line">			&#123; <span class="string">&quot;POSITION&quot;</span>, <span class="number">0</span>, DXGI_FORMAT_R32G32B32_FLOAT, <span class="number">0</span>, <span class="number">0</span>, D3D12_INPUT_CLASSIFICATION_PER_VERTEX_DATA, <span class="number">0</span> &#125;,</span><br><span class="line">			&#123; <span class="string">&quot;COLOR&quot;</span>, <span class="number">0</span>, DXGI_FORMAT_R32G32B32A32_FLOAT, <span class="number">0</span>, <span class="number">12</span>, D3D12_INPUT_CLASSIFICATION_PER_VERTEX_DATA, <span class="number">0</span> &#125;</span><br><span class="line">		&#125;;</span><br><span class="line"></span><br><span class="line">		D3D12_GRAPHICS_PIPELINE_STATE_DESC psoDesc = &#123;&#125;;</span><br><span class="line">		psoDesc.InputLayout = &#123; inputElementDescs, _countof(inputElementDescs) &#125;;</span><br><span class="line">		psoDesc.pRootSignature = rootSignature.<span class="built_in">Get</span>();</span><br><span class="line">		psoDesc.VS = <span class="built_in">CD3DX12_SHADER_BYTECODE</span>(vertexShader.<span class="built_in">Get</span>());</span><br><span class="line">		psoDesc.PS = <span class="built_in">CD3DX12_SHADER_BYTECODE</span>(pixelShader.<span class="built_in">Get</span>());</span><br><span class="line">		psoDesc.RasterizerState = <span class="built_in">CD3DX12_RASTERIZER_DESC</span>(D3D12_DEFAULT);</span><br><span class="line">		psoDesc.BlendState = <span class="built_in">CD3DX12_BLEND_DESC</span>(D3D12_DEFAULT);</span><br><span class="line">		psoDesc.DepthStencilState.DepthEnable = FALSE;</span><br><span class="line">		psoDesc.DepthStencilState.StencilEnable = FALSE;</span><br><span class="line">		psoDesc.SampleMask = UINT_MAX;</span><br><span class="line">		psoDesc.PrimitiveTopologyType = D3D12_PRIMITIVE_TOPOLOGY_TYPE_TRIANGLE;</span><br><span class="line">		psoDesc.NumRenderTargets = <span class="number">1</span>;</span><br><span class="line">		psoDesc.RTVFormats[<span class="number">0</span>] = DXGI_FORMAT_R8G8B8A8_UNORM;</span><br><span class="line">		psoDesc.SampleDesc.Count = <span class="number">1</span>;</span><br><span class="line">		<span class="built_in">ThrowIfFailed</span>(device-&gt;<span class="built_in">CreateGraphicsPipelineState</span>(&amp;psoDesc, <span class="built_in">IID_PPV_ARGS</span>(&amp;pipelineState)));</span><br></pre></td></tr></table></figure>

<h2 id="顶点缓存和顶点缓存视图"><a href="#顶点缓存和顶点缓存视图" class="headerlink" title="顶点缓存和顶点缓存视图"></a>顶点缓存和顶点缓存视图</h2><ul>
<li><p>咱们需要定义一个顶点结构体，这个结构体包含每个顶点的各种属性，暂时就包含位置和颜色2个属性。这里需要把DX的数学库（<code>DirectXMath.h</code>）包含一下</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="keyword">struct</span> <span class="title class_">Vertex</span></span><br><span class="line">&#123;</span><br><span class="line">	XMFLOAT3 position;</span><br><span class="line">	XMFLOAT4 color;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>
</li>
<li><p>然后创建顶点缓存和顶点缓存视图</p>
</li>
</ul>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line">Vertex triangleVertices[] =</span><br><span class="line">		&#123;</span><br><span class="line">			&#123; &#123; <span class="number">0.0f</span>, <span class="number">0.5f</span>, <span class="number">0.0f</span> &#125;, &#123; <span class="number">1.0f</span>, <span class="number">0.0f</span>, <span class="number">0.0f</span>, <span class="number">1.0f</span> &#125; &#125;,</span><br><span class="line">			&#123; &#123; <span class="number">0.5f</span>, <span class="number">-0.5f</span>, <span class="number">0.0f</span> &#125;, &#123; <span class="number">0.0f</span>, <span class="number">1.0f</span>, <span class="number">0.0f</span>, <span class="number">1.0f</span> &#125; &#125;,</span><br><span class="line">			&#123; &#123; <span class="number">-0.5f</span>, <span class="number">-0.5f</span>, <span class="number">0.0f</span> &#125;, &#123; <span class="number">0.0f</span>, <span class="number">0.0f</span>, <span class="number">1.0f</span>, <span class="number">1.0f</span> &#125; &#125;</span><br><span class="line">		&#125;;</span><br><span class="line"></span><br><span class="line">		<span class="type">const</span> UINT vertexBufferSize = <span class="built_in">sizeof</span>(triangleVertices);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">		CD3DX12_HEAP_PROPERTIES heapProperties = <span class="built_in">CD3DX12_HEAP_PROPERTIES</span>(D3D12_HEAP_TYPE_UPLOAD);</span><br><span class="line">		CD3DX12_RESOURCE_DESC resourceDes = CD3DX12_RESOURCE_DESC::<span class="built_in">Buffer</span>(vertexBufferSize);</span><br><span class="line">		<span class="built_in">ThrowIfFailed</span>(device-&gt;<span class="built_in">CreateCommittedResource</span>(</span><br><span class="line">			&amp;heapProperties,</span><br><span class="line">			D3D12_HEAP_FLAG_NONE,</span><br><span class="line">			&amp;resourceDes,</span><br><span class="line">			D3D12_RESOURCE_STATE_GENERIC_READ,</span><br><span class="line">			<span class="literal">nullptr</span>,</span><br><span class="line">			<span class="built_in">IID_PPV_ARGS</span>(&amp;vertexBuffer)));</span><br><span class="line"></span><br><span class="line">		UINT8* pVertexDataBegin;</span><br><span class="line">		<span class="function">CD3DX12_RANGE <span class="title">readRange</span><span class="params">(<span class="number">0</span>, <span class="number">0</span>)</span></span>; </span><br><span class="line">		<span class="built_in">ThrowIfFailed</span>(vertexBuffer-&gt;<span class="built_in">Map</span>(<span class="number">0</span>, &amp;readRange, <span class="built_in">reinterpret_cast</span>&lt;<span class="type">void</span>**&gt;(&amp;pVertexDataBegin)));</span><br><span class="line">		<span class="built_in">memcpy</span>(pVertexDataBegin, triangleVertices, <span class="built_in">sizeof</span>(triangleVertices));</span><br><span class="line">		vertexBuffer-&gt;<span class="built_in">Unmap</span>(<span class="number">0</span>, <span class="literal">nullptr</span>);</span><br><span class="line"></span><br><span class="line">		vertexBufferView.BufferLocation = vertexBuffer-&gt;<span class="built_in">GetGPUVirtualAddress</span>();</span><br><span class="line">		vertexBufferView.StrideInBytes = <span class="built_in">sizeof</span>(Vertex);</span><br><span class="line">		vertexBufferView.SizeInBytes = vertexBufferSize;</span><br></pre></td></tr></table></figure>

<h2 id="LoadAsset方法完整代码"><a href="#LoadAsset方法完整代码" class="headerlink" title="LoadAsset方法完整代码"></a>LoadAsset方法完整代码</h2><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="type">void</span> <span class="title">LoadAsset</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	&#123;</span><br><span class="line">		CD3DX12_ROOT_SIGNATURE_DESC rootSignatureDesc;</span><br><span class="line">		rootSignatureDesc.<span class="built_in">Init</span>(<span class="number">0</span>, <span class="literal">nullptr</span>, <span class="number">0</span>, <span class="literal">nullptr</span>, D3D12_ROOT_SIGNATURE_FLAG_ALLOW_INPUT_ASSEMBLER_INPUT_LAYOUT);</span><br><span class="line"></span><br><span class="line">		ComPtr&lt;ID3DBlob&gt; signature;</span><br><span class="line">		ComPtr&lt;ID3DBlob&gt; error;</span><br><span class="line">		<span class="built_in">ThrowIfFailed</span>(<span class="built_in">D3D12SerializeRootSignature</span>(&amp;rootSignatureDesc, D3D_ROOT_SIGNATURE_VERSION_1, &amp;signature, &amp;error));</span><br><span class="line">		<span class="built_in">ThrowIfFailed</span>(device-&gt;<span class="built_in">CreateRootSignature</span>(<span class="number">0</span>, signature-&gt;<span class="built_in">GetBufferPointer</span>(), signature-&gt;<span class="built_in">GetBufferSize</span>(), <span class="built_in">IID_PPV_ARGS</span>(&amp;rootSignature)));</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	&#123;</span><br><span class="line">		ComPtr&lt;ID3DBlob&gt; vertexShader;</span><br><span class="line">		ComPtr&lt;ID3DBlob&gt; pixelShader;</span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">if</span> defined(_DEBUG)</span></span><br><span class="line">		UINT compileFlags = D3DCOMPILE_DEBUG | D3DCOMPILE_SKIP_OPTIMIZATION;</span><br><span class="line"><span class="meta">#<span class="keyword">else</span></span></span><br><span class="line">		UINT compileFlags = <span class="number">0</span>;</span><br><span class="line"><span class="meta">#<span class="keyword">endif</span></span></span><br><span class="line"></span><br><span class="line">		<span class="built_in">ThrowIfFailed</span>(<span class="built_in">D3DCompileFromFile</span>(std::<span class="built_in">wstring</span>(<span class="string">L&quot;Assets/shaders.hlsl&quot;</span>).<span class="built_in">c_str</span>(), <span class="literal">nullptr</span>, <span class="literal">nullptr</span>, <span class="string">&quot;VSMain&quot;</span>, <span class="string">&quot;vs_5_0&quot;</span>, compileFlags, <span class="number">0</span>, &amp;vertexShader, <span class="literal">nullptr</span>));</span><br><span class="line">		<span class="built_in">ThrowIfFailed</span>(<span class="built_in">D3DCompileFromFile</span>(std::<span class="built_in">wstring</span>(<span class="string">L&quot;Assets/shaders.hlsl&quot;</span>).<span class="built_in">c_str</span>(), <span class="literal">nullptr</span>, <span class="literal">nullptr</span>, <span class="string">&quot;PSMain&quot;</span>, <span class="string">&quot;ps_5_0&quot;</span>, compileFlags, <span class="number">0</span>, &amp;pixelShader, <span class="literal">nullptr</span>));</span><br><span class="line"></span><br><span class="line">		D3D12_INPUT_ELEMENT_DESC inputElementDescs[] =</span><br><span class="line">		&#123;</span><br><span class="line">			&#123; <span class="string">&quot;POSITION&quot;</span>, <span class="number">0</span>, DXGI_FORMAT_R32G32B32_FLOAT, <span class="number">0</span>, <span class="number">0</span>, D3D12_INPUT_CLASSIFICATION_PER_VERTEX_DATA, <span class="number">0</span> &#125;,</span><br><span class="line">			&#123; <span class="string">&quot;COLOR&quot;</span>, <span class="number">0</span>, DXGI_FORMAT_R32G32B32A32_FLOAT, <span class="number">0</span>, <span class="number">12</span>, D3D12_INPUT_CLASSIFICATION_PER_VERTEX_DATA, <span class="number">0</span> &#125;</span><br><span class="line">		&#125;;</span><br><span class="line"></span><br><span class="line">		D3D12_GRAPHICS_PIPELINE_STATE_DESC psoDesc = &#123;&#125;;</span><br><span class="line">		psoDesc.InputLayout = &#123; inputElementDescs, _countof(inputElementDescs) &#125;;</span><br><span class="line">		psoDesc.pRootSignature = rootSignature.<span class="built_in">Get</span>();</span><br><span class="line">		psoDesc.VS = <span class="built_in">CD3DX12_SHADER_BYTECODE</span>(vertexShader.<span class="built_in">Get</span>());</span><br><span class="line">		psoDesc.PS = <span class="built_in">CD3DX12_SHADER_BYTECODE</span>(pixelShader.<span class="built_in">Get</span>());</span><br><span class="line">		psoDesc.RasterizerState = <span class="built_in">CD3DX12_RASTERIZER_DESC</span>(D3D12_DEFAULT);</span><br><span class="line">		psoDesc.BlendState = <span class="built_in">CD3DX12_BLEND_DESC</span>(D3D12_DEFAULT);</span><br><span class="line">		psoDesc.DepthStencilState.DepthEnable = FALSE;</span><br><span class="line">		psoDesc.DepthStencilState.StencilEnable = FALSE;</span><br><span class="line">		psoDesc.SampleMask = UINT_MAX;</span><br><span class="line">		psoDesc.PrimitiveTopologyType = D3D12_PRIMITIVE_TOPOLOGY_TYPE_TRIANGLE;</span><br><span class="line">		psoDesc.NumRenderTargets = <span class="number">1</span>;</span><br><span class="line">		psoDesc.RTVFormats[<span class="number">0</span>] = DXGI_FORMAT_R8G8B8A8_UNORM;</span><br><span class="line">		psoDesc.SampleDesc.Count = <span class="number">1</span>;</span><br><span class="line">		<span class="built_in">ThrowIfFailed</span>(device-&gt;<span class="built_in">CreateGraphicsPipelineState</span>(&amp;psoDesc, <span class="built_in">IID_PPV_ARGS</span>(&amp;pipelineState)));</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="built_in">ThrowIfFailed</span>(device-&gt;<span class="built_in">CreateCommandList</span>(<span class="number">0</span>, D3D12_COMMAND_LIST_TYPE_DIRECT, commandAllocator.<span class="built_in">Get</span>(), pipelineState.<span class="built_in">Get</span>(), <span class="built_in">IID_PPV_ARGS</span>(&amp;commandList)));</span><br><span class="line"></span><br><span class="line">	<span class="built_in">ThrowIfFailed</span>(commandList-&gt;<span class="built_in">Close</span>());</span><br><span class="line"></span><br><span class="line">	&#123;</span><br><span class="line">		Vertex triangleVertices[] =</span><br><span class="line">		&#123;</span><br><span class="line">			&#123; &#123; <span class="number">0.0f</span>, <span class="number">0.5f</span>, <span class="number">0.0f</span> &#125;, &#123; <span class="number">1.0f</span>, <span class="number">0.0f</span>, <span class="number">0.0f</span>, <span class="number">1.0f</span> &#125; &#125;,</span><br><span class="line">			&#123; &#123; <span class="number">0.5f</span>, <span class="number">-0.5f</span>, <span class="number">0.0f</span> &#125;, &#123; <span class="number">0.0f</span>, <span class="number">1.0f</span>, <span class="number">0.0f</span>, <span class="number">1.0f</span> &#125; &#125;,</span><br><span class="line">			&#123; &#123; <span class="number">-0.5f</span>, <span class="number">-0.5f</span>, <span class="number">0.0f</span> &#125;, &#123; <span class="number">0.0f</span>, <span class="number">0.0f</span>, <span class="number">1.0f</span>, <span class="number">1.0f</span> &#125; &#125;</span><br><span class="line">		&#125;;</span><br><span class="line"></span><br><span class="line">		<span class="type">const</span> UINT vertexBufferSize = <span class="built_in">sizeof</span>(triangleVertices);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">		CD3DX12_HEAP_PROPERTIES heapProperties = <span class="built_in">CD3DX12_HEAP_PROPERTIES</span>(D3D12_HEAP_TYPE_UPLOAD);</span><br><span class="line">		CD3DX12_RESOURCE_DESC resourceDes = CD3DX12_RESOURCE_DESC::<span class="built_in">Buffer</span>(vertexBufferSize);</span><br><span class="line">		<span class="built_in">ThrowIfFailed</span>(device-&gt;<span class="built_in">CreateCommittedResource</span>(</span><br><span class="line">			&amp;heapProperties,</span><br><span class="line">			D3D12_HEAP_FLAG_NONE,</span><br><span class="line">			&amp;resourceDes,</span><br><span class="line">			D3D12_RESOURCE_STATE_GENERIC_READ,</span><br><span class="line">			<span class="literal">nullptr</span>,</span><br><span class="line">			<span class="built_in">IID_PPV_ARGS</span>(&amp;vertexBuffer)));</span><br><span class="line"></span><br><span class="line">		UINT8* pVertexDataBegin;</span><br><span class="line">		<span class="function">CD3DX12_RANGE <span class="title">readRange</span><span class="params">(<span class="number">0</span>, <span class="number">0</span>)</span></span>; </span><br><span class="line">		<span class="built_in">ThrowIfFailed</span>(vertexBuffer-&gt;<span class="built_in">Map</span>(<span class="number">0</span>, &amp;readRange, <span class="built_in">reinterpret_cast</span>&lt;<span class="type">void</span>**&gt;(&amp;pVertexDataBegin)));</span><br><span class="line">		<span class="built_in">memcpy</span>(pVertexDataBegin, triangleVertices, <span class="built_in">sizeof</span>(triangleVertices));</span><br><span class="line">		vertexBuffer-&gt;<span class="built_in">Unmap</span>(<span class="number">0</span>, <span class="literal">nullptr</span>);</span><br><span class="line"></span><br><span class="line">		vertexBufferView.BufferLocation = vertexBuffer-&gt;<span class="built_in">GetGPUVirtualAddress</span>();</span><br><span class="line">		vertexBufferView.StrideInBytes = <span class="built_in">sizeof</span>(Vertex);</span><br><span class="line">		vertexBufferView.SizeInBytes = vertexBufferSize;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	&#123;</span><br><span class="line">		<span class="built_in">ThrowIfFailed</span>(device-&gt;<span class="built_in">CreateFence</span>(<span class="number">0</span>, D3D12_FENCE_FLAG_NONE, <span class="built_in">IID_PPV_ARGS</span>(&amp;fence)));</span><br><span class="line">		fenceValue = <span class="number">1</span>;</span><br><span class="line"></span><br><span class="line">		fenceEvent = <span class="built_in">CreateEvent</span>(<span class="literal">nullptr</span>, FALSE, FALSE, <span class="literal">nullptr</span>);</span><br><span class="line">		<span class="keyword">if</span> (fenceEvent == <span class="literal">nullptr</span>)</span><br><span class="line">		&#123;</span><br><span class="line">			<span class="built_in">ThrowIfFailed</span>(<span class="built_in">HRESULT_FROM_WIN32</span>(<span class="built_in">GetLastError</span>()));</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="修改PopulateCommandList方法"><a href="#修改PopulateCommandList方法" class="headerlink" title="修改PopulateCommandList方法"></a>修改<code>PopulateCommandList</code>方法</h2><ul>
<li>使用<code>commandList</code>记录新的命令去绘制三角形。</li>
<li>补充两个东西，一个视口viewport，还有一个裁剪矩形scissorRect</li>
</ul>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="function">CD3DX12_VIEWPORT <span class="title">viewport</span><span class="params">(<span class="number">0.0f</span>,<span class="number">0.0f</span>, width,height)</span></span>;</span><br><span class="line"><span class="function">CD3DX12_RECT <span class="title">scissorRect</span><span class="params">(<span class="number">0</span>, <span class="number">0</span>, width, height)</span></span>;</span><br></pre></td></tr></table></figure>

<ul>
<li>然后在<code>PopulateCommandList</code>方法里面添加几个新的命令。</li>
</ul>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="type">void</span> <span class="title">PopulateCommandList</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	<span class="built_in">ThrowIfFailed</span>(commandAllocator-&gt;<span class="built_in">Reset</span>());</span><br><span class="line">	<span class="built_in">ThrowIfFailed</span>(commandList-&gt;<span class="built_in">Reset</span>(commandAllocator.<span class="built_in">Get</span>(), pipelineState.<span class="built_in">Get</span>()));</span><br><span class="line"></span><br><span class="line">	commandList-&gt;<span class="built_in">SetGraphicsRootSignature</span>(rootSignature.<span class="built_in">Get</span>());</span><br><span class="line">	commandList-&gt;<span class="built_in">RSSetViewports</span>(<span class="number">1</span>, &amp;viewport);</span><br><span class="line">	commandList-&gt;<span class="built_in">RSSetScissorRects</span>(<span class="number">1</span>, &amp;scissorRect);</span><br><span class="line"></span><br><span class="line">	D3D12_RESOURCE_BARRIER resBarrier = CD3DX12_RESOURCE_BARRIER::<span class="built_in">Transition</span>(renderTargets[frameIndex].<span class="built_in">Get</span>(), D3D12_RESOURCE_STATE_PRESENT, D3D12_RESOURCE_STATE_RENDER_TARGET);</span><br><span class="line">	commandList-&gt;<span class="built_in">ResourceBarrier</span>(<span class="number">1</span>, &amp;resBarrier);</span><br><span class="line"></span><br><span class="line">	<span class="function">CD3DX12_CPU_DESCRIPTOR_HANDLE <span class="title">rtvHandle</span><span class="params">(rtvHeap-&gt;GetCPUDescriptorHandleForHeapStart(), frameIndex, rtvDescriptorSize)</span></span>;</span><br><span class="line"></span><br><span class="line">	commandList-&gt;<span class="built_in">OMSetRenderTargets</span>(<span class="number">1</span>, &amp;rtvHandle, FALSE, <span class="literal">nullptr</span>);</span><br><span class="line"></span><br><span class="line">	<span class="type">const</span> <span class="type">float</span> clearColor[] = &#123; color[<span class="number">0</span>], color[<span class="number">1</span>], color[<span class="number">2</span>], <span class="number">1.0f</span> &#125;;</span><br><span class="line">	commandList-&gt;<span class="built_in">ClearRenderTargetView</span>(rtvHandle, clearColor, <span class="number">0</span>, <span class="literal">nullptr</span>);</span><br><span class="line">	commandList-&gt;<span class="built_in">IASetPrimitiveTopology</span>(D3D_PRIMITIVE_TOPOLOGY_TRIANGLELIST);</span><br><span class="line">	commandList-&gt;<span class="built_in">IASetVertexBuffers</span>(<span class="number">0</span>, <span class="number">1</span>, &amp;vertexBufferView);</span><br><span class="line">	commandList-&gt;<span class="built_in">DrawInstanced</span>(<span class="number">3</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">0</span>);</span><br><span class="line"></span><br><span class="line">	resBarrier = CD3DX12_RESOURCE_BARRIER::<span class="built_in">Transition</span>(renderTargets[frameIndex].<span class="built_in">Get</span>(), D3D12_RESOURCE_STATE_RENDER_TARGET, D3D12_RESOURCE_STATE_PRESENT);</span><br><span class="line">	commandList-&gt;<span class="built_in">ResourceBarrier</span>(<span class="number">1</span>, &amp;resBarrier);</span><br><span class="line"></span><br><span class="line">	<span class="built_in">ThrowIfFailed</span>(commandList-&gt;<span class="built_in">Close</span>());</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="效果图"><a href="#效果图" class="headerlink" title="效果图"></a>效果图</h2><p><img data-src="https://cdn.jsdelivr.net/gh/JcMarical/mapstorage/images/image-20230719150935918.png" alt="image-20230719150935918"></p>
<h1 id="六-绘制四边形"><a href="#六-绘制四边形" class="headerlink" title="六 绘制四边形"></a>六 绘制四边形</h1><h2 id="索引缓冲区"><a href="#索引缓冲区" class="headerlink" title="索引缓冲区"></a>索引缓冲区</h2><ul>
<li>索引缓冲区是索引列表。每个索引代表一个顶点。每 3 个索引代表一个三角形。</li>
</ul>
<h2 id="顶点数组"><a href="#顶点数组" class="headerlink" title="顶点数组"></a>顶点数组</h2><p>咱们只需要4个顶点就可以绘制一个四边形，更新以后的顶点结构体数组。</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line">Vertex triangleVertices[] =</span><br><span class="line">&#123;</span><br><span class="line">	&#123; &#123; <span class="number">-0.5f</span>, <span class="number">0.5f</span>, <span class="number">0.5f</span> &#125;, &#123; <span class="number">1.0f</span>, <span class="number">0.0f</span>, <span class="number">0.0f</span>, <span class="number">1.0f</span> &#125; &#125;,</span><br><span class="line">	&#123; &#123; <span class="number">0.5f</span>, <span class="number">0.5f</span>, <span class="number">0.5f</span> &#125;, &#123; <span class="number">0.0f</span>, <span class="number">1.0f</span>, <span class="number">0.0f</span>, <span class="number">1.0f</span> &#125; &#125;,</span><br><span class="line">	&#123; &#123; <span class="number">-0.5f</span>, <span class="number">-0.5f</span>, <span class="number">0.5f</span> &#125;, &#123; <span class="number">0.0f</span>, <span class="number">0.0f</span>, <span class="number">1.0f</span>, <span class="number">1.0f</span> &#125; &#125;,</span><br><span class="line">	&#123; &#123; <span class="number">0.5f</span>, <span class="number">0.5f</span>, <span class="number">0.5f</span> &#125;, &#123; <span class="number">1.0f</span>, <span class="number">0.0f</span>, <span class="number">0.0f</span>, <span class="number">1.0f</span> &#125; &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>

<h2 id="索引数组"><a href="#索引数组" class="headerlink" title="索引数组"></a>索引数组</h2><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line">DWORD triangleIndexs[]</span><br><span class="line">&#123;</span><br><span class="line">	<span class="number">0</span>,<span class="number">1</span>,<span class="number">2</span>,</span><br><span class="line">	<span class="number">0</span>,<span class="number">3</span>,<span class="number">1</span></span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>

<h2 id="顶点缓存和索引缓存"><a href="#顶点缓存和索引缓存" class="headerlink" title="顶点缓存和索引缓存"></a>顶点缓存和索引缓存</h2><p>见代码</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line">&#123;</span><br><span class="line">		<span class="comment">/*三角形</span></span><br><span class="line"><span class="comment">		Vertex triangleVertices[] =</span></span><br><span class="line"><span class="comment">		&#123;</span></span><br><span class="line"><span class="comment">			&#123; &#123; 0.0f, 0.5f, 0.0f &#125;, &#123; 1.0f, 0.0f, 0.0f, 1.0f &#125; &#125;,</span></span><br><span class="line"><span class="comment">			&#123; &#123; 0.5f, -0.5f, 0.0f &#125;, &#123; 0.0f, 1.0f, 0.0f, 1.0f &#125; &#125;,</span></span><br><span class="line"><span class="comment">			&#123; &#123; -0.5f, -0.5f, 0.0f &#125;, &#123; 0.0f, 0.0f, 1.0f, 1.0f &#125; &#125;</span></span><br><span class="line"><span class="comment">		&#125;;</span></span><br><span class="line"><span class="comment">		*/</span></span><br><span class="line">		<span class="comment">//顶点数组</span></span><br><span class="line">		Vertex triangleVertices[] =</span><br><span class="line">		&#123;</span><br><span class="line">			&#123; &#123; <span class="number">-0.5f</span>, <span class="number">0.5f</span>, <span class="number">0.5f</span> &#125;, &#123; <span class="number">1.0f</span>, <span class="number">0.0f</span>, <span class="number">0.0f</span>, <span class="number">1.0f</span> &#125; &#125;,</span><br><span class="line">			&#123; &#123; <span class="number">0.5f</span>, <span class="number">-0.5f</span>, <span class="number">0.5f</span> &#125;, &#123; <span class="number">0.0f</span>, <span class="number">1.0f</span>, <span class="number">0.0f</span>, <span class="number">1.0f</span> &#125; &#125;,</span><br><span class="line">			&#123; &#123; <span class="number">-0.5f</span>, <span class="number">-0.5f</span>, <span class="number">0.5f</span> &#125;, &#123; <span class="number">0.0f</span>, <span class="number">0.0f</span>, <span class="number">1.0f</span>, <span class="number">1.0f</span> &#125; &#125;,</span><br><span class="line">			&#123; &#123; <span class="number">0.5f</span>, <span class="number">0.5f</span>, <span class="number">0.5f</span> &#125;, &#123; <span class="number">1.0f</span>, <span class="number">0.0f</span>, <span class="number">0.0f</span>, <span class="number">1.0f</span> &#125; &#125;</span><br><span class="line">		&#125;;</span><br><span class="line">		<span class="comment">//索引数组</span></span><br><span class="line">		DWORD triangleIndexs[]</span><br><span class="line">		&#123;</span><br><span class="line">			<span class="number">0</span>,<span class="number">1</span>,<span class="number">2</span>,</span><br><span class="line">			<span class="number">0</span>,<span class="number">3</span>,<span class="number">1</span></span><br><span class="line">		&#125;;</span><br><span class="line"></span><br><span class="line">		<span class="type">const</span> UINT vertexBufferSize = <span class="built_in">sizeof</span>(triangleVertices);</span><br><span class="line">		<span class="type">const</span> UINT indexBufferSize = <span class="built_in">sizeof</span>(triangleIndexs);<span class="comment">//新增：索引缓冲</span></span><br><span class="line"></span><br><span class="line">		CD3DX12_HEAP_PROPERTIES heapProperties = <span class="built_in">CD3DX12_HEAP_PROPERTIES</span>(D3D12_HEAP_TYPE_UPLOAD);</span><br><span class="line">		CD3DX12_RESOURCE_DESC resourceDes = CD3DX12_RESOURCE_DESC::<span class="built_in">Buffer</span>(vertexBufferSize);<span class="comment">//统一资源</span></span><br><span class="line">		<span class="comment">//CD3DX12_RESOURCE_DESC indexResourceDes = CD3DX12_RESOURCE_DESC::Buffer(indexBufferSize);//索引缓冲资源</span></span><br><span class="line"></span><br><span class="line">		<span class="built_in">ThrowIfFailed</span>(device-&gt;<span class="built_in">CreateCommittedResource</span>(</span><br><span class="line">			&amp;heapProperties,</span><br><span class="line">			D3D12_HEAP_FLAG_NONE,</span><br><span class="line">			&amp;resourceDes,</span><br><span class="line">			D3D12_RESOURCE_STATE_GENERIC_READ,</span><br><span class="line">			<span class="literal">nullptr</span>,</span><br><span class="line">			<span class="built_in">IID_PPV_ARGS</span>(&amp;vertexBuffer)));</span><br><span class="line"></span><br><span class="line">		<span class="comment">//新增：创建提交的资源</span></span><br><span class="line">		<span class="built_in">ThrowIfFailed</span>(device-&gt;<span class="built_in">CreateCommittedResource</span>(</span><br><span class="line">			&amp;heapProperties,</span><br><span class="line">			D3D12_HEAP_FLAG_NONE,</span><br><span class="line">			<span class="comment">//&amp;indexResourceDes,</span></span><br><span class="line">			&amp;resourceDes,</span><br><span class="line">			D3D12_RESOURCE_STATE_GENERIC_READ,</span><br><span class="line">			<span class="literal">nullptr</span>,</span><br><span class="line">			<span class="built_in">IID_PPV_ARGS</span>(&amp;indexBuffer)));</span><br><span class="line"></span><br><span class="line">		<span class="comment">//UINT8* pVertexDataBegin;</span></span><br><span class="line">		UINT8* pDataBegin;<span class="comment">//修改:pVertexDatabegin</span></span><br><span class="line">		<span class="function">CD3DX12_RANGE <span class="title">readRange</span><span class="params">(<span class="number">0</span>, <span class="number">0</span>)</span></span>;</span><br><span class="line"></span><br><span class="line">		<span class="comment">//ThrowIfFailed(vertexBuffer-&gt;Map(0, &amp;readRange, reinterpret_cast&lt;void**&gt;(&amp;pVertexDataBegin)));</span></span><br><span class="line">		<span class="comment">//memcpy(pVertexDataBegin, triangleVertices, sizeof(triangleVertices));</span></span><br><span class="line">		<span class="built_in">ThrowIfFailed</span>(vertexBuffer-&gt;<span class="built_in">Map</span>(<span class="number">0</span>, &amp;readRange, <span class="built_in">reinterpret_cast</span>&lt;<span class="type">void</span>**&gt;(&amp;pDataBegin)));</span><br><span class="line">		<span class="built_in">memcpy</span>(pDataBegin, triangleVertices, <span class="built_in">sizeof</span>(triangleVertices));<span class="comment">//修改：pDataBegin</span></span><br><span class="line">		vertexBuffer-&gt;<span class="built_in">Unmap</span>(<span class="number">0</span>, <span class="literal">nullptr</span>);</span><br><span class="line"></span><br><span class="line">		<span class="comment">//新增：索引缓存</span></span><br><span class="line">		<span class="built_in">ThrowIfFailed</span>(indexBuffer-&gt;<span class="built_in">Map</span>(<span class="number">0</span>, &amp;readRange, <span class="built_in">reinterpret_cast</span>&lt;<span class="type">void</span>**&gt;(&amp;pDataBegin)));</span><br><span class="line">		<span class="built_in">memcpy</span>(pDataBegin, triangleIndexs, <span class="built_in">sizeof</span>(triangleIndexs));</span><br><span class="line">		indexBuffer-&gt;<span class="built_in">Unmap</span>(<span class="number">0</span>, <span class="literal">nullptr</span>);</span><br><span class="line"></span><br><span class="line">		vertexBufferView.BufferLocation = vertexBuffer-&gt;<span class="built_in">GetGPUVirtualAddress</span>();</span><br><span class="line">		vertexBufferView.StrideInBytes = <span class="built_in">sizeof</span>(Vertex);</span><br><span class="line">		vertexBufferView.SizeInBytes = vertexBufferSize;</span><br><span class="line"></span><br><span class="line">		<span class="comment">//新增：索引缓存</span></span><br><span class="line">		indexBufferView.BufferLocation = indexBuffer-&gt;<span class="built_in">GetGPUVirtualAddress</span>();<span class="comment">//获得GPU虚拟地址</span></span><br><span class="line">		indexBufferView.Format = DXGI_FORMAT_R32_UINT;<span class="comment">//</span></span><br><span class="line">		indexBufferView.SizeInBytes = indexBufferSize;</span><br><span class="line">	&#125;</span><br></pre></td></tr></table></figure>

<h1 id="七-深度测试"><a href="#七-深度测试" class="headerlink" title="七 深度测试"></a>七 深度测试</h1><p>上次的基础上绘制两个四边形那就很简单了，直接在顶点数组里面加点数据就可以了。</p>
<ul>
<li>z轴越小，离摄像机越近</li>
</ul>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line">Vertex triangleVertices[] =</span><br><span class="line">&#123;</span><br><span class="line">                      <span class="comment">//第一个绿色四边形</span></span><br><span class="line">	&#123; &#123; <span class="number">-0.5f</span>, <span class="number">0.5f</span>, <span class="number">0.5f</span> &#125;, &#123; <span class="number">0.0f</span>, <span class="number">1.0f</span>, <span class="number">0.0f</span>, <span class="number">1.0f</span> &#125; &#125;,</span><br><span class="line">	&#123; &#123; <span class="number">0.5f</span>, <span class="number">-0.5f</span>, <span class="number">0.5f</span> &#125;, &#123; <span class="number">0.0f</span>, <span class="number">1.0f</span>, <span class="number">0.0f</span>, <span class="number">1.0f</span> &#125; &#125;,</span><br><span class="line">	&#123; &#123; <span class="number">-0.5f</span>, <span class="number">-0.5f</span>, <span class="number">0.5f</span> &#125;, &#123; <span class="number">0.0f</span>, <span class="number">1.0f</span>, <span class="number">0.0f</span>, <span class="number">1.0f</span> &#125; &#125;,</span><br><span class="line">	&#123; &#123; <span class="number">0.5f</span>, <span class="number">0.5f</span>, <span class="number">0.5f</span> &#125;, &#123; <span class="number">0.0f</span>, <span class="number">1.0f</span>, <span class="number">0.0f</span>, <span class="number">1.0f</span> &#125; &#125;,</span><br><span class="line">                      <span class="comment">//第二个蓝色四边形</span></span><br><span class="line">	&#123; &#123; <span class="number">-0.75f</span>, <span class="number">0.75f</span>, <span class="number">0.7f</span> &#125;, &#123; <span class="number">0.0f</span>, <span class="number">0.0f</span>, <span class="number">1.0f</span>, <span class="number">1.0f</span> &#125; &#125;,</span><br><span class="line">	&#123; &#123; <span class="number">0.0f</span>, <span class="number">0.0f</span>, <span class="number">0.7f</span> &#125;, &#123; <span class="number">0.0f</span>, <span class="number">0.0f</span>, <span class="number">1.0f</span>, <span class="number">1.0f</span> &#125; &#125;,</span><br><span class="line">	&#123; &#123; <span class="number">-0.75f</span>, <span class="number">0.0f</span>, <span class="number">0.7f</span> &#125;, &#123; <span class="number">0.0f</span>, <span class="number">0.0f</span>, <span class="number">1.0f</span>, <span class="number">1.0f</span> &#125; &#125;,</span><br><span class="line">	&#123; &#123; <span class="number">0.0f</span>, <span class="number">0.75f</span>, <span class="number">0.7f</span> &#125;, &#123; <span class="number">0.0f</span>, <span class="number">0.0f</span>, <span class="number">1.0f</span>, <span class="number">1.0f</span> &#125; &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>

<h2 id="绘制第二个四边形命令"><a href="#绘制第二个四边形命令" class="headerlink" title="绘制第二个四边形命令"></a>绘制第二个四边形命令</h2><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line">commandList-&gt;<span class="built_in">DrawIndexedInstanced</span>(<span class="number">6</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">0</span>,<span class="number">0</span>);<span class="comment">//第一个绿色四边形</span></span><br><span class="line">	commandList-&gt;<span class="built_in">DrawIndexedInstanced</span>(<span class="number">6</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">4</span>, <span class="number">0</span>);<span class="comment">//第二个蓝色四边形</span></span><br></pre></td></tr></table></figure>

<h3 id="结果："><a href="#结果：" class="headerlink" title="结果："></a>结果：</h3><p>蓝色却依旧覆盖了绿色，这是因为先绘制了绿色的四边形，然后绘制的蓝色四边形，把绿色覆盖了</p>
<p><img data-src="https://cdn.jsdelivr.net/gh/JcMarical/mapstorage/images/image-20230719202449145.png" alt="image-20230719202449145"></p>
<h2 id="深度测试"><a href="#深度测试" class="headerlink" title="深度测试"></a>深度测试</h2><h3 id="深度模板堆"><a href="#深度模板堆" class="headerlink" title="深度模板堆"></a>深度模板堆</h3><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line">D3D12_DESCRIPTOR_HEAP_DESC dsvHeapDesc = &#123;&#125;;</span><br><span class="line">		dsvHeapDesc.NumDescriptors = <span class="number">1</span>;</span><br><span class="line">		dsvHeapDesc.Type = D3D12_DESCRIPTOR_HEAP_TYPE_DSV;</span><br><span class="line">		dsvHeapDesc.Flags = D3D12_DESCRIPTOR_HEAP_FLAG_NONE;</span><br><span class="line">		<span class="built_in">ThrowIfFailed</span>(device-&gt;<span class="built_in">CreateDescriptorHeap</span>(&amp;dsvHeapDesc, <span class="built_in">IID_PPV_ARGS</span>(&amp;dsvHeap)));</span><br></pre></td></tr></table></figure>

<h3 id="修改管线状态对象，启用深度模板"><a href="#修改管线状态对象，启用深度模板" class="headerlink" title="修改管线状态对象，启用深度模板"></a>修改管线状态对象，启用深度模板</h3><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line">D3D12_GRAPHICS_PIPELINE_STATE_DESC psoDesc = &#123;&#125;;</span><br><span class="line">		psoDesc.InputLayout = &#123; inputElementDescs, _countof(inputElementDescs) &#125;;</span><br><span class="line">		psoDesc.pRootSignature = rootSignature.<span class="built_in">Get</span>();</span><br><span class="line">		psoDesc.VS = <span class="built_in">CD3DX12_SHADER_BYTECODE</span>(vertexShader.<span class="built_in">Get</span>());</span><br><span class="line">		psoDesc.PS = <span class="built_in">CD3DX12_SHADER_BYTECODE</span>(pixelShader.<span class="built_in">Get</span>());</span><br><span class="line">		psoDesc.RasterizerState = <span class="built_in">CD3DX12_RASTERIZER_DESC</span>(D3D12_DEFAULT);</span><br><span class="line">		psoDesc.BlendState = <span class="built_in">CD3DX12_BLEND_DESC</span>(D3D12_DEFAULT);</span><br><span class="line">		psoDesc.DepthStencilState = <span class="built_in">CD3DX12_DEPTH_STENCIL_DESC</span>(D3D12_DEFAULT);<span class="comment">//深度模板状态</span></span><br><span class="line">		psoDesc.SampleMask = UINT_MAX;</span><br><span class="line">		psoDesc.PrimitiveTopologyType = D3D12_PRIMITIVE_TOPOLOGY_TYPE_TRIANGLE;</span><br><span class="line">		psoDesc.NumRenderTargets = <span class="number">1</span>;</span><br><span class="line">		psoDesc.RTVFormats[<span class="number">0</span>] = DXGI_FORMAT_R8G8B8A8_UNORM;</span><br><span class="line">		psoDesc.SampleDesc.Count = <span class="number">1</span>;</span><br><span class="line">		<span class="built_in">ThrowIfFailed</span>(device-&gt;<span class="built_in">CreateGraphicsPipelineState</span>(&amp;psoDesc, <span class="built_in">IID_PPV_ARGS</span>(&amp;pipelineState)));</span><br></pre></td></tr></table></figure>

<h3 id="深度缓存"><a href="#深度缓存" class="headerlink" title="深度缓存"></a>深度缓存</h3><p>创建深度模板缓存，这里得采用默认堆类型。</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line">D3D12_DEPTH_STENCIL_VIEW_DESC depthStencilDesc = &#123;&#125;;</span><br><span class="line">		depthStencilDesc.Format = DXGI_FORMAT_D32_FLOAT;</span><br><span class="line">		depthStencilDesc.ViewDimension = D3D12_DSV_DIMENSION_TEXTURE2D;</span><br><span class="line">		depthStencilDesc.Flags = D3D12_DSV_FLAG_NONE;</span><br><span class="line"></span><br><span class="line">		D3D12_CLEAR_VALUE depthOptimizedClearValue = &#123;&#125;;</span><br><span class="line">		depthOptimizedClearValue.Format = DXGI_FORMAT_D32_FLOAT;</span><br><span class="line">		depthOptimizedClearValue.DepthStencil.Depth = <span class="number">1.0f</span>;</span><br><span class="line">		depthOptimizedClearValue.DepthStencil.Stencil = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">		CD3DX12_HEAP_PROPERTIES heapProperties2 = <span class="built_in">CD3DX12_HEAP_PROPERTIES</span>(D3D12_HEAP_TYPE_DEFAULT);</span><br><span class="line">		CD3DX12_RESOURCE_DESC tex2D = CD3DX12_RESOURCE_DESC::<span class="built_in">Tex2D</span>(DXGI_FORMAT_D32_FLOAT, width, height, <span class="number">1</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">0</span>, D3D12_RESOURCE_FLAG_ALLOW_DEPTH_STENCIL);</span><br><span class="line"></span><br><span class="line">		<span class="built_in">ThrowIfFailed</span>(device-&gt;<span class="built_in">CreateCommittedResource</span>(</span><br><span class="line">			&amp;heapProperties2,</span><br><span class="line">			D3D12_HEAP_FLAG_NONE,</span><br><span class="line">			&amp;tex2D,</span><br><span class="line">			D3D12_RESOURCE_STATE_DEPTH_WRITE,</span><br><span class="line">			&amp;depthOptimizedClearValue,</span><br><span class="line">			<span class="built_in">IID_PPV_ARGS</span>(&amp;depthStencilBuffer)));</span><br><span class="line"></span><br><span class="line">		device-&gt;<span class="built_in">CreateDepthStencilView</span>(depthStencilBuffer.<span class="built_in">Get</span>(), &amp;depthStencilDesc, dsvHeap-&gt;<span class="built_in">GetCPUDescriptorHandleForHeapStart</span>());</span><br></pre></td></tr></table></figure>

<h3 id="添加命令"><a href="#添加命令" class="headerlink" title="添加命令"></a>添加命令</h3><p>然后在准备渲染之前得清除深度模板视图和清除渲染目标视图一样。</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="function">CD3DX12_CPU_DESCRIPTOR_HANDLE <span class="title">rtvHandle</span><span class="params">(rtvHeap-&gt;GetCPUDescriptorHandleForHeapStart(), frameIndex, rtvDescriptorSize)</span></span>;</span><br><span class="line"></span><br><span class="line">	<span class="function">CD3DX12_CPU_DESCRIPTOR_HANDLE <span class="title">dsvHandle</span><span class="params">(dsvHeap-&gt;GetCPUDescriptorHandleForHeapStart())</span></span>;</span><br><span class="line"></span><br><span class="line">	commandList-&gt;<span class="built_in">OMSetRenderTargets</span>(<span class="number">1</span>, &amp;rtvHandle, FALSE, &amp;dsvHandle);</span><br><span class="line"></span><br><span class="line">	<span class="type">const</span> <span class="type">float</span> clearColor[] = &#123; color[<span class="number">0</span>], color[<span class="number">1</span>], color[<span class="number">2</span>], <span class="number">1.0f</span> &#125;;</span><br><span class="line">	commandList-&gt;<span class="built_in">ClearRenderTargetView</span>(rtvHandle, clearColor, <span class="number">0</span>, <span class="literal">nullptr</span>);</span><br><span class="line">	commandList-&gt;<span class="built_in">ClearDepthStencilView</span>(dsvHeap-&gt;<span class="built_in">GetCPUDescriptorHandleForHeapStart</span>(), D3D12_CLEAR_FLAG_DEPTH, <span class="number">1.0f</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="literal">nullptr</span>);</span><br></pre></td></tr></table></figure>

<p>结果：</p>
<p><img data-src="https://cdn.jsdelivr.net/gh/JcMarical/mapstorage/images/image-20230719211144048.png" alt="image-20230719211144048"></p>
<h1 id="八-常量缓存"><a href="#八-常量缓存" class="headerlink" title="八 常量缓存"></a>八 常量缓存</h1><h2 id="常量缓存区结构体"><a href="#常量缓存区结构体" class="headerlink" title="常量缓存区结构体"></a>常量缓存区结构体</h2><p>定义咱们需要传递给着色器的结构体，这个结构体大小必须是256字节对齐</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="keyword">struct</span> <span class="title class_">SceneConstantBuffer</span></span><br><span class="line">&#123;</span><br><span class="line">	XMFLOAT4 offset;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>

<ul>
<li>添加一个256字节对齐的方法</li>
</ul>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="keyword">template</span> &lt;<span class="keyword">typename</span> T&gt;</span><br><span class="line"><span class="function"><span class="keyword">constexpr</span> UINT <span class="title">CalcConstantBufferByteSize</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	<span class="comment">// Constant buffers must be a multiple of the minimum hardware</span></span><br><span class="line">	<span class="comment">// allocation size (usually 256 bytes).  So round up to nearest</span></span><br><span class="line">	<span class="comment">// multiple of 256.  We do this by adding 255 and then masking off</span></span><br><span class="line">	<span class="comment">// the lower 2 bytes which store all bits &lt; 256.</span></span><br><span class="line">	<span class="comment">// Example: Suppose byteSize = 300.</span></span><br><span class="line">	<span class="comment">// (300 + 255) &amp; ~255</span></span><br><span class="line">	<span class="comment">// 555 &amp; ~255</span></span><br><span class="line">	<span class="comment">// 0x022B &amp; ~0x00ff</span></span><br><span class="line">	<span class="comment">// 0x022B &amp; 0xff00</span></span><br><span class="line">	<span class="comment">// 0x0200</span></span><br><span class="line">	<span class="comment">// 512</span></span><br><span class="line">	UINT byteSize = <span class="built_in">sizeof</span>(T);</span><br><span class="line">	<span class="keyword">return</span> (byteSize + <span class="number">255</span>) &amp; ~<span class="number">255</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="常量缓存堆"><a href="#常量缓存堆" class="headerlink" title="常量缓存堆"></a>常量缓存堆</h2><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line">D3D12_DESCRIPTOR_HEAP_DESC cbvHeapDesc = &#123;&#125;;</span><br><span class="line">		cbvHeapDesc.NumDescriptors = <span class="number">1</span>;</span><br><span class="line">		cbvHeapDesc.Type = D3D12_DESCRIPTOR_HEAP_TYPE_CBV_SRV_UAV;</span><br><span class="line">		cbvHeapDesc.Flags = D3D12_DESCRIPTOR_HEAP_FLAG_SHADER_VISIBLE;</span><br><span class="line">		<span class="built_in">ThrowIfFailed</span>(device-&gt;<span class="built_in">CreateDescriptorHeap</span>(&amp;cbvHeapDesc, <span class="built_in">IID_PPV_ARGS</span>(&amp;cbvHeap)));</span><br></pre></td></tr></table></figure>

<h3 id="常量缓存"><a href="#常量缓存" class="headerlink" title="常量缓存"></a>常量缓存</h3><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="type">const</span> UINT constantBufferSize = <span class="built_in">CalcConstantBufferByteSize</span>&lt;SceneConstantBuffer&gt;();</span><br><span class="line">		CD3DX12_RESOURCE_DESC constantResourceDes = CD3DX12_RESOURCE_DESC::<span class="built_in">Buffer</span>(constantBufferSize);</span><br><span class="line">		<span class="built_in">ThrowIfFailed</span>(device-&gt;<span class="built_in">CreateCommittedResource</span>(</span><br><span class="line">			&amp;heapProperties,</span><br><span class="line">			D3D12_HEAP_FLAG_NONE,</span><br><span class="line">			&amp;constantResourceDes,</span><br><span class="line">			D3D12_RESOURCE_STATE_GENERIC_READ,</span><br><span class="line">			<span class="literal">nullptr</span>,</span><br><span class="line">			<span class="built_in">IID_PPV_ARGS</span>(&amp;constantBuffer)));</span><br><span class="line"></span><br><span class="line">		D3D12_CONSTANT_BUFFER_VIEW_DESC cbvDesc = &#123;&#125;;</span><br><span class="line">		cbvDesc.BufferLocation = constantBuffer-&gt;<span class="built_in">GetGPUVirtualAddress</span>();</span><br><span class="line">		cbvDesc.SizeInBytes = constantBufferSize;</span><br><span class="line">		device-&gt;<span class="built_in">CreateConstantBufferView</span>(&amp;cbvDesc, cbvHeap-&gt;<span class="built_in">GetCPUDescriptorHandleForHeapStart</span>());</span><br><span class="line"></span><br><span class="line">		<span class="built_in">ThrowIfFailed</span>(constantBuffer-&gt;<span class="built_in">Map</span>(<span class="number">0</span>, &amp;readRange, <span class="built_in">reinterpret_cast</span>&lt;<span class="type">void</span>**&gt;(&amp;pCbvDataBegin)));</span><br><span class="line">		<span class="built_in">memcpy</span>(pCbvDataBegin, &amp;constantBufferData, <span class="built_in">sizeof</span>(constantBufferData));</span><br></pre></td></tr></table></figure>

<h2 id="根签名"><a href="#根签名" class="headerlink" title="根签名"></a>根签名</h2><p>根签名由根参数组成，根参数可以是根常量、根描述符和描述符表，在这里创建一个描述符表，存放了咱们的常量缓存视图。</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line">D3D12_FEATURE_DATA_ROOT_SIGNATURE featureData = &#123;&#125;;</span><br><span class="line"></span><br><span class="line">		featureData.HighestVersion = D3D_ROOT_SIGNATURE_VERSION_1_1;</span><br><span class="line"></span><br><span class="line">		<span class="keyword">if</span> (<span class="built_in">FAILED</span>(device-&gt;<span class="built_in">CheckFeatureSupport</span>(D3D12_FEATURE_ROOT_SIGNATURE, &amp;featureData, <span class="built_in">sizeof</span>(featureData))))</span><br><span class="line">		&#123;</span><br><span class="line">			featureData.HighestVersion = D3D_ROOT_SIGNATURE_VERSION_1_0;</span><br><span class="line">		&#125;</span><br><span class="line"></span><br><span class="line">		CD3DX12_DESCRIPTOR_RANGE1 ranges[<span class="number">1</span>];</span><br><span class="line">		CD3DX12_ROOT_PARAMETER1 rootParameters[<span class="number">1</span>];</span><br><span class="line"></span><br><span class="line">		ranges[<span class="number">0</span>].<span class="built_in">Init</span>(D3D12_DESCRIPTOR_RANGE_TYPE_CBV, <span class="number">1</span>, <span class="number">0</span>, <span class="number">0</span>, D3D12_DESCRIPTOR_RANGE_FLAG_DATA_STATIC);</span><br><span class="line">		rootParameters[<span class="number">0</span>].<span class="built_in">InitAsDescriptorTable</span>(<span class="number">1</span>, &amp;ranges[<span class="number">0</span>], D3D12_SHADER_VISIBILITY_VERTEX);</span><br><span class="line"></span><br><span class="line">		D3D12_ROOT_SIGNATURE_FLAGS rootSignatureFlags =</span><br><span class="line">			D3D12_ROOT_SIGNATURE_FLAG_ALLOW_INPUT_ASSEMBLER_INPUT_LAYOUT |</span><br><span class="line">			D3D12_ROOT_SIGNATURE_FLAG_DENY_HULL_SHADER_ROOT_ACCESS |</span><br><span class="line">			D3D12_ROOT_SIGNATURE_FLAG_DENY_DOMAIN_SHADER_ROOT_ACCESS |</span><br><span class="line">			D3D12_ROOT_SIGNATURE_FLAG_DENY_GEOMETRY_SHADER_ROOT_ACCESS |</span><br><span class="line">			D3D12_ROOT_SIGNATURE_FLAG_DENY_PIXEL_SHADER_ROOT_ACCESS;</span><br><span class="line"></span><br><span class="line">		CD3DX12_VERSIONED_ROOT_SIGNATURE_DESC rootSignatureDesc;</span><br><span class="line">		rootSignatureDesc.<span class="built_in">Init_1_1</span>(_countof(rootParameters), rootParameters, <span class="number">0</span>, <span class="literal">nullptr</span>, rootSignatureFlags);</span><br><span class="line"></span><br><span class="line">		ComPtr&lt;ID3DBlob&gt; signature;</span><br><span class="line">		ComPtr&lt;ID3DBlob&gt; error;</span><br><span class="line">		<span class="built_in">ThrowIfFailed</span>(<span class="built_in">D3DX12SerializeVersionedRootSignature</span>(&amp;rootSignatureDesc, featureData.HighestVersion, &amp;signature, &amp;error));</span><br><span class="line">		<span class="built_in">ThrowIfFailed</span>(device-&gt;<span class="built_in">CreateRootSignature</span>(<span class="number">0</span>, signature-&gt;<span class="built_in">GetBufferPointer</span>(), signature-&gt;<span class="built_in">GetBufferSize</span>(), <span class="built_in">IID_PPV_ARGS</span>(&amp;rootSignature)));</span><br></pre></td></tr></table></figure>

<h2 id="命令列表"><a href="#命令列表" class="headerlink" title="命令列表"></a>命令列表</h2><p>添加一些代码去设置咱们的常量缓存堆。</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line">ID3D12DescriptorHeap* ppHeaps[] = &#123; cbvHeap.<span class="built_in">Get</span>() &#125;;</span><br><span class="line">	commandList-&gt;<span class="built_in">SetDescriptorHeaps</span>(_countof(ppHeaps), ppHeaps);</span><br><span class="line"></span><br><span class="line">	commandList-&gt;<span class="built_in">SetGraphicsRootDescriptorTable</span>(<span class="number">0</span>, cbvHeap-&gt;<span class="built_in">GetGPUDescriptorHandleForHeapStart</span>());</span><br></pre></td></tr></table></figure>

<h2 id="OnUpdate方法"><a href="#OnUpdate方法" class="headerlink" title="OnUpdate方法"></a>OnUpdate方法</h2><p>在OnUpdate方法里面对常量缓存里面的数据进行更新</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="type">const</span> <span class="type">float</span> translationSpeed = <span class="number">0.005f</span>;</span><br><span class="line"><span class="type">const</span> <span class="type">float</span> offsetBounds = <span class="number">1.25f</span>;</span><br><span class="line"></span><br><span class="line">constantBufferData.offset.x += translationSpeed;</span><br><span class="line"><span class="keyword">if</span> (constantBufferData.offset.x &gt; offsetBounds)</span><br><span class="line">&#123;</span><br><span class="line">	constantBufferData.offset.x = -offsetBounds;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">memcpy</span>(pCbvDataBegin, &amp;constantBufferData, <span class="built_in">sizeof</span>(constantBufferData));</span><br></pre></td></tr></table></figure>

<h2 id="shaders-hlsl-1"><a href="#shaders-hlsl-1" class="headerlink" title="shaders.hlsl"></a><code>shaders.hlsl</code></h2><p>在着色器代码里面添加相应的结构体，拿来接收咱们传递过来的数据，如何加到咱们的顶点位置上面去，这样咱们的四边形就能动起来了。</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line">cbuffer SceneConstantBuffer : <span class="built_in">register</span>(b0)</span><br><span class="line">&#123;</span><br><span class="line">    float4 offset;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">struct</span> <span class="title class_">PSInput</span></span><br><span class="line">&#123;</span><br><span class="line">    float4 position : SV_POSITION;</span><br><span class="line">    float4 color : COLOR;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="function">PSInput <span class="title">VSMain</span><span class="params">(float4 position : POSITION, float4 color : COLOR)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    PSInput result;</span><br><span class="line"></span><br><span class="line">        result.position = position + offset;</span><br><span class="line">    result.color = color;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> result;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function">float4 <span class="title">PSMain</span><span class="params">(PSInput input)</span> : SV_TARGET</span></span><br><span class="line"><span class="function">&#123;</span></span><br><span class="line">    <span class="keyword">return</span> input.color;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="解决一个bug"><a href="#解决一个bug" class="headerlink" title="解决一个bug"></a>解决一个bug</h2><ul>
<li>运行时一直在输出信息</li>
</ul>
<p><img data-src="https://cdn.jsdelivr.net/gh/JcMarical/mapstorage/images/image-20230720142427250.png" alt="image-20230720142427250"></p>
<p>创建管线状态对象描述时加上下面最后一句就可以了。</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line">D3D12_GRAPHICS_PIPELINE_STATE_DESC psoDesc = &#123;&#125;;</span><br><span class="line">		psoDesc.InputLayout = &#123; inputElementDescs, _countof(inputElementDescs) &#125;;</span><br><span class="line">		psoDesc.pRootSignature = rootSignature.<span class="built_in">Get</span>();</span><br><span class="line">		psoDesc.VS = <span class="built_in">CD3DX12_SHADER_BYTECODE</span>(vertexShader.<span class="built_in">Get</span>());</span><br><span class="line">		psoDesc.PS = <span class="built_in">CD3DX12_SHADER_BYTECODE</span>(pixelShader.<span class="built_in">Get</span>());</span><br><span class="line">		psoDesc.RasterizerState = <span class="built_in">CD3DX12_RASTERIZER_DESC</span>(D3D12_DEFAULT);</span><br><span class="line">		psoDesc.BlendState = <span class="built_in">CD3DX12_BLEND_DESC</span>(D3D12_DEFAULT);</span><br><span class="line">		psoDesc.DepthStencilState = <span class="built_in">CD3DX12_DEPTH_STENCIL_DESC</span>(D3D12_DEFAULT);</span><br><span class="line">		psoDesc.SampleMask = UINT_MAX;</span><br><span class="line">		psoDesc.PrimitiveTopologyType = D3D12_PRIMITIVE_TOPOLOGY_TYPE_TRIANGLE;</span><br><span class="line">		psoDesc.NumRenderTargets = <span class="number">1</span>;</span><br><span class="line">		psoDesc.RTVFormats[<span class="number">0</span>] = DXGI_FORMAT_R8G8B8A8_UNORM;</span><br><span class="line">		psoDesc.SampleDesc.Count = <span class="number">1</span>;</span><br><span class="line">		psoDesc.DSVFormat = DXGI_FORMAT_D32_FLOAT;<span class="comment">//加上这玩意</span></span><br></pre></td></tr></table></figure>

<h1 id="九-绘制彩色立方体"><a href="#九-绘制彩色立方体" class="headerlink" title="九 绘制彩色立方体"></a>九 绘制彩色立方体</h1><h2 id="顶点数组-1"><a href="#顶点数组-1" class="headerlink" title="顶点数组"></a>顶点数组</h2><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line">Vertex triangleVertices[] =</span><br><span class="line">	&#123;</span><br><span class="line">		&#123; &#123; <span class="number">-1.0f</span>, <span class="number">-1.0f</span>, <span class="number">-1.0f</span> &#125;, &#123; <span class="number">1.0f</span>, <span class="number">1.0f</span>, <span class="number">1.0f</span>, <span class="number">1.0f</span> &#125; &#125;,</span><br><span class="line">		&#123; &#123; <span class="number">-1.0f</span>, +<span class="number">1.0f</span>, <span class="number">-1.0f</span> &#125;, &#123; <span class="number">1.0f</span>, <span class="number">1.0f</span>, <span class="number">0.0f</span>, <span class="number">1.0f</span> &#125; &#125;,</span><br><span class="line">		&#123; &#123; +<span class="number">1.0f</span>, +<span class="number">1.0f</span>, <span class="number">-1.0f</span> &#125;, &#123; <span class="number">1.0f</span>, <span class="number">0.0f</span>, <span class="number">1.0f</span>, <span class="number">1.0f</span> &#125; &#125;,</span><br><span class="line">		&#123; &#123; +<span class="number">1.0f</span>, <span class="number">-1.0f</span>, <span class="number">-1.0f</span> &#125;, &#123; <span class="number">0.0f</span>, <span class="number">1.0f</span>, <span class="number">0.0f</span>, <span class="number">1.0f</span> &#125; &#125;,</span><br><span class="line">		&#123; &#123; <span class="number">-1.0f</span>, <span class="number">-1.0f</span>, +<span class="number">1.0f</span> &#125;, &#123; <span class="number">0.0f</span>, <span class="number">0.5f</span>, <span class="number">0.5f</span>, <span class="number">1.0f</span> &#125; &#125;,</span><br><span class="line">		&#123; &#123; <span class="number">-1.0f</span>, +<span class="number">1.0f</span>, +<span class="number">1.0f</span> &#125;, &#123; <span class="number">0.5f</span>, <span class="number">0.0f</span>, <span class="number">0.0f</span>, <span class="number">1.0f</span> &#125; &#125;,</span><br><span class="line">		&#123; &#123; +<span class="number">1.0f</span>, +<span class="number">1.0f</span>, +<span class="number">1.0f</span> &#125;, &#123; <span class="number">0.5f</span>, <span class="number">0.5f</span>, <span class="number">0.0f</span>, <span class="number">1.0f</span> &#125; &#125;,</span><br><span class="line">		&#123; &#123; +<span class="number">1.0f</span>, <span class="number">-1.0f</span>, +<span class="number">1.0f</span> &#125;, &#123; <span class="number">0.5f</span>, <span class="number">0.5f</span>, <span class="number">0.5f</span>, <span class="number">1.0f</span> &#125; &#125;</span><br><span class="line">	&#125;;</span><br></pre></td></tr></table></figure>

<h2 id="索引数组-1"><a href="#索引数组-1" class="headerlink" title="索引数组"></a>索引数组</h2><p>一个立方体就六个面，也就是12个三角形，也就是36个索引了。</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line">DWORD triangleIndexs[]</span><br><span class="line">		&#123;</span><br><span class="line">			<span class="comment">// front face</span></span><br><span class="line">			<span class="number">0</span>, <span class="number">1</span>, <span class="number">2</span>,</span><br><span class="line">			<span class="number">0</span>, <span class="number">2</span>, <span class="number">3</span>,</span><br><span class="line"></span><br><span class="line">			<span class="comment">// back face</span></span><br><span class="line">			<span class="number">4</span>, <span class="number">6</span>, <span class="number">5</span>,</span><br><span class="line">			<span class="number">4</span>, <span class="number">7</span>, <span class="number">6</span>,</span><br><span class="line"></span><br><span class="line">			<span class="comment">// left face</span></span><br><span class="line">			<span class="number">4</span>, <span class="number">5</span>, <span class="number">1</span>,</span><br><span class="line">			<span class="number">4</span>, <span class="number">1</span>, <span class="number">0</span>,</span><br><span class="line"></span><br><span class="line">			<span class="comment">// right face</span></span><br><span class="line">			<span class="number">3</span>, <span class="number">2</span>, <span class="number">6</span>,</span><br><span class="line">			<span class="number">3</span>, <span class="number">6</span>, <span class="number">7</span>,</span><br><span class="line"></span><br><span class="line">			<span class="comment">// top face</span></span><br><span class="line">			<span class="number">1</span>, <span class="number">5</span>, <span class="number">6</span>,</span><br><span class="line">			<span class="number">1</span>, <span class="number">6</span>, <span class="number">2</span>,</span><br><span class="line"></span><br><span class="line">			<span class="comment">// bottom face</span></span><br><span class="line">			<span class="number">4</span>, <span class="number">0</span>, <span class="number">3</span>,</span><br><span class="line">			<span class="number">4</span>, <span class="number">3</span>, <span class="number">7</span></span><br><span class="line">		&#125;;</span><br></pre></td></tr></table></figure>

<h2 id="常量缓存-1"><a href="#常量缓存-1" class="headerlink" title="常量缓存"></a>常量缓存</h2><p>咱们需要修改一下常量缓存，把上次的offset换成MVP矩阵</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="keyword">struct</span> <span class="title class_">SceneConstantBuffer</span></span><br><span class="line">&#123;</span><br><span class="line">	XMFLOAT4X4 MVP;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>

<h2 id="OnUpdate"><a href="#OnUpdate" class="headerlink" title="OnUpdate"></a>OnUpdate</h2><p>咱们就在更新函数里面构造MVP矩阵，你可以在这里面不断更新数据，让摄像机动起来。</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line">XMVECTOR pos = <span class="built_in">XMVectorSet</span>(<span class="number">0.0f</span>, <span class="number">5.0f</span>, <span class="number">-5.0f</span>, <span class="number">1.0f</span>);</span><br><span class="line">	XMVECTOR target = <span class="built_in">XMVectorSet</span>(<span class="number">0.0f</span>, <span class="number">0.0f</span>, <span class="number">0.0f</span>, <span class="number">1.0f</span>);</span><br><span class="line">	XMVECTOR up = <span class="built_in">XMVectorSet</span>(<span class="number">0.0f</span>, <span class="number">1.0f</span>, <span class="number">0.0f</span>, <span class="number">0.0f</span>);</span><br><span class="line"></span><br><span class="line">	XMMATRIX v = <span class="built_in">XMMatrixLookAtLH</span>(pos, target, up);</span><br><span class="line"></span><br><span class="line">	XMMATRIX m = <span class="built_in">XMMatrixIdentity</span>();</span><br><span class="line">	XMMATRIX p = <span class="built_in">XMMatrixPerspectiveFovLH</span>(XM_PIDIV4,width/height,<span class="number">1.0f</span>,<span class="number">1000.0f</span>);</span><br><span class="line">	XMMATRIX MVP = m * v * p;</span><br><span class="line"></span><br><span class="line">	SceneConstantBuffer objConstants;</span><br><span class="line">	<span class="built_in">XMStoreFloat4x4</span>(&amp;objConstants.MVP, <span class="built_in">XMMatrixTranspose</span>(MVP));</span><br><span class="line">	<span class="built_in">memcpy</span>(pCbvDataBegin, &amp;objConstants, <span class="built_in">sizeof</span>(objConstants));</span><br></pre></td></tr></table></figure>

<h2 id="命令列表-1"><a href="#命令列表-1" class="headerlink" title="命令列表"></a>命令列表</h2><p>修改一下咱们的绘制调用</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line">commandList-&gt;<span class="built_in">DrawIndexedInstanced</span>(<span class="number">36</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>);</span><br></pre></td></tr></table></figure>

<h2 id="着色器"><a href="#着色器" class="headerlink" title="着色器"></a>着色器</h2><p>修改一下着色器，在顶点着色器里面，咱们给每一个顶点的位置都乘以MVP矩阵。</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line">cbuffer SceneConstantBuffer : <span class="built_in">register</span>(b0)</span><br><span class="line">&#123;</span><br><span class="line">    float4x4 WorldViewProj;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">struct</span> <span class="title class_">PSInput</span></span><br><span class="line">&#123;</span><br><span class="line">    float4 position : SV_POSITION;</span><br><span class="line">    float4 color : COLOR;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="function">PSInput <span class="title">VSMain</span><span class="params">(float4 position : POSITION, float4 color : COLOR)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    PSInput result;</span><br><span class="line"></span><br><span class="line">    result.position = <span class="built_in">mul</span>(position,WorldViewProj);</span><br><span class="line">    result.color = color;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> result;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function">float4 <span class="title">PSMain</span><span class="params">(PSInput input)</span> : SV_TARGET</span></span><br><span class="line"><span class="function">&#123;</span></span><br><span class="line">    <span class="keyword">return</span> input.color;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h1 id="十-纹理"><a href="#十-纹理" class="headerlink" title="十 纹理"></a>十 纹理</h1><p>加载纹理的方式有很多种，咱们采用<strong>Windows Imaging Component (WIC)。</strong></p>
<h2 id="加载纹理方法"><a href="#加载纹理方法" class="headerlink" title="加载纹理方法"></a>加载纹理方法</h2><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="function">DXGI_FORMAT <span class="title">GetDXGIFormatFromWICFormat</span><span class="params">(WICPixelFormatGUID&amp; wicFormatGUID)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	<span class="keyword">if</span> (wicFormatGUID == GUID_WICPixelFormat128bppRGBAFloat) <span class="keyword">return</span> DXGI_FORMAT_R32G32B32A32_FLOAT;</span><br><span class="line">	<span class="keyword">else</span> <span class="keyword">if</span> (wicFormatGUID == GUID_WICPixelFormat64bppRGBAHalf) <span class="keyword">return</span> DXGI_FORMAT_R16G16B16A16_FLOAT;</span><br><span class="line">	<span class="keyword">else</span> <span class="keyword">if</span> (wicFormatGUID == GUID_WICPixelFormat64bppRGBA) <span class="keyword">return</span> DXGI_FORMAT_R16G16B16A16_UNORM;</span><br><span class="line">	<span class="keyword">else</span> <span class="keyword">if</span> (wicFormatGUID == GUID_WICPixelFormat32bppRGBA) <span class="keyword">return</span> DXGI_FORMAT_R8G8B8A8_UNORM;</span><br><span class="line">	<span class="keyword">else</span> <span class="keyword">if</span> (wicFormatGUID == GUID_WICPixelFormat32bppBGRA) <span class="keyword">return</span> DXGI_FORMAT_B8G8R8A8_UNORM;</span><br><span class="line">	<span class="keyword">else</span> <span class="keyword">if</span> (wicFormatGUID == GUID_WICPixelFormat32bppBGR) <span class="keyword">return</span> DXGI_FORMAT_B8G8R8X8_UNORM;</span><br><span class="line">	<span class="keyword">else</span> <span class="keyword">if</span> (wicFormatGUID == GUID_WICPixelFormat32bppRGBA1010102XR) <span class="keyword">return</span> DXGI_FORMAT_R10G10B10_XR_BIAS_A2_UNORM;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">else</span> <span class="keyword">if</span> (wicFormatGUID == GUID_WICPixelFormat32bppRGBA1010102) <span class="keyword">return</span> DXGI_FORMAT_R10G10B10A2_UNORM;</span><br><span class="line">	<span class="keyword">else</span> <span class="keyword">if</span> (wicFormatGUID == GUID_WICPixelFormat16bppBGRA5551) <span class="keyword">return</span> DXGI_FORMAT_B5G5R5A1_UNORM;</span><br><span class="line">	<span class="keyword">else</span> <span class="keyword">if</span> (wicFormatGUID == GUID_WICPixelFormat16bppBGR565) <span class="keyword">return</span> DXGI_FORMAT_B5G6R5_UNORM;</span><br><span class="line">	<span class="keyword">else</span> <span class="keyword">if</span> (wicFormatGUID == GUID_WICPixelFormat32bppGrayFloat) <span class="keyword">return</span> DXGI_FORMAT_R32_FLOAT;</span><br><span class="line">	<span class="keyword">else</span> <span class="keyword">if</span> (wicFormatGUID == GUID_WICPixelFormat16bppGrayHalf) <span class="keyword">return</span> DXGI_FORMAT_R16_FLOAT;</span><br><span class="line">	<span class="keyword">else</span> <span class="keyword">if</span> (wicFormatGUID == GUID_WICPixelFormat16bppGray) <span class="keyword">return</span> DXGI_FORMAT_R16_UNORM;</span><br><span class="line">	<span class="keyword">else</span> <span class="keyword">if</span> (wicFormatGUID == GUID_WICPixelFormat8bppGray) <span class="keyword">return</span> DXGI_FORMAT_R8_UNORM;</span><br><span class="line">	<span class="keyword">else</span> <span class="keyword">if</span> (wicFormatGUID == GUID_WICPixelFormat8bppAlpha) <span class="keyword">return</span> DXGI_FORMAT_A8_UNORM;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">else</span> <span class="keyword">return</span> DXGI_FORMAT_UNKNOWN;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function">WICPixelFormatGUID <span class="title">GetConvertToWICFormat</span><span class="params">(WICPixelFormatGUID&amp; wicFormatGUID)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	<span class="keyword">if</span> (wicFormatGUID == GUID_WICPixelFormatBlackWhite) <span class="keyword">return</span> GUID_WICPixelFormat8bppGray;</span><br><span class="line">	<span class="keyword">else</span> <span class="keyword">if</span> (wicFormatGUID == GUID_WICPixelFormat1bppIndexed) <span class="keyword">return</span> GUID_WICPixelFormat32bppRGBA;</span><br><span class="line">	<span class="keyword">else</span> <span class="keyword">if</span> (wicFormatGUID == GUID_WICPixelFormat2bppIndexed) <span class="keyword">return</span> GUID_WICPixelFormat32bppRGBA;</span><br><span class="line">	<span class="keyword">else</span> <span class="keyword">if</span> (wicFormatGUID == GUID_WICPixelFormat4bppIndexed) <span class="keyword">return</span> GUID_WICPixelFormat32bppRGBA;</span><br><span class="line">	<span class="keyword">else</span> <span class="keyword">if</span> (wicFormatGUID == GUID_WICPixelFormat8bppIndexed) <span class="keyword">return</span> GUID_WICPixelFormat32bppRGBA;</span><br><span class="line">	<span class="keyword">else</span> <span class="keyword">if</span> (wicFormatGUID == GUID_WICPixelFormat2bppGray) <span class="keyword">return</span> GUID_WICPixelFormat8bppGray;</span><br><span class="line">	<span class="keyword">else</span> <span class="keyword">if</span> (wicFormatGUID == GUID_WICPixelFormat4bppGray) <span class="keyword">return</span> GUID_WICPixelFormat8bppGray;</span><br><span class="line">	<span class="keyword">else</span> <span class="keyword">if</span> (wicFormatGUID == GUID_WICPixelFormat16bppGrayFixedPoint) <span class="keyword">return</span> GUID_WICPixelFormat16bppGrayHalf;</span><br><span class="line">	<span class="keyword">else</span> <span class="keyword">if</span> (wicFormatGUID == GUID_WICPixelFormat32bppGrayFixedPoint) <span class="keyword">return</span> GUID_WICPixelFormat32bppGrayFloat;</span><br><span class="line">	<span class="keyword">else</span> <span class="keyword">if</span> (wicFormatGUID == GUID_WICPixelFormat16bppBGR555) <span class="keyword">return</span> GUID_WICPixelFormat16bppBGRA5551;</span><br><span class="line">	<span class="keyword">else</span> <span class="keyword">if</span> (wicFormatGUID == GUID_WICPixelFormat32bppBGR101010) <span class="keyword">return</span> GUID_WICPixelFormat32bppRGBA1010102;</span><br><span class="line">	<span class="keyword">else</span> <span class="keyword">if</span> (wicFormatGUID == GUID_WICPixelFormat24bppBGR) <span class="keyword">return</span> GUID_WICPixelFormat32bppRGBA;</span><br><span class="line">	<span class="keyword">else</span> <span class="keyword">if</span> (wicFormatGUID == GUID_WICPixelFormat24bppRGB) <span class="keyword">return</span> GUID_WICPixelFormat32bppRGBA;</span><br><span class="line">	<span class="keyword">else</span> <span class="keyword">if</span> (wicFormatGUID == GUID_WICPixelFormat32bppPBGRA) <span class="keyword">return</span> GUID_WICPixelFormat32bppRGBA;</span><br><span class="line">	<span class="keyword">else</span> <span class="keyword">if</span> (wicFormatGUID == GUID_WICPixelFormat32bppPRGBA) <span class="keyword">return</span> GUID_WICPixelFormat32bppRGBA;</span><br><span class="line">	<span class="keyword">else</span> <span class="keyword">if</span> (wicFormatGUID == GUID_WICPixelFormat48bppRGB) <span class="keyword">return</span> GUID_WICPixelFormat64bppRGBA;</span><br><span class="line">	<span class="keyword">else</span> <span class="keyword">if</span> (wicFormatGUID == GUID_WICPixelFormat48bppBGR) <span class="keyword">return</span> GUID_WICPixelFormat64bppRGBA;</span><br><span class="line">	<span class="keyword">else</span> <span class="keyword">if</span> (wicFormatGUID == GUID_WICPixelFormat64bppBGRA) <span class="keyword">return</span> GUID_WICPixelFormat64bppRGBA;</span><br><span class="line">	<span class="keyword">else</span> <span class="keyword">if</span> (wicFormatGUID == GUID_WICPixelFormat64bppPRGBA) <span class="keyword">return</span> GUID_WICPixelFormat64bppRGBA;</span><br><span class="line">	<span class="keyword">else</span> <span class="keyword">if</span> (wicFormatGUID == GUID_WICPixelFormat64bppPBGRA) <span class="keyword">return</span> GUID_WICPixelFormat64bppRGBA;</span><br><span class="line">	<span class="keyword">else</span> <span class="keyword">if</span> (wicFormatGUID == GUID_WICPixelFormat48bppRGBFixedPoint) <span class="keyword">return</span> GUID_WICPixelFormat64bppRGBAHalf;</span><br><span class="line">	<span class="keyword">else</span> <span class="keyword">if</span> (wicFormatGUID == GUID_WICPixelFormat48bppBGRFixedPoint) <span class="keyword">return</span> GUID_WICPixelFormat64bppRGBAHalf;</span><br><span class="line">	<span class="keyword">else</span> <span class="keyword">if</span> (wicFormatGUID == GUID_WICPixelFormat64bppRGBAFixedPoint) <span class="keyword">return</span> GUID_WICPixelFormat64bppRGBAHalf;</span><br><span class="line">	<span class="keyword">else</span> <span class="keyword">if</span> (wicFormatGUID == GUID_WICPixelFormat64bppBGRAFixedPoint) <span class="keyword">return</span> GUID_WICPixelFormat64bppRGBAHalf;</span><br><span class="line">	<span class="keyword">else</span> <span class="keyword">if</span> (wicFormatGUID == GUID_WICPixelFormat64bppRGBFixedPoint) <span class="keyword">return</span> GUID_WICPixelFormat64bppRGBAHalf;</span><br><span class="line">	<span class="keyword">else</span> <span class="keyword">if</span> (wicFormatGUID == GUID_WICPixelFormat64bppRGBHalf) <span class="keyword">return</span> GUID_WICPixelFormat64bppRGBAHalf;</span><br><span class="line">	<span class="keyword">else</span> <span class="keyword">if</span> (wicFormatGUID == GUID_WICPixelFormat48bppRGBHalf) <span class="keyword">return</span> GUID_WICPixelFormat64bppRGBAHalf;</span><br><span class="line">	<span class="keyword">else</span> <span class="keyword">if</span> (wicFormatGUID == GUID_WICPixelFormat128bppPRGBAFloat) <span class="keyword">return</span> GUID_WICPixelFormat128bppRGBAFloat;</span><br><span class="line">	<span class="keyword">else</span> <span class="keyword">if</span> (wicFormatGUID == GUID_WICPixelFormat128bppRGBFloat) <span class="keyword">return</span> GUID_WICPixelFormat128bppRGBAFloat;</span><br><span class="line">	<span class="keyword">else</span> <span class="keyword">if</span> (wicFormatGUID == GUID_WICPixelFormat128bppRGBAFixedPoint) <span class="keyword">return</span> GUID_WICPixelFormat128bppRGBAFloat;</span><br><span class="line">	<span class="keyword">else</span> <span class="keyword">if</span> (wicFormatGUID == GUID_WICPixelFormat128bppRGBFixedPoint) <span class="keyword">return</span> GUID_WICPixelFormat128bppRGBAFloat;</span><br><span class="line">	<span class="keyword">else</span> <span class="keyword">if</span> (wicFormatGUID == GUID_WICPixelFormat32bppRGBE) <span class="keyword">return</span> GUID_WICPixelFormat128bppRGBAFloat;</span><br><span class="line">	<span class="keyword">else</span> <span class="keyword">if</span> (wicFormatGUID == GUID_WICPixelFormat32bppCMYK) <span class="keyword">return</span> GUID_WICPixelFormat32bppRGBA;</span><br><span class="line">	<span class="keyword">else</span> <span class="keyword">if</span> (wicFormatGUID == GUID_WICPixelFormat64bppCMYK) <span class="keyword">return</span> GUID_WICPixelFormat64bppRGBA;</span><br><span class="line">	<span class="keyword">else</span> <span class="keyword">if</span> (wicFormatGUID == GUID_WICPixelFormat40bppCMYKAlpha) <span class="keyword">return</span> GUID_WICPixelFormat64bppRGBA;</span><br><span class="line">	<span class="keyword">else</span> <span class="keyword">if</span> (wicFormatGUID == GUID_WICPixelFormat80bppCMYKAlpha) <span class="keyword">return</span> GUID_WICPixelFormat64bppRGBA;</span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">if</span> (_WIN32_WINNT &gt;= _WIN32_WINNT_WIN8) || defined(_WIN7_PLATFORM_UPDATE)</span></span><br><span class="line">	<span class="keyword">else</span> <span class="keyword">if</span> (wicFormatGUID == GUID_WICPixelFormat32bppRGB) <span class="keyword">return</span> GUID_WICPixelFormat32bppRGBA;</span><br><span class="line">	<span class="keyword">else</span> <span class="keyword">if</span> (wicFormatGUID == GUID_WICPixelFormat64bppRGB) <span class="keyword">return</span> GUID_WICPixelFormat64bppRGBA;</span><br><span class="line">	<span class="keyword">else</span> <span class="keyword">if</span> (wicFormatGUID == GUID_WICPixelFormat64bppPRGBAHalf) <span class="keyword">return</span> GUID_WICPixelFormat64bppRGBAHalf;</span><br><span class="line"><span class="meta">#<span class="keyword">endif</span></span></span><br><span class="line"></span><br><span class="line">	<span class="keyword">else</span> <span class="keyword">return</span> GUID_WICPixelFormatDontCare;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">GetDXGIFormatBitsPerPixel</span><span class="params">(DXGI_FORMAT&amp; dxgiFormat)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	<span class="keyword">if</span> (dxgiFormat == DXGI_FORMAT_R32G32B32A32_FLOAT) <span class="keyword">return</span> <span class="number">128</span>;</span><br><span class="line">	<span class="keyword">else</span> <span class="keyword">if</span> (dxgiFormat == DXGI_FORMAT_R16G16B16A16_FLOAT) <span class="keyword">return</span> <span class="number">64</span>;</span><br><span class="line">	<span class="keyword">else</span> <span class="keyword">if</span> (dxgiFormat == DXGI_FORMAT_R16G16B16A16_UNORM) <span class="keyword">return</span> <span class="number">64</span>;</span><br><span class="line">	<span class="keyword">else</span> <span class="keyword">if</span> (dxgiFormat == DXGI_FORMAT_R8G8B8A8_UNORM) <span class="keyword">return</span> <span class="number">32</span>;</span><br><span class="line">	<span class="keyword">else</span> <span class="keyword">if</span> (dxgiFormat == DXGI_FORMAT_B8G8R8A8_UNORM) <span class="keyword">return</span> <span class="number">32</span>;</span><br><span class="line">	<span class="keyword">else</span> <span class="keyword">if</span> (dxgiFormat == DXGI_FORMAT_B8G8R8X8_UNORM) <span class="keyword">return</span> <span class="number">32</span>;</span><br><span class="line">	<span class="keyword">else</span> <span class="keyword">if</span> (dxgiFormat == DXGI_FORMAT_R10G10B10_XR_BIAS_A2_UNORM) <span class="keyword">return</span> <span class="number">32</span>;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">else</span> <span class="keyword">if</span> (dxgiFormat == DXGI_FORMAT_R10G10B10A2_UNORM) <span class="keyword">return</span> <span class="number">32</span>;</span><br><span class="line">	<span class="keyword">else</span> <span class="keyword">if</span> (dxgiFormat == DXGI_FORMAT_B5G5R5A1_UNORM) <span class="keyword">return</span> <span class="number">16</span>;</span><br><span class="line">	<span class="keyword">else</span> <span class="keyword">if</span> (dxgiFormat == DXGI_FORMAT_B5G6R5_UNORM) <span class="keyword">return</span> <span class="number">16</span>;</span><br><span class="line">	<span class="keyword">else</span> <span class="keyword">if</span> (dxgiFormat == DXGI_FORMAT_R32_FLOAT) <span class="keyword">return</span> <span class="number">32</span>;</span><br><span class="line">	<span class="keyword">else</span> <span class="keyword">if</span> (dxgiFormat == DXGI_FORMAT_R16_FLOAT) <span class="keyword">return</span> <span class="number">16</span>;</span><br><span class="line">	<span class="keyword">else</span> <span class="keyword">if</span> (dxgiFormat == DXGI_FORMAT_R16_UNORM) <span class="keyword">return</span> <span class="number">16</span>;</span><br><span class="line">	<span class="keyword">else</span> <span class="keyword">if</span> (dxgiFormat == DXGI_FORMAT_R8_UNORM) <span class="keyword">return</span> <span class="number">8</span>;</span><br><span class="line">	<span class="keyword">else</span> <span class="keyword">if</span> (dxgiFormat == DXGI_FORMAT_A8_UNORM) <span class="keyword">return</span> <span class="number">8</span>;</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">LoadImageDataFromFile</span><span class="params">(BYTE** imageData, D3D12_RESOURCE_DESC&amp; resourceDescription, LPCWSTR filename, <span class="type">int</span>&amp; bytesPerRow)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	HRESULT hr;</span><br><span class="line"></span><br><span class="line">	<span class="type">static</span> IWICImagingFactory* wicFactory;</span><br><span class="line"></span><br><span class="line">	IWICBitmapDecoder* wicDecoder = <span class="literal">NULL</span>;</span><br><span class="line">	IWICBitmapFrameDecode* wicFrame = <span class="literal">NULL</span>;</span><br><span class="line">	IWICFormatConverter* wicConverter = <span class="literal">NULL</span>;</span><br><span class="line"></span><br><span class="line">	<span class="type">bool</span> imageConverted = <span class="literal">false</span>;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">if</span> (wicFactory == <span class="literal">NULL</span>)</span><br><span class="line">	&#123;</span><br><span class="line">		<span class="built_in">CoInitialize</span>(<span class="literal">NULL</span>);</span><br><span class="line"></span><br><span class="line">		hr = <span class="built_in">CoCreateInstance</span>(</span><br><span class="line">			CLSID_WICImagingFactory,</span><br><span class="line">			<span class="literal">NULL</span>,</span><br><span class="line">			CLSCTX_INPROC_SERVER,</span><br><span class="line">			<span class="built_in">IID_PPV_ARGS</span>(&amp;wicFactory)</span><br><span class="line">		);</span><br><span class="line">		<span class="keyword">if</span> (<span class="built_in">FAILED</span>(hr)) <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">		hr = wicFactory-&gt;<span class="built_in">CreateFormatConverter</span>(&amp;wicConverter);</span><br><span class="line">		<span class="keyword">if</span> (<span class="built_in">FAILED</span>(hr)) <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	hr = wicFactory-&gt;<span class="built_in">CreateDecoderFromFilename</span>(</span><br><span class="line">		filename,                        </span><br><span class="line">		<span class="literal">NULL</span>,                            </span><br><span class="line">		GENERIC_READ,                    </span><br><span class="line">		WICDecodeMetadataCacheOnLoad,    </span><br><span class="line">		&amp;wicDecoder                      </span><br><span class="line">	);</span><br><span class="line">	<span class="keyword">if</span> (<span class="built_in">FAILED</span>(hr)) <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">	hr = wicDecoder-&gt;<span class="built_in">GetFrame</span>(<span class="number">0</span>, &amp;wicFrame);</span><br><span class="line">	<span class="keyword">if</span> (<span class="built_in">FAILED</span>(hr)) <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">	WICPixelFormatGUID pixelFormat;</span><br><span class="line">	hr = wicFrame-&gt;<span class="built_in">GetPixelFormat</span>(&amp;pixelFormat);</span><br><span class="line">	<span class="keyword">if</span> (<span class="built_in">FAILED</span>(hr)) <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">	UINT textureWidth, textureHeight;</span><br><span class="line">	hr = wicFrame-&gt;<span class="built_in">GetSize</span>(&amp;textureWidth, &amp;textureHeight);</span><br><span class="line">	<span class="keyword">if</span> (<span class="built_in">FAILED</span>(hr)) <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">	DXGI_FORMAT dxgiFormat = <span class="built_in">GetDXGIFormatFromWICFormat</span>(pixelFormat);</span><br><span class="line"></span><br><span class="line">	<span class="keyword">if</span> (dxgiFormat == DXGI_FORMAT_UNKNOWN)</span><br><span class="line">	&#123;</span><br><span class="line">		WICPixelFormatGUID convertToPixelFormat = <span class="built_in">GetConvertToWICFormat</span>(pixelFormat);</span><br><span class="line"></span><br><span class="line">		<span class="keyword">if</span> (convertToPixelFormat == GUID_WICPixelFormatDontCare) <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">		dxgiFormat = <span class="built_in">GetDXGIFormatFromWICFormat</span>(convertToPixelFormat);</span><br><span class="line"></span><br><span class="line">		BOOL canConvert = FALSE;</span><br><span class="line">		hr = wicConverter-&gt;<span class="built_in">CanConvert</span>(pixelFormat, convertToPixelFormat, &amp;canConvert);</span><br><span class="line">		<span class="keyword">if</span> (<span class="built_in">FAILED</span>(hr) || !canConvert) <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">		hr = wicConverter-&gt;<span class="built_in">Initialize</span>(wicFrame, convertToPixelFormat, WICBitmapDitherTypeErrorDiffusion, <span class="number">0</span>, <span class="number">0</span>, WICBitmapPaletteTypeCustom);</span><br><span class="line">		<span class="keyword">if</span> (<span class="built_in">FAILED</span>(hr)) <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">		imageConverted = <span class="literal">true</span>;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="type">int</span> bitsPerPixel = <span class="built_in">GetDXGIFormatBitsPerPixel</span>(dxgiFormat);</span><br><span class="line">	bytesPerRow = (textureWidth * bitsPerPixel) / <span class="number">8</span>; </span><br><span class="line">	<span class="type">int</span> imageSize = bytesPerRow * textureHeight; </span><br><span class="line"></span><br><span class="line">	*imageData = (BYTE*)<span class="built_in">malloc</span>(imageSize);</span><br><span class="line"></span><br><span class="line">	<span class="keyword">if</span> (imageConverted)</span><br><span class="line">	&#123;</span><br><span class="line">		hr = wicConverter-&gt;<span class="built_in">CopyPixels</span>(<span class="number">0</span>, bytesPerRow, imageSize, *imageData);</span><br><span class="line">		<span class="keyword">if</span> (<span class="built_in">FAILED</span>(hr)) <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">else</span></span><br><span class="line">	&#123;</span><br><span class="line">		hr = wicFrame-&gt;<span class="built_in">CopyPixels</span>(<span class="number">0</span>, bytesPerRow, imageSize, *imageData);</span><br><span class="line">		<span class="keyword">if</span> (<span class="built_in">FAILED</span>(hr)) <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	resourceDescription = &#123;&#125;;</span><br><span class="line">	resourceDescription.Dimension = D3D12_RESOURCE_DIMENSION_TEXTURE2D;</span><br><span class="line">	resourceDescription.Alignment = <span class="number">0</span>;</span><br><span class="line">	resourceDescription.Width = textureWidth; </span><br><span class="line">	resourceDescription.Height = textureHeight;</span><br><span class="line">	resourceDescription.DepthOrArraySize = <span class="number">1</span>; </span><br><span class="line">	resourceDescription.MipLevels = <span class="number">1</span>; </span><br><span class="line">	resourceDescription.Format = dxgiFormat; </span><br><span class="line">	resourceDescription.SampleDesc.Count = <span class="number">1</span>; </span><br><span class="line">	resourceDescription.SampleDesc.Quality = <span class="number">0</span>; </span><br><span class="line">	resourceDescription.Layout = D3D12_TEXTURE_LAYOUT_UNKNOWN; </span><br><span class="line">	resourceDescription.Flags = D3D12_RESOURCE_FLAG_NONE; </span><br><span class="line"></span><br><span class="line">	<span class="keyword">return</span> imageSize;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="创建描述符堆"><a href="#创建描述符堆" class="headerlink" title="创建描述符堆"></a>创建描述符堆</h2><p>首先创建堆来存放咱们的常量缓冲视图和着色器资源视图。	</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line">D3D12_DESCRIPTOR_HEAP_DESC cbvsrvHeapDesc = &#123;&#125;;</span><br><span class="line">		cbvsrvHeapDesc.NumDescriptors = <span class="number">2</span>;</span><br><span class="line">		cbvsrvHeapDesc.Type = D3D12_DESCRIPTOR_HEAP_TYPE_CBV_SRV_UAV;</span><br><span class="line">		cbvsrvHeapDesc.Flags = D3D12_DESCRIPTOR_HEAP_FLAG_SHADER_VISIBLE;</span><br><span class="line">		<span class="built_in">ThrowIfFailed</span>(device-&gt;<span class="built_in">CreateDescriptorHeap</span>(&amp;cbvsrvHeapDesc, <span class="built_in">IID_PPV_ARGS</span>(&amp;cbvsrvHeap)));</span><br><span class="line">		cbvsrvDescriptorSize = device-&gt;<span class="built_in">GetDescriptorHandleIncrementSize</span>(D3D12_DESCRIPTOR_HEAP_TYPE_CBV_SRV_UAV);</span><br></pre></td></tr></table></figure>

<h2 id="根签名-1"><a href="#根签名-1" class="headerlink" title="根签名"></a>根签名</h2><h3 id="根参数"><a href="#根参数" class="headerlink" title="根参数"></a>根参数</h3><p>创建一个描述符表存放常量缓冲视图和着色器资源视图，然后放入根参数索引为0的位置。</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line">D3D12_FEATURE_DATA_ROOT_SIGNATURE featureData = &#123;&#125;;</span><br><span class="line"></span><br><span class="line">		featureData.HighestVersion = D3D_ROOT_SIGNATURE_VERSION_1_1;</span><br><span class="line"></span><br><span class="line">		<span class="keyword">if</span> (<span class="built_in">FAILED</span>(device-&gt;<span class="built_in">CheckFeatureSupport</span>(D3D12_FEATURE_ROOT_SIGNATURE, &amp;featureData, <span class="built_in">sizeof</span>(featureData))))</span><br><span class="line">		&#123;</span><br><span class="line">			featureData.HighestVersion = D3D_ROOT_SIGNATURE_VERSION_1_0;</span><br><span class="line">		&#125;</span><br><span class="line"></span><br><span class="line">		CD3DX12_DESCRIPTOR_RANGE1 ranges[<span class="number">2</span>];</span><br><span class="line">		CD3DX12_ROOT_PARAMETER1 rootParameters[<span class="number">1</span>];</span><br><span class="line"></span><br><span class="line">		ranges[<span class="number">0</span>].<span class="built_in">Init</span>(D3D12_DESCRIPTOR_RANGE_TYPE_CBV, <span class="number">1</span>, <span class="number">0</span>, <span class="number">0</span>, D3D12_DESCRIPTOR_RANGE_FLAG_DATA_STATIC);</span><br><span class="line">		ranges[<span class="number">1</span>].<span class="built_in">Init</span>(D3D12_DESCRIPTOR_RANGE_TYPE_SRV, <span class="number">1</span>, <span class="number">0</span>, <span class="number">0</span>, D3D12_DESCRIPTOR_RANGE_FLAG_DATA_STATIC);</span><br><span class="line"></span><br><span class="line">		rootParameters[<span class="number">0</span>].<span class="built_in">InitAsDescriptorTable</span>(<span class="number">2</span>, &amp;ranges[<span class="number">0</span>], D3D12_SHADER_VISIBILITY_ALL);</span><br></pre></td></tr></table></figure>

<h3 id="静态采样"><a href="#静态采样" class="headerlink" title="静态采样"></a>静态采样</h3><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line">D3D12_STATIC_SAMPLER_DESC sampler = &#123;&#125;;</span><br><span class="line">		sampler.Filter = D3D12_FILTER_MIN_MAG_MIP_POINT;</span><br><span class="line">		sampler.AddressU = D3D12_TEXTURE_ADDRESS_MODE_BORDER;</span><br><span class="line">		sampler.AddressV = D3D12_TEXTURE_ADDRESS_MODE_BORDER;</span><br><span class="line">		sampler.AddressW = D3D12_TEXTURE_ADDRESS_MODE_BORDER;</span><br><span class="line">		sampler.MipLODBias = <span class="number">0</span>;</span><br><span class="line">		sampler.MaxAnisotropy = <span class="number">0</span>;</span><br><span class="line">		sampler.ComparisonFunc = D3D12_COMPARISON_FUNC_NEVER;</span><br><span class="line">		sampler.BorderColor = D3D12_STATIC_BORDER_COLOR_TRANSPARENT_BLACK;</span><br><span class="line">		sampler.MinLOD = <span class="number">0.0f</span>;</span><br><span class="line">		sampler.MaxLOD = D3D12_FLOAT32_MAX;</span><br><span class="line">		sampler.ShaderRegister = <span class="number">0</span>;</span><br><span class="line">		sampler.RegisterSpace = <span class="number">0</span>;</span><br><span class="line">		sampler.ShaderVisibility = D3D12_SHADER_VISIBILITY_PIXEL;</span><br></pre></td></tr></table></figure>

<h3 id="创建根签名"><a href="#创建根签名" class="headerlink" title="创建根签名"></a>创建根签名</h3><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line">CD3DX12_VERSIONED_ROOT_SIGNATURE_DESC rootSignatureDesc;</span><br><span class="line">		rootSignatureDesc.<span class="built_in">Init_1_1</span>(_countof(rootParameters), rootParameters, <span class="number">1</span>, &amp;sampler, rootSignatureFlags);</span><br><span class="line"></span><br><span class="line">		ComPtr&lt;ID3DBlob&gt; signature;</span><br><span class="line">		ComPtr&lt;ID3DBlob&gt; error;</span><br><span class="line">		<span class="built_in">ThrowIfFailed</span>(<span class="built_in">D3DX12SerializeVersionedRootSignature</span>(&amp;rootSignatureDesc, featureData.HighestVersion, &amp;signature, &amp;error));</span><br><span class="line">		<span class="built_in">ThrowIfFailed</span>(device-&gt;<span class="built_in">CreateRootSignature</span>(<span class="number">0</span>, signature-&gt;<span class="built_in">GetBufferPointer</span>(), signature-&gt;<span class="built_in">GetBufferSize</span>(), <span class="built_in">IID_PPV_ARGS</span>(&amp;rootSignature)));</span><br></pre></td></tr></table></figure>

<h3 id="完整代码"><a href="#完整代码" class="headerlink" title="完整代码"></a>完整代码</h3><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 定义一个用于根签名功能数据的结构</span></span><br><span class="line">D3D12_FEATURE_DATA_ROOT_SIGNATURE featureData = &#123;&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 设置应用程序支持的根签名的最高版本（1.1）</span></span><br><span class="line">featureData.HighestVersion = D3D_ROOT_SIGNATURE_VERSION_1_1;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 检查设备是否支持指定的根签名版本</span></span><br><span class="line"><span class="keyword">if</span> (<span class="built_in">FAILED</span>(device-&gt;<span class="built_in">CheckFeatureSupport</span>(D3D12_FEATURE_ROOT_SIGNATURE, &amp;featureData, <span class="built_in">sizeof</span>(featureData))))</span><br><span class="line">&#123;</span><br><span class="line">    <span class="comment">// 如果不支持，则回退到版本1.0</span></span><br><span class="line">    featureData.HighestVersion = D3D_ROOT_SIGNATURE_VERSION_1_0;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 定义描述符范围数组和根参数数组</span></span><br><span class="line">CD3DX12_DESCRIPTOR_RANGE1 ranges[<span class="number">2</span>];</span><br><span class="line">CD3DX12_ROOT_PARAMETER1 rootParameters[<span class="number">1</span>];</span><br><span class="line"></span><br><span class="line"><span class="comment">// 初始化描述符范围</span></span><br><span class="line">ranges[<span class="number">0</span>].<span class="built_in">Init</span>(D3D12_DESCRIPTOR_RANGE_TYPE_CBV, <span class="number">1</span>, <span class="number">0</span>, <span class="number">0</span>, D3D12_DESCRIPTOR_RANGE_FLAG_DATA_STATIC);</span><br><span class="line">ranges[<span class="number">1</span>].<span class="built_in">Init</span>(D3D12_DESCRIPTOR_RANGE_TYPE_SRV, <span class="number">1</span>, <span class="number">0</span>, <span class="number">0</span>, D3D12_DESCRIPTOR_RANGE_FLAG_DATA_STATIC);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 将根参数初始化为带有两个范围（CBV 和 SRV）的描述符表</span></span><br><span class="line">rootParameters[<span class="number">0</span>].<span class="built_in">InitAsDescriptorTable</span>(<span class="number">2</span>, &amp;ranges[<span class="number">0</span>], D3D12_SHADER_VISIBILITY_ALL);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 定义根签名标志</span></span><br><span class="line">D3D12_ROOT_SIGNATURE_FLAGS rootSignatureFlags =</span><br><span class="line">    D3D12_ROOT_SIGNATURE_FLAG_ALLOW_INPUT_ASSEMBLER_INPUT_LAYOUT |</span><br><span class="line">    D3D12_ROOT_SIGNATURE_FLAG_DENY_HULL_SHADER_ROOT_ACCESS |</span><br><span class="line">    D3D12_ROOT_SIGNATURE_FLAG_DENY_DOMAIN_SHADER_ROOT_ACCESS |</span><br><span class="line">    D3D12_ROOT_SIGNATURE_FLAG_DENY_GEOMETRY_SHADER_ROOT_ACCESS;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 定义静态采样器描述</span></span><br><span class="line">D3D12_STATIC_SAMPLER_DESC sampler = &#123;&#125;;</span><br><span class="line">sampler.Filter = D3D12_FILTER_MIN_MAG_MIP_POINT;</span><br><span class="line">sampler.AddressU = D3D12_TEXTURE_ADDRESS_MODE_BORDER;</span><br><span class="line">sampler.AddressV = D3D12_TEXTURE_ADDRESS_MODE_BORDER;</span><br><span class="line">sampler.AddressW = D3D12_TEXTURE_ADDRESS_MODE_BORDER;</span><br><span class="line">sampler.MipLODBias = <span class="number">0</span>;</span><br><span class="line">sampler.MaxAnisotropy = <span class="number">0</span>;</span><br><span class="line">sampler.ComparisonFunc = D3D12_COMPARISON_FUNC_NEVER;</span><br><span class="line">sampler.BorderColor = D3D12_STATIC_BORDER_COLOR_TRANSPARENT_BLACK;</span><br><span class="line">sampler.MinLOD = <span class="number">0.0f</span>;</span><br><span class="line">sampler.MaxLOD = D3D12_FLOAT32_MAX;</span><br><span class="line">sampler.ShaderRegister = <span class="number">0</span>;</span><br><span class="line">sampler.RegisterSpace = <span class="number">0</span>;</span><br><span class="line">sampler.ShaderVisibility = D3D12_SHADER_VISIBILITY_PIXEL;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 初始化版本化的根签名描述</span></span><br><span class="line">CD3DX12_VERSIONED_ROOT_SIGNATURE_DESC rootSignatureDesc;</span><br><span class="line">rootSignatureDesc.<span class="built_in">Init_1_1</span>(_countof(rootParameters), rootParameters, <span class="number">1</span>, &amp;sampler, rootSignatureFlags);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 将根签名序列化为一个数据 blob</span></span><br><span class="line">ComPtr&lt;ID3DBlob&gt; signature;</span><br><span class="line">ComPtr&lt;ID3DBlob&gt; error;</span><br><span class="line"><span class="built_in">ThrowIfFailed</span>(<span class="built_in">D3DX12SerializeVersionedRootSignature</span>(&amp;rootSignatureDesc, featureData.HighestVersion, &amp;signature, &amp;error));</span><br><span class="line"></span><br><span class="line"><span class="comment">// 从序列化的数据 blob 创建根签名</span></span><br><span class="line"><span class="built_in">ThrowIfFailed</span>(device-&gt;<span class="built_in">CreateRootSignature</span>(<span class="number">0</span>, signature-&gt;<span class="built_in">GetBufferPointer</span>(), signature-&gt;<span class="built_in">GetBufferSize</span>(), <span class="built_in">IID_PPV_ARGS</span>(&amp;rootSignature)));</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h2 id="顶点结构体"><a href="#顶点结构体" class="headerlink" title="顶点结构体"></a>顶点结构体</h2><p>去掉颜色，加上纹理C</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="keyword">struct</span> <span class="title class_">Vertex</span></span><br><span class="line">&#123;</span><br><span class="line">	XMFLOAT3 position;</span><br><span class="line">	XMFLOAT2 texCoord;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>

<h2 id="输入布局"><a href="#输入布局" class="headerlink" title="输入布局"></a>输入布局</h2><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line">D3D12_INPUT_ELEMENT_DESC inputElementDescs[] =</span><br><span class="line">		&#123;</span><br><span class="line">			&#123; <span class="string">&quot;POSITION&quot;</span>, <span class="number">0</span>, DXGI_FORMAT_R32G32B32_FLOAT, <span class="number">0</span>, <span class="number">0</span>, D3D12_INPUT_CLASSIFICATION_PER_VERTEX_DATA, <span class="number">0</span> &#125;,</span><br><span class="line">			&#123; <span class="string">&quot;TEXCOORD&quot;</span>, <span class="number">0</span>, DXGI_FORMAT_R32G32_FLOAT, <span class="number">0</span>, <span class="number">12</span>, D3D12_INPUT_CLASSIFICATION_PER_VERTEX_DATA, <span class="number">0</span> &#125;</span><br><span class="line">		&#125;;</span><br></pre></td></tr></table></figure>

<h2 id="顶点数组-2"><a href="#顶点数组-2" class="headerlink" title="顶点数组"></a>顶点数组</h2><ul>
<li>去掉颜色，加上纹理（瞎写的纹理坐标哦）</li>
</ul>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line">Vertex triangleVertices[] =</span><br><span class="line">		&#123;</span><br><span class="line">			&#123; &#123; <span class="number">-1.0f</span>, <span class="number">-1.0f</span>, <span class="number">-1.0f</span> &#125;, &#123; <span class="number">0.0f</span>, <span class="number">0.0f</span> &#125; &#125;,</span><br><span class="line">			&#123; &#123; <span class="number">-1.0f</span>, +<span class="number">1.0f</span>, <span class="number">-1.0f</span> &#125;, &#123; <span class="number">1.0f</span>, <span class="number">1.0f</span> &#125; &#125;,</span><br><span class="line">			&#123; &#123; +<span class="number">1.0f</span>, +<span class="number">1.0f</span>, <span class="number">-1.0f</span> &#125;, &#123; <span class="number">0.0f</span>, <span class="number">1.0f</span> &#125; &#125;,</span><br><span class="line">			&#123; &#123; +<span class="number">1.0f</span>, <span class="number">-1.0f</span>, <span class="number">-1.0f</span> &#125;, &#123; <span class="number">1.0f</span>, <span class="number">0.0f</span> &#125; &#125;,</span><br><span class="line">			&#123; &#123; <span class="number">-1.0f</span>, <span class="number">-1.0f</span>, +<span class="number">1.0f</span> &#125;, &#123; <span class="number">0.0f</span>, <span class="number">1.0f</span> &#125; &#125;,</span><br><span class="line">			&#123; &#123; <span class="number">-1.0f</span>, +<span class="number">1.0f</span>, +<span class="number">1.0f</span> &#125;, &#123; <span class="number">1.0f</span>, <span class="number">0.0f</span> &#125; &#125;,</span><br><span class="line">			&#123; &#123; +<span class="number">1.0f</span>, +<span class="number">1.0f</span>, +<span class="number">1.0f</span> &#125;, &#123; <span class="number">0.0f</span>, <span class="number">0.0f</span> &#125; &#125;,</span><br><span class="line">			&#123; &#123; +<span class="number">1.0f</span>, <span class="number">-1.0f</span>, +<span class="number">1.0f</span> &#125;, &#123; <span class="number">1.0f</span>, <span class="number">1.0f</span> &#125; &#125;</span><br><span class="line">		&#125;;</span><br></pre></td></tr></table></figure>

<h2 id="加载图像数据"><a href="#加载图像数据" class="headerlink" title="加载图像数据"></a>加载图像数据</h2><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line">              D3D12_RESOURCE_DESC textureDesc;</span><br><span class="line"><span class="type">int</span> imageBytesPerRow;</span><br><span class="line"><span class="type">int</span> imageSize = <span class="built_in">LoadImageDataFromFile</span>(&amp;imageData, textureDesc, <span class="string">L&quot;Resources/wall.jpg&quot;</span>, imageBytesPerRow);</span><br></pre></td></tr></table></figure>

<h2 id="创建纹理资源"><a href="#创建纹理资源" class="headerlink" title="创建纹理资源"></a>创建纹理资源</h2><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line">CD3DX12_HEAP_PROPERTIES heapProperties = <span class="built_in">CD3DX12_HEAP_PROPERTIES</span>(D3D12_HEAP_TYPE_DEFAULT);</span><br><span class="line">		<span class="built_in">ThrowIfFailed</span>(device-&gt;<span class="built_in">CreateCommittedResource</span>(</span><br><span class="line">			&amp;heapProperties,</span><br><span class="line">			D3D12_HEAP_FLAG_NONE, </span><br><span class="line">			&amp;textureDesc, </span><br><span class="line">			D3D12_RESOURCE_STATE_COPY_DEST,</span><br><span class="line">			<span class="literal">nullptr</span>,</span><br><span class="line">			<span class="built_in">IID_PPV_ARGS</span>(&amp;textureBuffer)));</span><br><span class="line"></span><br><span class="line">		<span class="type">const</span> UINT64 uploadBufferSize = <span class="built_in">GetRequiredIntermediateSize</span>(textureBuffer.<span class="built_in">Get</span>(), <span class="number">0</span>, <span class="number">1</span>);</span><br><span class="line"></span><br><span class="line">CD3DX12_HEAP_PROPERTIES heapProperties2 = <span class="built_in">CD3DX12_HEAP_PROPERTIES</span>(D3D12_HEAP_TYPE_UPLOAD);</span><br><span class="line">		CD3DX12_RESOURCE_DESC resourceDesc = CD3DX12_RESOURCE_DESC::<span class="built_in">Buffer</span>(uploadBufferSize);</span><br><span class="line">		<span class="built_in">ThrowIfFailed</span>(device-&gt;<span class="built_in">CreateCommittedResource</span>(</span><br><span class="line">			&amp;heapProperties2,</span><br><span class="line">			D3D12_HEAP_FLAG_NONE,</span><br><span class="line">			&amp;resourceDesc,</span><br><span class="line">			D3D12_RESOURCE_STATE_GENERIC_READ, </span><br><span class="line">			<span class="literal">nullptr</span>,</span><br><span class="line">			<span class="built_in">IID_PPV_ARGS</span>(&amp;textureBufferUploadHeap)));</span><br></pre></td></tr></table></figure>

<p><strong>把资源从上传堆（CPU和GPU都可以访问）拷贝到默认堆（只能GPU访问），然后对资源设置屏障（也就是这个资源干什么用的）。</strong></p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 定义纹理数据结构，并初始化为零</span></span><br><span class="line">D3D12_SUBRESOURCE_DATA textureData = &#123;&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 设置纹理数据指针，指向图像数据的第一个元素</span></span><br><span class="line">textureData.pData = &amp;imageData[<span class="number">0</span>];</span><br><span class="line"></span><br><span class="line"><span class="comment">// 设置纹理数据的行间距，即每一行的字节数</span></span><br><span class="line">textureData.RowPitch = imageBytesPerRow;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 设置纹理数据的层间距，即整个纹理的字节数</span></span><br><span class="line">textureData.SlicePitch = imageBytesPerRow * textureDesc.Height;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 使用UpdateSubresources函数将纹理数据从上传堆复制到默认堆</span></span><br><span class="line"><span class="built_in">UpdateSubresources</span>(commandList.<span class="built_in">Get</span>(), textureBuffer.<span class="built_in">Get</span>(), textureBufferUploadHeap.<span class="built_in">Get</span>(), <span class="number">0</span>, <span class="number">0</span>, <span class="number">1</span>, &amp;textureData);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 定义资源屏障对象，用于转换纹理缓冲区的状态</span></span><br><span class="line">CD3DX12_RESOURCE_BARRIER resBarrier = CD3DX12_RESOURCE_BARRIER::<span class="built_in">Transition</span>(textureBuffer.<span class="built_in">Get</span>(), D3D12_RESOURCE_STATE_COPY_DEST, D3D12_RESOURCE_STATE_NON_PIXEL_SHADER_RESOURCE | D3D12_RESOURCE_STATE_PIXEL_SHADER_RESOURCE);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 将纹理缓冲区状态转换为非像素着色器资源状态和像素着色器资源状态</span></span><br><span class="line">commandList-&gt;<span class="built_in">ResourceBarrier</span>(<span class="number">1</span>, &amp;resBarrier);</span><br></pre></td></tr></table></figure>

<h2 id="创建着色器资源视图"><a href="#创建着色器资源视图" class="headerlink" title="创建着色器资源视图"></a>创建着色器资源视图</h2><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 定义着色器资源视图描述结构体，并初始化为零</span></span><br><span class="line">D3D12_SHADER_RESOURCE_VIEW_DESC srvDesc = &#123;&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 设置着色器资源视图描述中的成员</span></span><br><span class="line"><span class="comment">// 使用默认的着色器4分量映射</span></span><br><span class="line">srvDesc.Shader4ComponentMapping = D3D12_DEFAULT_SHADER_4_COMPONENT_MAPPING;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 设置纹理资源的格式与原始纹理一致</span></span><br><span class="line">srvDesc.Format = textureDesc.Format;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 设置视图维度为2D纹理</span></span><br><span class="line">srvDesc.ViewDimension = D3D12_SRV_DIMENSION_TEXTURE2D;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 设置纹理资源的Mip级别数量为1</span></span><br><span class="line">srvDesc.Texture2D.MipLevels = <span class="number">1</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 获取着色器资源视图描述的CPU描述符句柄</span></span><br><span class="line"><span class="function">CD3DX12_CPU_DESCRIPTOR_HANDLE <span class="title">cbvsrvHandle</span><span class="params">(cbvsrvHeap-&gt;GetCPUDescriptorHandleForHeapStart())</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 将描述符句柄偏移至正确的位置（这里假设在堆中已经有一个CBV（常量缓冲区视图））</span></span><br><span class="line">cbvsrvHandle.<span class="built_in">Offset</span>(<span class="number">1</span>, cbvsrvDescriptorSize);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 使用设备创建着色器资源视图</span></span><br><span class="line">device-&gt;<span class="built_in">CreateShaderResourceView</span>(textureBuffer.<span class="built_in">Get</span>(), &amp;srvDesc, cbvsrvHandle);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 关闭命令列表</span></span><br><span class="line"><span class="built_in">ThrowIfFailed</span>(commandList-&gt;<span class="built_in">Close</span>());</span><br><span class="line"></span><br><span class="line"><span class="comment">// 提交命令列表以执行复制和状态转换操作</span></span><br><span class="line">ID3D12CommandList* ppCommandLists[] = &#123; commandList.<span class="built_in">Get</span>() &#125;;</span><br><span class="line">commandQueue-&gt;<span class="built_in">ExecuteCommandLists</span>(_countof(ppCommandLists), ppCommandLists);</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h2 id="设置根签名和描述符表命令"><a href="#设置根签名和描述符表命令" class="headerlink" title="设置根签名和描述符表命令"></a>设置根签名和描述符表命令</h2><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 将命令列表与根签名关联，以便在绘制时使用正确的根签名</span></span><br><span class="line">commandList-&gt;<span class="built_in">SetGraphicsRootSignature</span>(rootSignature.<span class="built_in">Get</span>());</span><br><span class="line"></span><br><span class="line"><span class="comment">// 将着色器资源堆（包含着色器资源视图和常量缓冲区视图）与命令列表关联，</span></span><br><span class="line"><span class="comment">// 这样在绘制时可以使用着色器资源和常量缓冲区</span></span><br><span class="line">ID3D12DescriptorHeap* ppHeaps[] = &#123; cbvsrvHeap.<span class="built_in">Get</span>() &#125;;</span><br><span class="line">commandList-&gt;<span class="built_in">SetDescriptorHeaps</span>(_countof(ppHeaps), ppHeaps);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 将着色器资源堆的第一个描述符表（索引为0）绑定到图形管道的根参数（索引为0）上</span></span><br><span class="line"><span class="comment">// 这样在着色器代码中就可以使用该描述符表中的着色器资源</span></span><br><span class="line">commandList-&gt;<span class="built_in">SetGraphicsRootDescriptorTable</span>(<span class="number">0</span>, cbvsrvHeap-&gt;<span class="built_in">GetGPUDescriptorHandleForHeapStart</span>());</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h2 id="修改着色器代码"><a href="#修改着色器代码" class="headerlink" title="修改着色器代码"></a>修改着色器代码</h2><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line">Texture2D t1 : <span class="built_in">register</span>(t0);</span><br><span class="line">SamplerState s1 : <span class="built_in">register</span>(s0);</span><br><span class="line"></span><br><span class="line">cbuffer SceneConstantBuffer : <span class="built_in">register</span>(b0)</span><br><span class="line">&#123;</span><br><span class="line">    float4x4 WorldViewProj;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">struct</span> <span class="title class_">PSInput</span></span><br><span class="line">&#123;</span><br><span class="line">    float4 position : SV_POSITION;</span><br><span class="line">    float2 texCoord : TEXCOORD;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="function">PSInput <span class="title">VSMain</span><span class="params">(float4 position : POSITION, float2 texCoord : TEXCOORD)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    PSInput result;</span><br><span class="line"></span><br><span class="line">    result.position = <span class="built_in">mul</span>(position,WorldViewProj);</span><br><span class="line">    result.texCoord = texCoord;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> result;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function">float4 <span class="title">PSMain</span><span class="params">(PSInput input)</span> : SV_TARGET</span></span><br><span class="line"><span class="function">&#123;</span></span><br><span class="line">    <span class="keyword">return</span> t1.<span class="built_in">Sample</span>(s1, input.texCoord);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="成果"><a href="#成果" class="headerlink" title="成果"></a>成果</h2><p>我是非常满意的</p>
<p><img data-src="https://cdn.jsdelivr.net/gh/JcMarical/mapstorage/images/image-20230720223522198.png" alt="image-20230720223522198"></p>
<h1 id="十一-Phong和Blinn-Phong光照模型"><a href="#十一-Phong和Blinn-Phong光照模型" class="headerlink" title="十一 Phong和Blinn-Phong光照模型"></a>十一 Phong和Blinn-Phong光照模型</h1><h2 id="Phone"><a href="#Phone" class="headerlink" title="Phone"></a>Phone</h2><h3 id="顶点结构体-1"><a href="#顶点结构体-1" class="headerlink" title="顶点结构体"></a>顶点结构体</h3><p>首先修改顶点结构体添加法线。</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="keyword">struct</span> <span class="title class_">Vertex</span></span><br><span class="line">&#123;</span><br><span class="line">	<span class="built_in">Vertex</span>(<span class="type">float</span> x, <span class="type">float</span> y, <span class="type">float</span> z,<span class="type">float</span> nx,<span class="type">float</span> ny,<span class="type">float</span> nz, <span class="type">float</span> u, <span class="type">float</span> v) : <span class="built_in">position</span>(x, y, z), <span class="built_in">normal</span>(nx,ny,nz), <span class="built_in">texCoord</span>(u, v) &#123;&#125;</span><br><span class="line">	XMFLOAT3 position;</span><br><span class="line">	XMFLOAT3 normal;</span><br><span class="line">	XMFLOAT2 texCoord;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>

<h3 id="顶点结构体数组"><a href="#顶点结构体数组" class="headerlink" title="顶点结构体数组"></a>顶点结构体数组</h3><p>因为每一个顶点都有自己的法线，所以咱们得使用36个顶点</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line">Vertex triangleVertices[] =</span><br><span class="line">		&#123;</span><br><span class="line">			<span class="comment">// front face</span></span><br><span class="line">			&#123; <span class="number">-0.5f</span>,  <span class="number">0.5f</span>, <span class="number">-0.5f</span>, <span class="number">0.0f</span>, <span class="number">0.0f</span>, <span class="number">-1.0f</span>, <span class="number">0.0f</span>, <span class="number">0.0f</span> &#125;,</span><br><span class="line">			&#123;  <span class="number">0.5f</span>, <span class="number">-0.5f</span>, <span class="number">-0.5f</span>, <span class="number">0.0f</span>, <span class="number">0.0f</span>, <span class="number">-1.0f</span>, <span class="number">1.0f</span>, <span class="number">1.0f</span> &#125;,</span><br><span class="line">			&#123; <span class="number">-0.5f</span>, <span class="number">-0.5f</span>, <span class="number">-0.5f</span>, <span class="number">0.0f</span>, <span class="number">0.0f</span>, <span class="number">-1.0f</span>, <span class="number">0.0f</span>, <span class="number">1.0f</span> &#125;,</span><br><span class="line">			&#123;  <span class="number">0.5f</span>,  <span class="number">0.5f</span>, <span class="number">-0.5f</span>, <span class="number">0.0f</span>, <span class="number">0.0f</span>, <span class="number">-1.0f</span>, <span class="number">1.0f</span>, <span class="number">0.0f</span> &#125;,</span><br><span class="line"></span><br><span class="line">			<span class="comment">// right side face</span></span><br><span class="line">			&#123;  <span class="number">0.5f</span>, <span class="number">-0.5f</span>, <span class="number">-0.5f</span>, <span class="number">1.0f</span>, <span class="number">0.0f</span>, <span class="number">0.0f</span>, <span class="number">0.0f</span>, <span class="number">1.0f</span> &#125;,</span><br><span class="line">			&#123;  <span class="number">0.5f</span>,  <span class="number">0.5f</span>,  <span class="number">0.5f</span>, <span class="number">1.0f</span>, <span class="number">0.0f</span>, <span class="number">0.0f</span>, <span class="number">1.0f</span>, <span class="number">0.0f</span> &#125;,</span><br><span class="line">			&#123;  <span class="number">0.5f</span>, <span class="number">-0.5f</span>,  <span class="number">0.5f</span>, <span class="number">1.0f</span>, <span class="number">0.0f</span>, <span class="number">0.0f</span>, <span class="number">1.0f</span>, <span class="number">1.0f</span> &#125;,</span><br><span class="line">			&#123;  <span class="number">0.5f</span>,  <span class="number">0.5f</span>, <span class="number">-0.5f</span>, <span class="number">1.0f</span>, <span class="number">0.0f</span>, <span class="number">0.0f</span>, <span class="number">0.0f</span>, <span class="number">0.0f</span> &#125;,</span><br><span class="line"></span><br><span class="line">			<span class="comment">// left side face</span></span><br><span class="line">			&#123; <span class="number">-0.5f</span>,  <span class="number">0.5f</span>,  <span class="number">0.5f</span>, <span class="number">-1.0f</span>, <span class="number">0.0f</span>, <span class="number">0.0f</span>, <span class="number">0.0f</span>, <span class="number">0.0f</span> &#125;,</span><br><span class="line">			&#123; <span class="number">-0.5f</span>, <span class="number">-0.5f</span>, <span class="number">-0.5f</span>, <span class="number">-1.0f</span>, <span class="number">0.0f</span>, <span class="number">0.0f</span>, <span class="number">1.0f</span>, <span class="number">1.0f</span> &#125;,</span><br><span class="line">			&#123; <span class="number">-0.5f</span>, <span class="number">-0.5f</span>,  <span class="number">0.5f</span>, <span class="number">-1.0f</span>, <span class="number">0.0f</span>, <span class="number">0.0f</span>, <span class="number">0.0f</span>, <span class="number">1.0f</span> &#125;,</span><br><span class="line">			&#123; <span class="number">-0.5f</span>,  <span class="number">0.5f</span>, <span class="number">-0.5f</span>, <span class="number">-1.0f</span>, <span class="number">0.0f</span>, <span class="number">0.0f</span>, <span class="number">1.0f</span>, <span class="number">0.0f</span> &#125;,</span><br><span class="line"></span><br><span class="line">			<span class="comment">// back face</span></span><br><span class="line">			&#123;  <span class="number">0.5f</span>,  <span class="number">0.5f</span>,  <span class="number">0.5f</span>, <span class="number">0.0f</span>, <span class="number">0.0f</span>, <span class="number">1.0f</span>, <span class="number">0.0f</span>, <span class="number">0.0f</span> &#125;,</span><br><span class="line">			&#123; <span class="number">-0.5f</span>, <span class="number">-0.5f</span>,  <span class="number">0.5f</span>, <span class="number">0.0f</span>, <span class="number">0.0f</span>, <span class="number">1.0f</span>, <span class="number">1.0f</span>, <span class="number">1.0f</span> &#125;,</span><br><span class="line">			&#123;  <span class="number">0.5f</span>, <span class="number">-0.5f</span>,  <span class="number">0.5f</span>, <span class="number">0.0f</span>, <span class="number">0.0f</span>, <span class="number">1.0f</span>, <span class="number">0.0f</span>, <span class="number">1.0f</span> &#125;,</span><br><span class="line">			&#123; <span class="number">-0.5f</span>,  <span class="number">0.5f</span>,  <span class="number">0.5f</span>, <span class="number">0.0f</span>, <span class="number">0.0f</span>, <span class="number">1.0f</span>, <span class="number">1.0f</span>, <span class="number">0.0f</span> &#125;,</span><br><span class="line"></span><br><span class="line">			<span class="comment">// top face</span></span><br><span class="line">			&#123; <span class="number">-0.5f</span>,  <span class="number">0.5f</span>, <span class="number">-0.5f</span>, <span class="number">0.0f</span>, <span class="number">1.0f</span>, <span class="number">0.0f</span>, <span class="number">0.0f</span>, <span class="number">1.0f</span> &#125;,</span><br><span class="line">			&#123;  <span class="number">0.5f</span>,  <span class="number">0.5f</span>,  <span class="number">0.5f</span>, <span class="number">0.0f</span>, <span class="number">1.0f</span>, <span class="number">0.0f</span>, <span class="number">1.0f</span>, <span class="number">0.0f</span> &#125;,</span><br><span class="line">			&#123;  <span class="number">0.5f</span>,  <span class="number">0.5f</span>, <span class="number">-0.5f</span>, <span class="number">0.0f</span>, <span class="number">1.0f</span>, <span class="number">0.0f</span>, <span class="number">1.0f</span>, <span class="number">1.0f</span> &#125;,</span><br><span class="line">			&#123; <span class="number">-0.5f</span>,  <span class="number">0.5f</span>,  <span class="number">0.5f</span>, <span class="number">0.0f</span>, <span class="number">1.0f</span>, <span class="number">0.0f</span>, <span class="number">0.0f</span>, <span class="number">0.0f</span> &#125;,</span><br><span class="line"></span><br><span class="line">			<span class="comment">// bottom face</span></span><br><span class="line">			&#123;  <span class="number">0.5f</span>, <span class="number">-0.5f</span>,  <span class="number">0.5f</span>, <span class="number">0.0f</span>, <span class="number">-1.0f</span>, <span class="number">0.0f</span>, <span class="number">0.0f</span>, <span class="number">0.0f</span> &#125;,</span><br><span class="line">			&#123; <span class="number">-0.5f</span>, <span class="number">-0.5f</span>, <span class="number">-0.5f</span>, <span class="number">0.0f</span>, <span class="number">-1.0f</span>, <span class="number">0.0f</span>, <span class="number">1.0f</span>, <span class="number">1.0f</span> &#125;,</span><br><span class="line">			&#123;  <span class="number">0.5f</span>, <span class="number">-0.5f</span>, <span class="number">-0.5f</span>, <span class="number">0.0f</span>, <span class="number">-1.0f</span>, <span class="number">0.0f</span>, <span class="number">0.0f</span>, <span class="number">1.0f</span> &#125;,</span><br><span class="line">			&#123; <span class="number">-0.5f</span>, <span class="number">-0.5f</span>,  <span class="number">0.5f</span>, <span class="number">0.0f</span>, <span class="number">-1.0f</span>, <span class="number">0.0f</span>, <span class="number">1.0f</span>, <span class="number">0.0f</span> &#125;,</span><br><span class="line">		&#125;;</span><br></pre></td></tr></table></figure>

<h3 id="常量缓存-2"><a href="#常量缓存-2" class="headerlink" title="常量缓存"></a>常量缓存</h3><figure class="highlight text"><table><tr><td class="code"><pre><span class="line">struct SceneConstantBuffer</span><br><span class="line">&#123;</span><br><span class="line">	XMFLOAT4X4 Model;</span><br><span class="line">	XMFLOAT4X4 MVP;</span><br><span class="line">	XMFLOAT3 lightColor;</span><br><span class="line">	float padding1;</span><br><span class="line">	XMFLOAT3 lightPosition;</span><br><span class="line">	float padding2;</span><br><span class="line">	XMFLOAT3 viewPosition;</span><br><span class="line">	float padding3;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>

<h3 id="顶点索引数组"><a href="#顶点索引数组" class="headerlink" title="顶点索引数组"></a>顶点索引数组</h3><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line">DWORD triangleIndexs[]</span><br><span class="line">		&#123;</span><br><span class="line">			<span class="comment">// front face</span></span><br><span class="line">			 <span class="number">0</span>, <span class="number">1</span>, <span class="number">2</span>, <span class="comment">// first triangle</span></span><br><span class="line">			 <span class="number">0</span>, <span class="number">3</span>, <span class="number">1</span>, <span class="comment">// second triangle</span></span><br><span class="line"></span><br><span class="line">			 <span class="comment">// left face</span></span><br><span class="line">			 <span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>, <span class="comment">// first triangle</span></span><br><span class="line">			 <span class="number">4</span>, <span class="number">7</span>, <span class="number">5</span>, <span class="comment">// second triangle</span></span><br><span class="line"></span><br><span class="line">			 <span class="comment">// right face</span></span><br><span class="line">			 <span class="number">8</span>, <span class="number">9</span>, <span class="number">10</span>, <span class="comment">// first triangle</span></span><br><span class="line">			 <span class="number">8</span>, <span class="number">11</span>, <span class="number">9</span>, <span class="comment">// second triangle</span></span><br><span class="line"></span><br><span class="line">			 <span class="comment">// back face</span></span><br><span class="line">			 <span class="number">12</span>, <span class="number">13</span>, <span class="number">14</span>, <span class="comment">// first triangle</span></span><br><span class="line">			 <span class="number">12</span>, <span class="number">15</span>, <span class="number">13</span>, <span class="comment">// second triangle</span></span><br><span class="line"></span><br><span class="line">			 <span class="comment">// top face</span></span><br><span class="line">			 <span class="number">16</span>, <span class="number">17</span>, <span class="number">18</span>, <span class="comment">// first triangle</span></span><br><span class="line">			 <span class="number">16</span>, <span class="number">19</span>, <span class="number">17</span>, <span class="comment">// second triangle</span></span><br><span class="line"></span><br><span class="line">			 <span class="comment">// bottom face</span></span><br><span class="line">			 <span class="number">20</span>, <span class="number">21</span>, <span class="number">22</span>, <span class="comment">// first triangle</span></span><br><span class="line">			 <span class="number">20</span>, <span class="number">23</span>, <span class="number">21</span>, <span class="comment">// second triangle</span></span><br><span class="line">		&#125;;</span><br></pre></td></tr></table></figure>

<h3 id="OnUpdate-1"><a href="#OnUpdate-1" class="headerlink" title="OnUpdate"></a>OnUpdate</h3><p>修改OnUpdate方法，去掉背景颜色更新的数据，加上光位置运动的数据，并且把Phone光照模型需要的数据通过常量缓冲传递过去。</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="type">void</span> <span class="title">OnUpdate</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">if</span> (offset &lt;= <span class="number">3.0f</span> &amp;&amp; isOffset)</span><br><span class="line">	&#123;</span><br><span class="line">		offset += <span class="number">0.01f</span>;</span><br><span class="line">		isOffset = <span class="literal">true</span>;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">else</span></span><br><span class="line">	&#123;</span><br><span class="line">		offset -= <span class="number">0.01f</span>;</span><br><span class="line">		offset &lt;= <span class="number">-3</span> ? isOffset = <span class="literal">true</span> : isOffset = <span class="literal">false</span>;</span><br><span class="line"></span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	XMVECTOR pos = <span class="built_in">XMVectorSet</span>(<span class="number">0.0f</span>, <span class="number">5.0f</span>, <span class="number">-5.0f</span>, <span class="number">1.0f</span>);</span><br><span class="line">	XMVECTOR target = <span class="built_in">XMVectorSet</span>(<span class="number">0.0f</span>, <span class="number">0.0f</span>, <span class="number">0.0f</span>, <span class="number">1.0f</span>);</span><br><span class="line">	XMVECTOR up = <span class="built_in">XMVectorSet</span>(<span class="number">0.0f</span>, <span class="number">1.0f</span>, <span class="number">0.0f</span>, <span class="number">0.0f</span>);</span><br><span class="line"></span><br><span class="line">	XMMATRIX v = <span class="built_in">XMMatrixLookAtLH</span>(pos, target, up);</span><br><span class="line"></span><br><span class="line">	XMMATRIX m = <span class="built_in">XMMatrixIdentity</span>();</span><br><span class="line">	XMMATRIX p = <span class="built_in">XMMatrixPerspectiveFovLH</span>(XM_PIDIV4,width/height,<span class="number">1.0f</span>,<span class="number">1000.0f</span>);</span><br><span class="line">	XMMATRIX MVP = m * v * p;</span><br><span class="line"></span><br><span class="line">	SceneConstantBuffer objConstants;</span><br><span class="line">	<span class="built_in">XMStoreFloat4x4</span>(&amp;objConstants.Model, <span class="built_in">XMMatrixTranspose</span>(m));</span><br><span class="line">	<span class="built_in">XMStoreFloat4x4</span>(&amp;objConstants.MVP, <span class="built_in">XMMatrixTranspose</span>(MVP));</span><br><span class="line">	objConstants.lightColor = &#123; <span class="number">1.0f</span>,<span class="number">1.0f</span>,<span class="number">1.0f</span> &#125;;</span><br><span class="line">	objConstants.lightPosition = &#123; <span class="number">1.0f</span>+offset, <span class="number">1.0f</span>, <span class="number">2.0f</span> &#125;;</span><br><span class="line">	objConstants.viewPosition = &#123; <span class="number">0.0f</span>, <span class="number">1.0f</span>, <span class="number">-3.0f</span> &#125;;</span><br><span class="line">	<span class="built_in">memcpy</span>(pCbvDataBegin, &amp;objConstants, <span class="built_in">sizeof</span>(objConstants));</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="添加命令-1"><a href="#添加命令-1" class="headerlink" title="添加命令"></a>添加命令</h3><p>颜色</p>
<pre><code>//const float clearColor[] = &#123; color[0], color[1], color[2], 1.0f &#125;;
const float clearColor[] = &#123; 0.0f, 0.0f, 0.0f, 1.0f &#125;;
</code></pre>
<h3 id="管线对象-1"><a href="#管线对象-1" class="headerlink" title="管线对象"></a>管线对象</h3><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line">D3D12_INPUT_ELEMENT_DESC inputElementDescs[] =</span><br><span class="line">		&#123;</span><br><span class="line">			&#123; <span class="string">&quot;POSITION&quot;</span>, <span class="number">0</span>, DXGI_FORMAT_R32G32B32_FLOAT, <span class="number">0</span>, <span class="number">0</span>, D3D12_INPUT_CLASSIFICATION_PER_VERTEX_DATA, <span class="number">0</span> &#125;,</span><br><span class="line">			&#123; <span class="string">&quot;NORMAL&quot;</span>, <span class="number">0</span>, DXGI_FORMAT_R32G32B32_FLOAT, <span class="number">0</span>, <span class="number">12</span>, D3D12_INPUT_CLASSIFICATION_PER_VERTEX_DATA, <span class="number">0</span> &#125;,</span><br><span class="line">			&#123; <span class="string">&quot;TEXCOORD&quot;</span>, <span class="number">0</span>, DXGI_FORMAT_R32G32_FLOAT, <span class="number">0</span>, <span class="number">24</span>, D3D12_INPUT_CLASSIFICATION_PER_VERTEX_DATA, <span class="number">0</span> &#125;<span class="comment">//记得变为24；</span></span><br><span class="line">		&#125;;</span><br></pre></td></tr></table></figure>



<h3 id="着色器-1"><a href="#着色器-1" class="headerlink" title="着色器"></a>着色器</h3><p>修改着色器，完成咱们的Phone着色模型，这里需要注意一个点，那就是法线。</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line">Texture2D t1 : <span class="built_in">register</span>(t0);</span><br><span class="line">SamplerState s1 : <span class="built_in">register</span>(s0);</span><br><span class="line"></span><br><span class="line">cbuffer SceneConstantBuffer : <span class="built_in">register</span>(b0)</span><br><span class="line">&#123;</span><br><span class="line">    float4x4 Model;</span><br><span class="line">    float4x4 MVP;</span><br><span class="line">    float3 lightColor;</span><br><span class="line">    float3 lightPosition;</span><br><span class="line">    float3 viewPosition;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">struct</span> <span class="title class_">PSInput</span></span><br><span class="line">&#123;</span><br><span class="line">    float4 position : SV_POSITION;</span><br><span class="line">    float2 texCoord : TEXCOORD;</span><br><span class="line">    float3 normal : NORMAL;</span><br><span class="line">    float4 worldPosition : POSITION;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="function">PSInput <span class="title">VSMain</span><span class="params">(float4 position : POSITION, float3 normal : NORMAL, float2 texCoord : TEXCOORD)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    PSInput result;</span><br><span class="line"></span><br><span class="line">    result.worldPosition = <span class="built_in">mul</span>(position, Model);</span><br><span class="line">    result.position = <span class="built_in">mul</span>(position, MVP);</span><br><span class="line">    result.texCoord = texCoord;</span><br><span class="line">    result.normal = normal; <span class="comment">//如果物体进行了非等比缩放，这里需要对法线进行模型矩阵左上角的逆矩阵的转置矩阵变换。</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> result;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function">float4 <span class="title">PSMain</span><span class="params">(PSInput input)</span> : SV_TARGET</span></span><br><span class="line"><span class="function">&#123;</span></span><br><span class="line">    float4 color = t1.<span class="built_in">Sample</span>(s1, input.texCoord);</span><br><span class="line">    <span class="comment">//ambient</span></span><br><span class="line">    <span class="type">float</span> ambientStrength = <span class="number">0.1</span>;</span><br><span class="line">    float3 ambient = <span class="built_in">mul</span>(ambientStrength, lightColor);</span><br><span class="line">  	</span><br><span class="line">    <span class="comment">// diffuse </span></span><br><span class="line">    float3 norm = <span class="built_in">normalize</span>(input.normal);</span><br><span class="line">    float3 lightDir = <span class="built_in">normalize</span>(lightPosition - viewPosition);</span><br><span class="line">    <span class="type">float</span> diff = <span class="built_in">max</span>(<span class="built_in">dot</span>(norm, lightDir), <span class="number">0.0</span>);</span><br><span class="line">    float3 diffuse = <span class="built_in">mul</span>(diff, lightColor);</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// specular</span></span><br><span class="line">    <span class="type">float</span> specularStrength = <span class="number">0.5</span>;</span><br><span class="line">    float3 viewDir = <span class="built_in">normalize</span>(viewPosition - input.worldPosition.xyz);</span><br><span class="line">    float3 reflectDir = <span class="built_in">reflect</span>(-lightDir, norm);</span><br><span class="line">    <span class="type">float</span> spec = <span class="built_in">pow</span>(<span class="built_in">max</span>(<span class="built_in">dot</span>(viewDir, reflectDir), <span class="number">0.0</span>), <span class="number">32</span>);</span><br><span class="line">    float3 specular = <span class="built_in">mul</span>(<span class="built_in">mul</span>(specularStrength, spec), lightColor);</span><br><span class="line">        </span><br><span class="line">    color = <span class="built_in">mul</span>((ambient + diffuse + specular), color.xyz);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> color;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="Blinn-Phong"><a href="#Blinn-Phong" class="headerlink" title="Blinn-Phong"></a>Blinn-Phong</h2><p>其实Blinn-Phong和Phong效果差不多，就是提升了点性能。</p>
<p>其他东西都不变，着色器修改一下反射光部分就可以了。</p>
<h3 id="着色器代码"><a href="#着色器代码" class="headerlink" title="着色器代码"></a>着色器代码</h3><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line">Texture2D t1 : <span class="built_in">register</span>(t0);</span><br><span class="line">SamplerState s1 : <span class="built_in">register</span>(s0);</span><br><span class="line"></span><br><span class="line">cbuffer SceneConstantBuffer : <span class="built_in">register</span>(b0)</span><br><span class="line">&#123;</span><br><span class="line">    float4x4 Model;</span><br><span class="line">    float4x4 MVP;</span><br><span class="line">    float3 lightColor;</span><br><span class="line">    float3 lightPosition;</span><br><span class="line">    float3 viewPosition;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">struct</span> <span class="title class_">PSInput</span></span><br><span class="line">&#123;</span><br><span class="line">    float4 position : SV_POSITION;</span><br><span class="line">    float2 texCoord : TEXCOORD;</span><br><span class="line">    float3 normal : NORMAL;</span><br><span class="line">    float4 worldPosition : POSITION;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="function">PSInput <span class="title">VSMain</span><span class="params">(float4 position : POSITION, float3 normal : NORMAL, float2 texCoord : TEXCOORD)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    PSInput result;</span><br><span class="line"></span><br><span class="line">    result.worldPosition = <span class="built_in">mul</span>(position, Model);</span><br><span class="line">    result.position = <span class="built_in">mul</span>(position, MVP);</span><br><span class="line">    result.texCoord = texCoord;</span><br><span class="line">    result.normal = normal; <span class="comment">//如果物体进行了非等比缩放，这里需要对法线进行模型矩阵左上角的逆矩阵的转置矩阵变换。</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> result;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function">float4 <span class="title">PSMain</span><span class="params">(PSInput input)</span> : SV_TARGET</span></span><br><span class="line"><span class="function">&#123;</span></span><br><span class="line">    float4 color = t1.<span class="built_in">Sample</span>(s1, input.texCoord);</span><br><span class="line">    <span class="comment">//ambient</span></span><br><span class="line">    <span class="type">float</span> ambientStrength = <span class="number">0.1</span>;</span><br><span class="line">    float3 ambient = <span class="built_in">mul</span>(ambientStrength, lightColor);</span><br><span class="line">  	</span><br><span class="line">    <span class="comment">// diffuse </span></span><br><span class="line">    float3 norm = <span class="built_in">normalize</span>(input.normal);</span><br><span class="line">    float3 lightDir = <span class="built_in">normalize</span>(lightPosition - viewPosition);</span><br><span class="line">    <span class="type">float</span> diff = <span class="built_in">max</span>(<span class="built_in">dot</span>(norm, lightDir), <span class="number">0.0</span>);</span><br><span class="line">    float3 diffuse = <span class="built_in">mul</span>(diff, lightColor);</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// specular</span></span><br><span class="line">    <span class="type">float</span> specularStrength = <span class="number">0.5</span>;</span><br><span class="line">    float3 viewDir = <span class="built_in">normalize</span>(viewPosition - input.worldPosition.xyz);</span><br><span class="line">    <span class="comment">//float3 reflectDir = reflect(-lightDir, norm);</span></span><br><span class="line">    float3 H = <span class="built_in">normalize</span>(lightDir + viewDir);</span><br><span class="line">    <span class="type">float</span> spec = <span class="built_in">pow</span>(<span class="built_in">max</span>(<span class="built_in">dot</span>(H, norm), <span class="number">0.0</span>), <span class="number">32</span>);</span><br><span class="line">    float3 specular = <span class="built_in">mul</span>(<span class="built_in">mul</span>(specularStrength, spec), lightColor);</span><br><span class="line">        </span><br><span class="line">    color = <span class="built_in">mul</span>((ambient + diffuse + specular), color.xyz);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> color;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="成果-1"><a href="#成果-1" class="headerlink" title="成果"></a>成果</h2><p><img data-src="https://cdn.jsdelivr.net/gh/JcMarical/mapstorage/images/image-20230722124204513.png" alt="image-20230722124204513"></p>
]]></content>
      <categories>
        <category>技术</category>
      </categories>
      <tags>
        <tag>Graphics</tag>
      </tags>
  </entry>
</search>
